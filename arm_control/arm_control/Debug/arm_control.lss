
arm_control.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  0000116e  00001202  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000116e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000095  0080011c  0080011c  0000121e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000121e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000127c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  000012bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001092  00000000  00000000  0000137c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000adb  00000000  00000000  0000240e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000709  00000000  00000000  00002ee9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001cc  00000000  00000000  000035f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000644  00000000  00000000  000037c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000030b  00000000  00000000  00003e04  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  0000410f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__ctors_end>
       4:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
       8:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
       c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      10:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      14:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      18:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      1c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      20:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      24:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      28:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      2c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      30:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      34:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      38:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      3c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      40:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      44:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      48:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      4c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      50:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      54:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      58:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      5c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      60:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      64:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      68:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      6c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      70:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      74:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      78:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      7c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      80:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      84:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      88:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      8c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      90:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      94:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      98:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      9c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      a0:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      a4:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      a8:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      ac:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
      b0:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>

000000b4 <__trampolines_end>:
      b4:	4e 41       	sbci	r20, 0x1E	; 30
      b6:	4e 49       	Address 0x000000b6 is out of bounds.
.word	0xffff	; ????

000000b7 <pstr_inity>:
      b7:	49 4e 49 54 59                                      INITY

000000bc <pstr_inf>:
      bc:	49 4e 46                                            INF

000000bf <pwr_m10>:
      bf:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      cf:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

000000d7 <pwr_p10>:
      d7:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
      e7:	ca 1b 0e 5a ae c5 9d 74 00 40 7a 10 f3 5a 00 a0     ...Z...t.@z..Z..
      f7:	72 4e 18 09 00 10 a5 d4 e8 00 00 e8 76 48 17 00     rN..........vH..
     107:	00 e4 0b 54 02 00 00 ca 9a 3b 00 00 00 e1 f5 05     ...T.....;......
     117:	00 00 80 96 98 00 00 00 40 42 0f 00 00 00 a0 86     ........@B......
     127:	01 00 00 00 10 27 00 00 00 00 e8 03 00 00 00 00     .....'..........
     137:	64 00 00 00 00 00 0a 00 00 00 00 00 01 00 00 00     d...............
     147:	00 00 2c 76 d8 88 dc 67 4f 08 23 df c1 df ae 59     ..,v...gO.#....Y
     157:	e1 b1 b7 96 e5 e3 e4 53 c6 3a e6 51 99 76 96 e8     .......S.:.Q.v..
     167:	e6 c2 84 26 eb 89 8c 9b 62 ed 40 7c 6f fc ef bc     ...&....b.@|o...
     177:	9c 9f 40 f2 ba a5 6f a5 f4 90 05 5a 2a f7 5c 93     ..@...o....Z*.\.
     187:	6b 6c f9 67 6d c1 1b fc e0 e4 0d 47 fe f5 20 e6     kl.gm......G.. .
     197:	b5 00 d0 ed 90 2e 03 00 94 35 77 05 00 80 84 1e     .........5w.....
     1a7:	08 00 00 20 4e 0a 00 00 00 c8 0c 33 33 33 33 0f     ... N......3333.
     1b7:	98 6e 12 83 11 41 ef 8d 21 14 89 3b e6 55 16 cf     .n...A..!..;.U..
     1c7:	fe e6 db 18 d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb     ......K8..|.....
     1d7:	e4 24 20 32 84 72 5e 22 81 00 c9 f1 24 ec a1 e5     .$ 2.r^"....$...
     1e7:	3d 27 00                                            ='.

000001ea <__ctors_end>:
     1ea:	11 24       	eor	r1, r1
     1ec:	1f be       	out	0x3f, r1	; 63
     1ee:	cf ef       	ldi	r28, 0xFF	; 255
     1f0:	d8 e0       	ldi	r29, 0x08	; 8
     1f2:	de bf       	out	0x3e, r29	; 62
     1f4:	cd bf       	out	0x3d, r28	; 61

000001f6 <__do_copy_data>:
     1f6:	11 e0       	ldi	r17, 0x01	; 1
     1f8:	a0 e0       	ldi	r26, 0x00	; 0
     1fa:	b1 e0       	ldi	r27, 0x01	; 1
     1fc:	ee e6       	ldi	r30, 0x6E	; 110
     1fe:	f1 e1       	ldi	r31, 0x11	; 17
     200:	02 c0       	rjmp	.+4      	; 0x206 <__do_copy_data+0x10>
     202:	05 90       	lpm	r0, Z+
     204:	0d 92       	st	X+, r0
     206:	ac 31       	cpi	r26, 0x1C	; 28
     208:	b1 07       	cpc	r27, r17
     20a:	d9 f7       	brne	.-10     	; 0x202 <__do_copy_data+0xc>

0000020c <__do_clear_bss>:
     20c:	21 e0       	ldi	r18, 0x01	; 1
     20e:	ac e1       	ldi	r26, 0x1C	; 28
     210:	b1 e0       	ldi	r27, 0x01	; 1
     212:	01 c0       	rjmp	.+2      	; 0x216 <.do_clear_bss_start>

00000214 <.do_clear_bss_loop>:
     214:	1d 92       	st	X+, r1

00000216 <.do_clear_bss_start>:
     216:	a1 3b       	cpi	r26, 0xB1	; 177
     218:	b2 07       	cpc	r27, r18
     21a:	e1 f7       	brne	.-8      	; 0x214 <.do_clear_bss_loop>
     21c:	0e 94 c7 02 	call	0x58e	; 0x58e <main>
     220:	0c 94 b5 08 	jmp	0x116a	; 0x116a <_exit>

00000224 <__bad_interrupt>:
     224:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000228 <PWM_timer0_initialize>:

float angleX, angleY, gyroZ_converted, flex_sensor_reading;

// Set up Timer 0 for Fast PWM mode with a frequency of 50Hz
void PWM_timer0_initialize() {
	TCCR0A = 0;
     228:	14 bc       	out	0x24, r1	; 36
	// Set the waveform generation mode to Fast PWM
	TCCR0A |= (1 << WGM01) | (1 << WGM00);
     22a:	84 b5       	in	r24, 0x24	; 36
     22c:	83 60       	ori	r24, 0x03	; 3
     22e:	84 bd       	out	0x24, r24	; 36
	TCCR0B &= ~(1 << WGM02);
     230:	85 b5       	in	r24, 0x25	; 37
     232:	87 7f       	andi	r24, 0xF7	; 247
     234:	85 bd       	out	0x25, r24	; 37
	// Set the compare output mode to non-inverting mode for both OC0A and OC0B
	TCCR0A |= (1 << COM0A1) | (1 << COM0B1);
     236:	84 b5       	in	r24, 0x24	; 36
     238:	80 6a       	ori	r24, 0xA0	; 160
     23a:	84 bd       	out	0x24, r24	; 36
	//TCCR0A &= ~((1 << COM0A0) | (1 << COM0B0));
	// Set the prescaler to 1024 to get a 61Hz frequency
	TCCR0B |= (1 << CS02) | (1 << CS00);
     23c:	85 b5       	in	r24, 0x25	; 37
     23e:	85 60       	ori	r24, 0x05	; 5
     240:	85 bd       	out	0x25, r24	; 37
	TCCR0B &= ~(1 << CS01);
     242:	85 b5       	in	r24, 0x25	; 37
     244:	8d 7f       	andi	r24, 0xFD	; 253
     246:	85 bd       	out	0x25, r24	; 37
	DDRD |= (1 << DDD6); // PD6 (OC0A) as output
     248:	8a b1       	in	r24, 0x0a	; 10
     24a:	80 64       	ori	r24, 0x40	; 64
     24c:	8a b9       	out	0x0a, r24	; 10
	DDRD |= (1 << DDD5); // PD5 (OC0B) as output
     24e:	8a b1       	in	r24, 0x0a	; 10
     250:	80 62       	ori	r24, 0x20	; 32
     252:	8a b9       	out	0x0a, r24	; 10
     254:	08 95       	ret

00000256 <PWM_timer1_initialize>:
}
void PWM_timer1_initialize() {
	DDRB |= (1 << DDB1);// PB1 for OC1A
     256:	84 b1       	in	r24, 0x04	; 4
     258:	82 60       	ori	r24, 0x02	; 2
     25a:	84 b9       	out	0x04, r24	; 4
	DDRB |= 1 << DDB2; //  PB2 for OC1B
     25c:	84 b1       	in	r24, 0x04	; 4
     25e:	84 60       	ori	r24, 0x04	; 4
     260:	84 b9       	out	0x04, r24	; 4
	TCCR1A = 0;
     262:	e0 e8       	ldi	r30, 0x80	; 128
     264:	f0 e0       	ldi	r31, 0x00	; 0
     266:	10 82       	st	Z, r1
	// Set up Timer1 for Fast PWM mode
	//TCCR1A |= (1 << COM1A1) | (1 << COM1B1);
	TCCR1A |= (1 << WGM11);
     268:	80 81       	ld	r24, Z
     26a:	82 60       	ori	r24, 0x02	; 2
     26c:	80 83       	st	Z, r24
	TCCR1B |= (1 << WGM12) | (1 << WGM13) | (1 << CS11); // prescaler = 8
     26e:	e1 e8       	ldi	r30, 0x81	; 129
     270:	f0 e0       	ldi	r31, 0x00	; 0
     272:	80 81       	ld	r24, Z
     274:	8a 61       	ori	r24, 0x1A	; 26
     276:	80 83       	st	Z, r24
	// Set the TOP value for 20ms period (50Hz frequency)
	ICR1 = 39999;
     278:	8f e3       	ldi	r24, 0x3F	; 63
     27a:	9c e9       	ldi	r25, 0x9C	; 156
     27c:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
     280:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     284:	08 95       	ret

00000286 <up_down_servo>:
}
// up_down_servo connects to PB1
void up_down_servo() {
     286:	cf 92       	push	r12
     288:	df 92       	push	r13
     28a:	ef 92       	push	r14
     28c:	ff 92       	push	r15
	if (angleX > 35) {
     28e:	c0 90 a7 01 	lds	r12, 0x01A7	; 0x8001a7 <angleX>
     292:	d0 90 a8 01 	lds	r13, 0x01A8	; 0x8001a8 <angleX+0x1>
     296:	e0 90 a9 01 	lds	r14, 0x01A9	; 0x8001a9 <angleX+0x2>
     29a:	f0 90 aa 01 	lds	r15, 0x01AA	; 0x8001aa <angleX+0x3>
     29e:	20 e0       	ldi	r18, 0x00	; 0
     2a0:	30 e0       	ldi	r19, 0x00	; 0
     2a2:	4c e0       	ldi	r20, 0x0C	; 12
     2a4:	52 e4       	ldi	r21, 0x42	; 66
     2a6:	c7 01       	movw	r24, r14
     2a8:	b6 01       	movw	r22, r12
     2aa:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__gesf2>
     2ae:	18 16       	cp	r1, r24
     2b0:	64 f4       	brge	.+24     	; 0x2ca <up_down_servo+0x44>
		TCCR1A |= (1 << COM1A1);
     2b2:	e0 e8       	ldi	r30, 0x80	; 128
     2b4:	f0 e0       	ldi	r31, 0x00	; 0
     2b6:	80 81       	ld	r24, Z
     2b8:	80 68       	ori	r24, 0x80	; 128
     2ba:	80 83       	st	Z, r24
		OCR1A = 1999;
     2bc:	8f ec       	ldi	r24, 0xCF	; 207
     2be:	97 e0       	ldi	r25, 0x07	; 7
     2c0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     2c4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
     2c8:	15 c0       	rjmp	.+42     	; 0x2f4 <up_down_servo+0x6e>
	}
	else if (angleX < -35) {
     2ca:	20 e0       	ldi	r18, 0x00	; 0
     2cc:	30 e0       	ldi	r19, 0x00	; 0
     2ce:	4c e0       	ldi	r20, 0x0C	; 12
     2d0:	52 ec       	ldi	r21, 0xC2	; 194
     2d2:	c7 01       	movw	r24, r14
     2d4:	b6 01       	movw	r22, r12
     2d6:	0e 94 47 03 	call	0x68e	; 0x68e <__cmpsf2>
     2da:	88 23       	and	r24, r24
     2dc:	5c f4       	brge	.+22     	; 0x2f4 <up_down_servo+0x6e>
		TCCR1A |= (1 << COM1A1);
     2de:	e0 e8       	ldi	r30, 0x80	; 128
     2e0:	f0 e0       	ldi	r31, 0x00	; 0
     2e2:	80 81       	ld	r24, Z
     2e4:	80 68       	ori	r24, 0x80	; 128
     2e6:	80 83       	st	Z, r24
		OCR1A = 4499;
     2e8:	83 e9       	ldi	r24, 0x93	; 147
     2ea:	91 e1       	ldi	r25, 0x11	; 17
     2ec:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     2f0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	}
}
     2f4:	ff 90       	pop	r15
     2f6:	ef 90       	pop	r14
     2f8:	df 90       	pop	r13
     2fa:	cf 90       	pop	r12
     2fc:	08 95       	ret

000002fe <fordward_backward_servo>:
void fordward_backward_servo() {
     2fe:	cf 92       	push	r12
     300:	df 92       	push	r13
     302:	ef 92       	push	r14
     304:	ff 92       	push	r15
	if (angleY > 35) {
     306:	c0 90 ab 01 	lds	r12, 0x01AB	; 0x8001ab <angleY>
     30a:	d0 90 ac 01 	lds	r13, 0x01AC	; 0x8001ac <angleY+0x1>
     30e:	e0 90 ad 01 	lds	r14, 0x01AD	; 0x8001ad <angleY+0x2>
     312:	f0 90 ae 01 	lds	r15, 0x01AE	; 0x8001ae <angleY+0x3>
     316:	20 e0       	ldi	r18, 0x00	; 0
     318:	30 e0       	ldi	r19, 0x00	; 0
     31a:	4c e0       	ldi	r20, 0x0C	; 12
     31c:	52 e4       	ldi	r21, 0x42	; 66
     31e:	c7 01       	movw	r24, r14
     320:	b6 01       	movw	r22, r12
     322:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__gesf2>
     326:	18 16       	cp	r1, r24
     328:	64 f4       	brge	.+24     	; 0x342 <fordward_backward_servo+0x44>
		TCCR1A |= (1 << COM1B1);
     32a:	e0 e8       	ldi	r30, 0x80	; 128
     32c:	f0 e0       	ldi	r31, 0x00	; 0
     32e:	80 81       	ld	r24, Z
     330:	80 62       	ori	r24, 0x20	; 32
     332:	80 83       	st	Z, r24
		OCR1B = 1999;
     334:	8f ec       	ldi	r24, 0xCF	; 207
     336:	97 e0       	ldi	r25, 0x07	; 7
     338:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
     33c:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
     340:	15 c0       	rjmp	.+42     	; 0x36c <fordward_backward_servo+0x6e>
	}
	else if (angleY < -35) {
     342:	20 e0       	ldi	r18, 0x00	; 0
     344:	30 e0       	ldi	r19, 0x00	; 0
     346:	4c e0       	ldi	r20, 0x0C	; 12
     348:	52 ec       	ldi	r21, 0xC2	; 194
     34a:	c7 01       	movw	r24, r14
     34c:	b6 01       	movw	r22, r12
     34e:	0e 94 47 03 	call	0x68e	; 0x68e <__cmpsf2>
     352:	88 23       	and	r24, r24
     354:	5c f4       	brge	.+22     	; 0x36c <fordward_backward_servo+0x6e>
		TCCR1A |= (1 << COM1B1);
     356:	e0 e8       	ldi	r30, 0x80	; 128
     358:	f0 e0       	ldi	r31, 0x00	; 0
     35a:	80 81       	ld	r24, Z
     35c:	80 62       	ori	r24, 0x20	; 32
     35e:	80 83       	st	Z, r24
		OCR1B = 3499;
     360:	8b ea       	ldi	r24, 0xAB	; 171
     362:	9d e0       	ldi	r25, 0x0D	; 13
     364:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
     368:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
	}
}
     36c:	ff 90       	pop	r15
     36e:	ef 90       	pop	r14
     370:	df 90       	pop	r13
     372:	cf 90       	pop	r12
     374:	08 95       	ret

00000376 <gripper_servo>:
void gripper_servo() {
     376:	cf 92       	push	r12
     378:	df 92       	push	r13
     37a:	ef 92       	push	r14
     37c:	ff 92       	push	r15
	if (flex_sensor_reading < 40 ) {
     37e:	c0 90 23 01 	lds	r12, 0x0123	; 0x800123 <flex_sensor_reading>
     382:	d0 90 24 01 	lds	r13, 0x0124	; 0x800124 <flex_sensor_reading+0x1>
     386:	e0 90 25 01 	lds	r14, 0x0125	; 0x800125 <flex_sensor_reading+0x2>
     38a:	f0 90 26 01 	lds	r15, 0x0126	; 0x800126 <flex_sensor_reading+0x3>
     38e:	20 e0       	ldi	r18, 0x00	; 0
     390:	30 e0       	ldi	r19, 0x00	; 0
     392:	40 e2       	ldi	r20, 0x20	; 32
     394:	52 e4       	ldi	r21, 0x42	; 66
     396:	c7 01       	movw	r24, r14
     398:	b6 01       	movw	r22, r12
     39a:	0e 94 47 03 	call	0x68e	; 0x68e <__cmpsf2>
     39e:	88 23       	and	r24, r24
     3a0:	34 f4       	brge	.+12     	; 0x3ae <gripper_servo+0x38>
		TCCR0A |= (1 << COM0A1) ;
     3a2:	84 b5       	in	r24, 0x24	; 36
     3a4:	80 68       	ori	r24, 0x80	; 128
     3a6:	84 bd       	out	0x24, r24	; 36
		OCR0A = 12; // close the gripper
     3a8:	8c e0       	ldi	r24, 0x0C	; 12
     3aa:	87 bd       	out	0x27, r24	; 39
     3ac:	0f c0       	rjmp	.+30     	; 0x3cc <gripper_servo+0x56>
	}
	else if (flex_sensor_reading > 40) {
     3ae:	20 e0       	ldi	r18, 0x00	; 0
     3b0:	30 e0       	ldi	r19, 0x00	; 0
     3b2:	40 e2       	ldi	r20, 0x20	; 32
     3b4:	52 e4       	ldi	r21, 0x42	; 66
     3b6:	c7 01       	movw	r24, r14
     3b8:	b6 01       	movw	r22, r12
     3ba:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__gesf2>
     3be:	18 16       	cp	r1, r24
     3c0:	2c f4       	brge	.+10     	; 0x3cc <gripper_servo+0x56>
		TCCR0A |= (1 << COM0A1) ;
     3c2:	84 b5       	in	r24, 0x24	; 36
     3c4:	80 68       	ori	r24, 0x80	; 128
     3c6:	84 bd       	out	0x24, r24	; 36
		OCR0A = 30; // open the gripper
     3c8:	8e e1       	ldi	r24, 0x1E	; 30
     3ca:	87 bd       	out	0x27, r24	; 39
	}
}
     3cc:	ff 90       	pop	r15
     3ce:	ef 90       	pop	r14
     3d0:	df 90       	pop	r13
     3d2:	cf 90       	pop	r12
     3d4:	08 95       	ret

000003d6 <base_servo>:
void base_servo() {
     3d6:	cf 92       	push	r12
     3d8:	df 92       	push	r13
     3da:	ef 92       	push	r14
     3dc:	ff 92       	push	r15
	if (gyroZ_converted > 100) {
     3de:	c0 90 1f 01 	lds	r12, 0x011F	; 0x80011f <gyroZ_converted>
     3e2:	d0 90 20 01 	lds	r13, 0x0120	; 0x800120 <gyroZ_converted+0x1>
     3e6:	e0 90 21 01 	lds	r14, 0x0121	; 0x800121 <gyroZ_converted+0x2>
     3ea:	f0 90 22 01 	lds	r15, 0x0122	; 0x800122 <gyroZ_converted+0x3>
     3ee:	20 e0       	ldi	r18, 0x00	; 0
     3f0:	30 e0       	ldi	r19, 0x00	; 0
     3f2:	48 ec       	ldi	r20, 0xC8	; 200
     3f4:	52 e4       	ldi	r21, 0x42	; 66
     3f6:	c7 01       	movw	r24, r14
     3f8:	b6 01       	movw	r22, r12
     3fa:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__gesf2>
     3fe:	18 16       	cp	r1, r24
     400:	34 f4       	brge	.+12     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
		TCCR0A |= (1 << COM0B1);
     402:	84 b5       	in	r24, 0x24	; 36
     404:	80 62       	ori	r24, 0x20	; 32
     406:	84 bd       	out	0x24, r24	; 36
		OCR0B = 35; // rotate to the right
     408:	83 e2       	ldi	r24, 0x23	; 35
     40a:	88 bd       	out	0x28, r24	; 40
     40c:	0f c0       	rjmp	.+30     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
	}
	else if (gyroZ_converted < -100) {
     40e:	20 e0       	ldi	r18, 0x00	; 0
     410:	30 e0       	ldi	r19, 0x00	; 0
     412:	48 ec       	ldi	r20, 0xC8	; 200
     414:	52 ec       	ldi	r21, 0xC2	; 194
     416:	c7 01       	movw	r24, r14
     418:	b6 01       	movw	r22, r12
     41a:	0e 94 47 03 	call	0x68e	; 0x68e <__cmpsf2>
     41e:	88 23       	and	r24, r24
     420:	2c f4       	brge	.+10     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
		TCCR0A |= (1 << COM0B1);
     422:	84 b5       	in	r24, 0x24	; 36
     424:	80 62       	ori	r24, 0x20	; 32
     426:	84 bd       	out	0x24, r24	; 36
		OCR0B = 12; // rotate to the left
     428:	8c e0       	ldi	r24, 0x0C	; 12
     42a:	88 bd       	out	0x28, r24	; 40
	}
}
     42c:	ff 90       	pop	r15
     42e:	ef 90       	pop	r14
     430:	df 90       	pop	r13
     432:	cf 90       	pop	r12
     434:	08 95       	ret

00000436 <parseBuffer>:

void parseBuffer(char *buffer) {
     436:	0f 93       	push	r16
     438:	1f 93       	push	r17
     43a:	cf 93       	push	r28
     43c:	df 93       	push	r29
     43e:	cd b7       	in	r28, 0x3d	; 61
     440:	de b7       	in	r29, 0x3e	; 62
     442:	64 97       	sbiw	r28, 0x14	; 20
     444:	0f b6       	in	r0, 0x3f	; 63
     446:	f8 94       	cli
     448:	de bf       	out	0x3e, r29	; 62
     44a:	0f be       	out	0x3f, r0	; 63
     44c:	cd bf       	out	0x3d, r28	; 61
	char *token = strtok(buffer, ",");  // Get the first token
     44e:	60 e0       	ldi	r22, 0x00	; 0
     450:	71 e0       	ldi	r23, 0x01	; 1
     452:	0e 94 99 03 	call	0x732	; 0x732 <strtok>
	if (token != NULL) {
     456:	00 97       	sbiw	r24, 0x00	; 0
     458:	81 f0       	breq	.+32     	; 0x47a <parseBuffer+0x44>
		flex_sensor_reading = atof(token);  // Convert the first token to float
     45a:	0e 94 95 03 	call	0x72a	; 0x72a <atof>
     45e:	60 93 23 01 	sts	0x0123, r22	; 0x800123 <flex_sensor_reading>
     462:	70 93 24 01 	sts	0x0124, r23	; 0x800124 <flex_sensor_reading+0x1>
     466:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <flex_sensor_reading+0x2>
     46a:	90 93 26 01 	sts	0x0126, r25	; 0x800126 <flex_sensor_reading+0x3>
		token = strtok(NULL, ",");
     46e:	60 e0       	ldi	r22, 0x00	; 0
     470:	71 e0       	ldi	r23, 0x01	; 1
     472:	80 e0       	ldi	r24, 0x00	; 0
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	0e 94 99 03 	call	0x732	; 0x732 <strtok>
	}
	if (token != NULL) {
     47a:	00 97       	sbiw	r24, 0x00	; 0
     47c:	81 f0       	breq	.+32     	; 0x49e <parseBuffer+0x68>
		angleX = atof(token);  // Convert to float
     47e:	0e 94 95 03 	call	0x72a	; 0x72a <atof>
     482:	60 93 a7 01 	sts	0x01A7, r22	; 0x8001a7 <angleX>
     486:	70 93 a8 01 	sts	0x01A8, r23	; 0x8001a8 <angleX+0x1>
     48a:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <angleX+0x2>
     48e:	90 93 aa 01 	sts	0x01AA, r25	; 0x8001aa <angleX+0x3>
		token = strtok(NULL, ",");
     492:	60 e0       	ldi	r22, 0x00	; 0
     494:	71 e0       	ldi	r23, 0x01	; 1
     496:	80 e0       	ldi	r24, 0x00	; 0
     498:	90 e0       	ldi	r25, 0x00	; 0
     49a:	0e 94 99 03 	call	0x732	; 0x732 <strtok>
	}
	if (token != NULL) {
     49e:	00 97       	sbiw	r24, 0x00	; 0
     4a0:	81 f0       	breq	.+32     	; 0x4c2 <parseBuffer+0x8c>
		angleY = atof(token);  // Convert to float
     4a2:	0e 94 95 03 	call	0x72a	; 0x72a <atof>
     4a6:	60 93 ab 01 	sts	0x01AB, r22	; 0x8001ab <angleY>
     4aa:	70 93 ac 01 	sts	0x01AC, r23	; 0x8001ac <angleY+0x1>
     4ae:	80 93 ad 01 	sts	0x01AD, r24	; 0x8001ad <angleY+0x2>
     4b2:	90 93 ae 01 	sts	0x01AE, r25	; 0x8001ae <angleY+0x3>
		token = strtok(NULL, ",");
     4b6:	60 e0       	ldi	r22, 0x00	; 0
     4b8:	71 e0       	ldi	r23, 0x01	; 1
     4ba:	80 e0       	ldi	r24, 0x00	; 0
     4bc:	90 e0       	ldi	r25, 0x00	; 0
     4be:	0e 94 99 03 	call	0x732	; 0x732 <strtok>
	}
	if (token != NULL) {
     4c2:	00 97       	sbiw	r24, 0x00	; 0
     4c4:	51 f0       	breq	.+20     	; 0x4da <parseBuffer+0xa4>
		gyroZ_converted = atof(token);  // Convert to float
     4c6:	0e 94 95 03 	call	0x72a	; 0x72a <atof>
     4ca:	60 93 1f 01 	sts	0x011F, r22	; 0x80011f <gyroZ_converted>
     4ce:	70 93 20 01 	sts	0x0120, r23	; 0x800120 <gyroZ_converted+0x1>
     4d2:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <gyroZ_converted+0x2>
     4d6:	90 93 22 01 	sts	0x0122, r25	; 0x800122 <gyroZ_converted+0x3>
	}
	char debugStr[20];
	dtostrf(flex_sensor_reading, 6, 2, debugStr);
     4da:	60 91 23 01 	lds	r22, 0x0123	; 0x800123 <flex_sensor_reading>
     4de:	70 91 24 01 	lds	r23, 0x0124	; 0x800124 <flex_sensor_reading+0x1>
     4e2:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <flex_sensor_reading+0x2>
     4e6:	90 91 26 01 	lds	r25, 0x0126	; 0x800126 <flex_sensor_reading+0x3>
     4ea:	8e 01       	movw	r16, r28
     4ec:	0f 5f       	subi	r16, 0xFF	; 255
     4ee:	1f 4f       	sbci	r17, 0xFF	; 255
     4f0:	22 e0       	ldi	r18, 0x02	; 2
     4f2:	46 e0       	ldi	r20, 0x06	; 6
     4f4:	0e 94 75 03 	call	0x6ea	; 0x6ea <dtostrf>
	UART0_putstring("Flex: ");
     4f8:	82 e0       	ldi	r24, 0x02	; 2
     4fa:	91 e0       	ldi	r25, 0x01	; 1
     4fc:	0e 94 2e 03 	call	0x65c	; 0x65c <UART0_putstring>
	UART0_putstring(debugStr);  // Output parsed values for verification
     500:	c8 01       	movw	r24, r16
     502:	0e 94 2e 03 	call	0x65c	; 0x65c <UART0_putstring>
	
	dtostrf(angleX, 6, 2, debugStr);
     506:	60 91 a7 01 	lds	r22, 0x01A7	; 0x8001a7 <angleX>
     50a:	70 91 a8 01 	lds	r23, 0x01A8	; 0x8001a8 <angleX+0x1>
     50e:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <angleX+0x2>
     512:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <angleX+0x3>
     516:	22 e0       	ldi	r18, 0x02	; 2
     518:	46 e0       	ldi	r20, 0x06	; 6
     51a:	0e 94 75 03 	call	0x6ea	; 0x6ea <dtostrf>
	UART0_putstring(", X: ");
     51e:	89 e0       	ldi	r24, 0x09	; 9
     520:	91 e0       	ldi	r25, 0x01	; 1
     522:	0e 94 2e 03 	call	0x65c	; 0x65c <UART0_putstring>
	UART0_putstring(debugStr);  // Output parsed values for verification
     526:	c8 01       	movw	r24, r16
     528:	0e 94 2e 03 	call	0x65c	; 0x65c <UART0_putstring>
	
	dtostrf(angleY, 6, 2, debugStr);
     52c:	60 91 ab 01 	lds	r22, 0x01AB	; 0x8001ab <angleY>
     530:	70 91 ac 01 	lds	r23, 0x01AC	; 0x8001ac <angleY+0x1>
     534:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <angleY+0x2>
     538:	90 91 ae 01 	lds	r25, 0x01AE	; 0x8001ae <angleY+0x3>
     53c:	22 e0       	ldi	r18, 0x02	; 2
     53e:	46 e0       	ldi	r20, 0x06	; 6
     540:	0e 94 75 03 	call	0x6ea	; 0x6ea <dtostrf>
	UART0_putstring(" Y: ");
     544:	8f e0       	ldi	r24, 0x0F	; 15
     546:	91 e0       	ldi	r25, 0x01	; 1
     548:	0e 94 2e 03 	call	0x65c	; 0x65c <UART0_putstring>
	UART0_putstring(debugStr);  // Output parsed values for verification
     54c:	c8 01       	movw	r24, r16
     54e:	0e 94 2e 03 	call	0x65c	; 0x65c <UART0_putstring>
	
	dtostrf(gyroZ_converted, 6, 2, debugStr);
     552:	60 91 1f 01 	lds	r22, 0x011F	; 0x80011f <gyroZ_converted>
     556:	70 91 20 01 	lds	r23, 0x0120	; 0x800120 <gyroZ_converted+0x1>
     55a:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <gyroZ_converted+0x2>
     55e:	90 91 22 01 	lds	r25, 0x0122	; 0x800122 <gyroZ_converted+0x3>
     562:	22 e0       	ldi	r18, 0x02	; 2
     564:	46 e0       	ldi	r20, 0x06	; 6
     566:	0e 94 75 03 	call	0x6ea	; 0x6ea <dtostrf>
	UART0_putstring(" Z: ");
     56a:	84 e1       	ldi	r24, 0x14	; 20
     56c:	91 e0       	ldi	r25, 0x01	; 1
     56e:	0e 94 2e 03 	call	0x65c	; 0x65c <UART0_putstring>
	UART0_putstring(debugStr);  // Output parsed values for verification
     572:	c8 01       	movw	r24, r16
     574:	0e 94 2e 03 	call	0x65c	; 0x65c <UART0_putstring>
	
}
     578:	64 96       	adiw	r28, 0x14	; 20
     57a:	0f b6       	in	r0, 0x3f	; 63
     57c:	f8 94       	cli
     57e:	de bf       	out	0x3e, r29	; 62
     580:	0f be       	out	0x3f, r0	; 63
     582:	cd bf       	out	0x3d, r28	; 61
     584:	df 91       	pop	r29
     586:	cf 91       	pop	r28
     588:	1f 91       	pop	r17
     58a:	0f 91       	pop	r16
     58c:	08 95       	ret

0000058e <main>:
int main(void) {
	// Initialize UART for communication
	UART0_init(USART_BAUD_PRESCALER);
     58e:	87 e6       	ldi	r24, 0x67	; 103
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	0e 94 09 03 	call	0x612	; 0x612 <UART0_init>
	UART1_init(USART_BAUD_PRESCALER);
     596:	87 e6       	ldi	r24, 0x67	; 103
     598:	90 e0       	ldi	r25, 0x00	; 0
     59a:	0e 94 18 03 	call	0x630	; 0x630 <UART1_init>
	cli();
     59e:	f8 94       	cli
	PWM_timer0_initialize();
     5a0:	0e 94 14 01 	call	0x228	; 0x228 <PWM_timer0_initialize>
	PWM_timer1_initialize();
     5a4:	0e 94 2b 01 	call	0x256	; 0x256 <PWM_timer1_initialize>
	sei();
     5a8:	78 94       	sei
	//static char buffer[20]; // Buffer to hold incoming characters
	static char float_buffer[20];
	static uint8_t bufferIndex = 0;

	// Set ESP RX pin (ATmega) as input
	DDRB &= ~(1 << ESP_RX_PIN);
     5aa:	84 b1       	in	r24, 0x04	; 4
     5ac:	84 b9       	out	0x04, r24	; 4

	while (1) {
		// Check if there is data available on UART1
		
		if (UART1_available()) {
     5ae:	0e 94 3b 03 	call	0x676	; 0x676 <UART1_available>
     5b2:	89 2b       	or	r24, r25
     5b4:	29 f1       	breq	.+74     	; 0x600 <main+0x72>
			char receivedChar = UART1_read();  // Read one character from UART1
     5b6:	0e 94 40 03 	call	0x680	; 0x680 <UART1_read>
			if (receivedChar == '\n' || receivedChar == '\r') {
     5ba:	8a 30       	cpi	r24, 0x0A	; 10
     5bc:	11 f0       	breq	.+4      	; 0x5c2 <main+0x34>
     5be:	8d 30       	cpi	r24, 0x0D	; 13
     5c0:	89 f4       	brne	.+34     	; 0x5e4 <main+0x56>
				// If the character is a newline, terminate the string
				buffer[buffer_pos] = '\0';
     5c2:	e0 91 1e 01 	lds	r30, 0x011E	; 0x80011e <buffer_pos>
     5c6:	f0 e0       	ldi	r31, 0x00	; 0
     5c8:	e9 5d       	subi	r30, 0xD9	; 217
     5ca:	fe 4f       	sbci	r31, 0xFE	; 254
     5cc:	10 82       	st	Z, r1
				// Output the complete string to UART0 (serial monitor)
				parseBuffer(buffer);  // Parse the buffer into variables
     5ce:	87 e2       	ldi	r24, 0x27	; 39
     5d0:	91 e0       	ldi	r25, 0x01	; 1
     5d2:	0e 94 1b 02 	call	0x436	; 0x436 <parseBuffer>
				//UART0_putstring(buffer);
				UART0_putstring("\r\n");
     5d6:	89 e1       	ldi	r24, 0x19	; 25
     5d8:	91 e0       	ldi	r25, 0x01	; 1
     5da:	0e 94 2e 03 	call	0x65c	; 0x65c <UART0_putstring>
				// Reset buffer for the next line
				buffer_pos = 0;
     5de:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <buffer_pos>
     5e2:	0e c0       	rjmp	.+28     	; 0x600 <main+0x72>
				} 
			else if (buffer_pos < BUFFER_SIZE - 1) {
     5e4:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <buffer_pos>
     5e8:	9f 37       	cpi	r25, 0x7F	; 127
     5ea:	50 f4       	brcc	.+20     	; 0x600 <main+0x72>
				// If the buffer is not full, add the character to the buffer
				buffer[buffer_pos++] = receivedChar;
     5ec:	e0 91 1e 01 	lds	r30, 0x011E	; 0x80011e <buffer_pos>
     5f0:	91 e0       	ldi	r25, 0x01	; 1
     5f2:	9e 0f       	add	r25, r30
     5f4:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <buffer_pos>
     5f8:	f0 e0       	ldi	r31, 0x00	; 0
     5fa:	e9 5d       	subi	r30, 0xD9	; 217
     5fc:	fe 4f       	sbci	r31, 0xFE	; 254
     5fe:	80 83       	st	Z, r24
			}
		}
		up_down_servo();
     600:	0e 94 43 01 	call	0x286	; 0x286 <up_down_servo>
		fordward_backward_servo();
     604:	0e 94 7f 01 	call	0x2fe	; 0x2fe <fordward_backward_servo>
		gripper_servo();
     608:	0e 94 bb 01 	call	0x376	; 0x376 <gripper_servo>
		base_servo();
     60c:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <base_servo>
    }
     610:	ce cf       	rjmp	.-100    	; 0x5ae <main+0x20>

00000612 <UART0_init>:
unsigned char UART0_read() {
	UART0_putstring("start reading");
	while (!(UCSR0A & (1 << RXC0))); // Wait until data is received
	UART0_putstring("data available");
	return UDR0; // Return received data
}
     612:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     616:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     61a:	88 e1       	ldi	r24, 0x18	; 24
     61c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     620:	e2 ec       	ldi	r30, 0xC2	; 194
     622:	f0 e0       	ldi	r31, 0x00	; 0
     624:	86 e0       	ldi	r24, 0x06	; 6
     626:	80 83       	st	Z, r24
     628:	80 81       	ld	r24, Z
     62a:	88 60       	ori	r24, 0x08	; 8
     62c:	80 83       	st	Z, r24
     62e:	08 95       	ret

00000630 <UART1_init>:
     630:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7f80cd>
     634:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7f80cc>
     638:	88 e1       	ldi	r24, 0x18	; 24
     63a:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7f80c9>
     63e:	ea ec       	ldi	r30, 0xCA	; 202
     640:	f0 e0       	ldi	r31, 0x00	; 0
     642:	86 e0       	ldi	r24, 0x06	; 6
     644:	80 83       	st	Z, r24
     646:	80 81       	ld	r24, Z
     648:	88 60       	ori	r24, 0x08	; 8
     64a:	80 83       	st	Z, r24
     64c:	08 95       	ret

0000064e <UART0_send>:
     64e:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     652:	95 ff       	sbrs	r25, 5
     654:	fc cf       	rjmp	.-8      	; 0x64e <UART0_send>
     656:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     65a:	08 95       	ret

0000065c <UART0_putstring>:
     65c:	cf 93       	push	r28
     65e:	df 93       	push	r29
     660:	ec 01       	movw	r28, r24
     662:	03 c0       	rjmp	.+6      	; 0x66a <UART0_putstring+0xe>
     664:	0e 94 27 03 	call	0x64e	; 0x64e <UART0_send>
     668:	21 96       	adiw	r28, 0x01	; 1
     66a:	88 81       	ld	r24, Y
     66c:	81 11       	cpse	r24, r1
     66e:	fa cf       	rjmp	.-12     	; 0x664 <UART0_putstring+0x8>
     670:	df 91       	pop	r29
     672:	cf 91       	pop	r28
     674:	08 95       	ret

00000676 <UART1_available>:
     676:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7f80c8>
     67a:	80 78       	andi	r24, 0x80	; 128
     67c:	90 e0       	ldi	r25, 0x00	; 0
     67e:	08 95       	ret

00000680 <UART1_read>:

// Function to read a byte from UART1
unsigned char UART1_read() {
	while (!(UCSR1A & (1 << RXC1))); // Wait until data is received
     680:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7f80c8>
     684:	88 23       	and	r24, r24
     686:	e4 f7       	brge	.-8      	; 0x680 <UART1_read>
	return UDR1; // Return received data
     688:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f80ce>
}
     68c:	08 95       	ret

0000068e <__cmpsf2>:
     68e:	0e 94 4c 03 	call	0x698	; 0x698 <__fp_cmp>
     692:	08 f4       	brcc	.+2      	; 0x696 <__cmpsf2+0x8>
     694:	81 e0       	ldi	r24, 0x01	; 1
     696:	08 95       	ret

00000698 <__fp_cmp>:
     698:	99 0f       	add	r25, r25
     69a:	00 08       	sbc	r0, r0
     69c:	55 0f       	add	r21, r21
     69e:	aa 0b       	sbc	r26, r26
     6a0:	e0 e8       	ldi	r30, 0x80	; 128
     6a2:	fe ef       	ldi	r31, 0xFE	; 254
     6a4:	16 16       	cp	r1, r22
     6a6:	17 06       	cpc	r1, r23
     6a8:	e8 07       	cpc	r30, r24
     6aa:	f9 07       	cpc	r31, r25
     6ac:	c0 f0       	brcs	.+48     	; 0x6de <__fp_cmp+0x46>
     6ae:	12 16       	cp	r1, r18
     6b0:	13 06       	cpc	r1, r19
     6b2:	e4 07       	cpc	r30, r20
     6b4:	f5 07       	cpc	r31, r21
     6b6:	98 f0       	brcs	.+38     	; 0x6de <__fp_cmp+0x46>
     6b8:	62 1b       	sub	r22, r18
     6ba:	73 0b       	sbc	r23, r19
     6bc:	84 0b       	sbc	r24, r20
     6be:	95 0b       	sbc	r25, r21
     6c0:	39 f4       	brne	.+14     	; 0x6d0 <__fp_cmp+0x38>
     6c2:	0a 26       	eor	r0, r26
     6c4:	61 f0       	breq	.+24     	; 0x6de <__fp_cmp+0x46>
     6c6:	23 2b       	or	r18, r19
     6c8:	24 2b       	or	r18, r20
     6ca:	25 2b       	or	r18, r21
     6cc:	21 f4       	brne	.+8      	; 0x6d6 <__fp_cmp+0x3e>
     6ce:	08 95       	ret
     6d0:	0a 26       	eor	r0, r26
     6d2:	09 f4       	brne	.+2      	; 0x6d6 <__fp_cmp+0x3e>
     6d4:	a1 40       	sbci	r26, 0x01	; 1
     6d6:	a6 95       	lsr	r26
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	81 1d       	adc	r24, r1
     6dc:	81 1d       	adc	r24, r1
     6de:	08 95       	ret

000006e0 <__gesf2>:
     6e0:	0e 94 4c 03 	call	0x698	; 0x698 <__fp_cmp>
     6e4:	08 f4       	brcc	.+2      	; 0x6e8 <__gesf2+0x8>
     6e6:	8f ef       	ldi	r24, 0xFF	; 255
     6e8:	08 95       	ret

000006ea <dtostrf>:
     6ea:	ef 92       	push	r14
     6ec:	0f 93       	push	r16
     6ee:	1f 93       	push	r17
     6f0:	cf 93       	push	r28
     6f2:	df 93       	push	r29
     6f4:	e8 01       	movw	r28, r16
     6f6:	47 fd       	sbrc	r20, 7
     6f8:	02 c0       	rjmp	.+4      	; 0x6fe <dtostrf+0x14>
     6fa:	34 e0       	ldi	r19, 0x04	; 4
     6fc:	01 c0       	rjmp	.+2      	; 0x700 <dtostrf+0x16>
     6fe:	34 e1       	ldi	r19, 0x14	; 20
     700:	04 2e       	mov	r0, r20
     702:	00 0c       	add	r0, r0
     704:	55 0b       	sbc	r21, r21
     706:	57 ff       	sbrs	r21, 7
     708:	03 c0       	rjmp	.+6      	; 0x710 <dtostrf+0x26>
     70a:	51 95       	neg	r21
     70c:	41 95       	neg	r20
     70e:	51 09       	sbc	r21, r1
     710:	e3 2e       	mov	r14, r19
     712:	02 2f       	mov	r16, r18
     714:	24 2f       	mov	r18, r20
     716:	ae 01       	movw	r20, r28
     718:	0e 94 c5 03 	call	0x78a	; 0x78a <dtoa_prf>
     71c:	ce 01       	movw	r24, r28
     71e:	df 91       	pop	r29
     720:	cf 91       	pop	r28
     722:	1f 91       	pop	r17
     724:	0f 91       	pop	r16
     726:	ef 90       	pop	r14
     728:	08 95       	ret

0000072a <atof>:
     72a:	66 27       	eor	r22, r22
     72c:	77 27       	eor	r23, r23
     72e:	0c 94 1f 05 	jmp	0xa3e	; 0xa3e <strtod>

00000732 <strtok>:
     732:	4c e1       	ldi	r20, 0x1C	; 28
     734:	51 e0       	ldi	r21, 0x01	; 1
     736:	0e 94 9e 03 	call	0x73c	; 0x73c <strtok_r>
     73a:	08 95       	ret

0000073c <strtok_r>:
     73c:	fa 01       	movw	r30, r20
     73e:	a1 91       	ld	r26, Z+
     740:	b0 81       	ld	r27, Z
     742:	00 97       	sbiw	r24, 0x00	; 0
     744:	19 f4       	brne	.+6      	; 0x74c <strtok_r+0x10>
     746:	10 97       	sbiw	r26, 0x00	; 0
     748:	e1 f0       	breq	.+56     	; 0x782 <strtok_r+0x46>
     74a:	cd 01       	movw	r24, r26
     74c:	dc 01       	movw	r26, r24
     74e:	cd 01       	movw	r24, r26
     750:	0d 90       	ld	r0, X+
     752:	00 20       	and	r0, r0
     754:	11 f4       	brne	.+4      	; 0x75a <strtok_r+0x1e>
     756:	c0 01       	movw	r24, r0
     758:	13 c0       	rjmp	.+38     	; 0x780 <strtok_r+0x44>
     75a:	fb 01       	movw	r30, r22
     75c:	21 91       	ld	r18, Z+
     75e:	22 23       	and	r18, r18
     760:	19 f0       	breq	.+6      	; 0x768 <strtok_r+0x2c>
     762:	20 15       	cp	r18, r0
     764:	d9 f7       	brne	.-10     	; 0x75c <strtok_r+0x20>
     766:	f3 cf       	rjmp	.-26     	; 0x74e <strtok_r+0x12>
     768:	fb 01       	movw	r30, r22
     76a:	21 91       	ld	r18, Z+
     76c:	20 15       	cp	r18, r0
     76e:	19 f4       	brne	.+6      	; 0x776 <strtok_r+0x3a>
     770:	1e 92       	st	-X, r1
     772:	11 96       	adiw	r26, 0x01	; 1
     774:	06 c0       	rjmp	.+12     	; 0x782 <strtok_r+0x46>
     776:	22 23       	and	r18, r18
     778:	c1 f7       	brne	.-16     	; 0x76a <strtok_r+0x2e>
     77a:	0d 90       	ld	r0, X+
     77c:	00 20       	and	r0, r0
     77e:	a1 f7       	brne	.-24     	; 0x768 <strtok_r+0x2c>
     780:	d0 01       	movw	r26, r0
     782:	fa 01       	movw	r30, r20
     784:	a1 93       	st	Z+, r26
     786:	b0 83       	st	Z, r27
     788:	08 95       	ret

0000078a <dtoa_prf>:
     78a:	a9 e0       	ldi	r26, 0x09	; 9
     78c:	b0 e0       	ldi	r27, 0x00	; 0
     78e:	eb ec       	ldi	r30, 0xCB	; 203
     790:	f3 e0       	ldi	r31, 0x03	; 3
     792:	0c 94 75 08 	jmp	0x10ea	; 0x10ea <__prologue_saves__+0xc>
     796:	6a 01       	movw	r12, r20
     798:	12 2f       	mov	r17, r18
     79a:	b0 2e       	mov	r11, r16
     79c:	2b e3       	ldi	r18, 0x3B	; 59
     79e:	20 17       	cp	r18, r16
     7a0:	20 f0       	brcs	.+8      	; 0x7aa <dtoa_prf+0x20>
     7a2:	ff 24       	eor	r15, r15
     7a4:	f3 94       	inc	r15
     7a6:	f0 0e       	add	r15, r16
     7a8:	02 c0       	rjmp	.+4      	; 0x7ae <dtoa_prf+0x24>
     7aa:	2c e3       	ldi	r18, 0x3C	; 60
     7ac:	f2 2e       	mov	r15, r18
     7ae:	0f 2d       	mov	r16, r15
     7b0:	27 e0       	ldi	r18, 0x07	; 7
     7b2:	ae 01       	movw	r20, r28
     7b4:	4f 5f       	subi	r20, 0xFF	; 255
     7b6:	5f 4f       	sbci	r21, 0xFF	; 255
     7b8:	0e 94 6d 06 	call	0xcda	; 0xcda <__ftoa_engine>
     7bc:	bc 01       	movw	r22, r24
     7be:	49 81       	ldd	r20, Y+1	; 0x01
     7c0:	84 2f       	mov	r24, r20
     7c2:	89 70       	andi	r24, 0x09	; 9
     7c4:	81 30       	cpi	r24, 0x01	; 1
     7c6:	31 f0       	breq	.+12     	; 0x7d4 <dtoa_prf+0x4a>
     7c8:	e1 fc       	sbrc	r14, 1
     7ca:	06 c0       	rjmp	.+12     	; 0x7d8 <dtoa_prf+0x4e>
     7cc:	e0 fe       	sbrs	r14, 0
     7ce:	06 c0       	rjmp	.+12     	; 0x7dc <dtoa_prf+0x52>
     7d0:	90 e2       	ldi	r25, 0x20	; 32
     7d2:	05 c0       	rjmp	.+10     	; 0x7de <dtoa_prf+0x54>
     7d4:	9d e2       	ldi	r25, 0x2D	; 45
     7d6:	03 c0       	rjmp	.+6      	; 0x7de <dtoa_prf+0x54>
     7d8:	9b e2       	ldi	r25, 0x2B	; 43
     7da:	01 c0       	rjmp	.+2      	; 0x7de <dtoa_prf+0x54>
     7dc:	90 e0       	ldi	r25, 0x00	; 0
     7de:	5e 2d       	mov	r21, r14
     7e0:	50 71       	andi	r21, 0x10	; 16
     7e2:	43 ff       	sbrs	r20, 3
     7e4:	3c c0       	rjmp	.+120    	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
     7e6:	91 11       	cpse	r25, r1
     7e8:	02 c0       	rjmp	.+4      	; 0x7ee <dtoa_prf+0x64>
     7ea:	83 e0       	ldi	r24, 0x03	; 3
     7ec:	01 c0       	rjmp	.+2      	; 0x7f0 <dtoa_prf+0x66>
     7ee:	84 e0       	ldi	r24, 0x04	; 4
     7f0:	81 17       	cp	r24, r17
     7f2:	18 f4       	brcc	.+6      	; 0x7fa <dtoa_prf+0x70>
     7f4:	21 2f       	mov	r18, r17
     7f6:	28 1b       	sub	r18, r24
     7f8:	01 c0       	rjmp	.+2      	; 0x7fc <dtoa_prf+0x72>
     7fa:	20 e0       	ldi	r18, 0x00	; 0
     7fc:	51 11       	cpse	r21, r1
     7fe:	0b c0       	rjmp	.+22     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
     800:	f6 01       	movw	r30, r12
     802:	82 2f       	mov	r24, r18
     804:	30 e2       	ldi	r19, 0x20	; 32
     806:	88 23       	and	r24, r24
     808:	19 f0       	breq	.+6      	; 0x810 <__DATA_REGION_LENGTH__+0x10>
     80a:	31 93       	st	Z+, r19
     80c:	81 50       	subi	r24, 0x01	; 1
     80e:	fb cf       	rjmp	.-10     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     810:	c2 0e       	add	r12, r18
     812:	d1 1c       	adc	r13, r1
     814:	20 e0       	ldi	r18, 0x00	; 0
     816:	99 23       	and	r25, r25
     818:	29 f0       	breq	.+10     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
     81a:	d6 01       	movw	r26, r12
     81c:	9c 93       	st	X, r25
     81e:	f6 01       	movw	r30, r12
     820:	31 96       	adiw	r30, 0x01	; 1
     822:	6f 01       	movw	r12, r30
     824:	c6 01       	movw	r24, r12
     826:	03 96       	adiw	r24, 0x03	; 3
     828:	e2 fe       	sbrs	r14, 2
     82a:	0a c0       	rjmp	.+20     	; 0x840 <__DATA_REGION_LENGTH__+0x40>
     82c:	3e e4       	ldi	r19, 0x4E	; 78
     82e:	d6 01       	movw	r26, r12
     830:	3c 93       	st	X, r19
     832:	41 e4       	ldi	r20, 0x41	; 65
     834:	11 96       	adiw	r26, 0x01	; 1
     836:	4c 93       	st	X, r20
     838:	11 97       	sbiw	r26, 0x01	; 1
     83a:	12 96       	adiw	r26, 0x02	; 2
     83c:	3c 93       	st	X, r19
     83e:	06 c0       	rjmp	.+12     	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
     840:	3e e6       	ldi	r19, 0x6E	; 110
     842:	f6 01       	movw	r30, r12
     844:	30 83       	st	Z, r19
     846:	41 e6       	ldi	r20, 0x61	; 97
     848:	41 83       	std	Z+1, r20	; 0x01
     84a:	32 83       	std	Z+2, r19	; 0x02
     84c:	fc 01       	movw	r30, r24
     84e:	32 2f       	mov	r19, r18
     850:	40 e2       	ldi	r20, 0x20	; 32
     852:	33 23       	and	r19, r19
     854:	09 f4       	brne	.+2      	; 0x858 <__DATA_REGION_LENGTH__+0x58>
     856:	42 c0       	rjmp	.+132    	; 0x8dc <__DATA_REGION_LENGTH__+0xdc>
     858:	41 93       	st	Z+, r20
     85a:	31 50       	subi	r19, 0x01	; 1
     85c:	fa cf       	rjmp	.-12     	; 0x852 <__DATA_REGION_LENGTH__+0x52>
     85e:	42 ff       	sbrs	r20, 2
     860:	44 c0       	rjmp	.+136    	; 0x8ea <__DATA_REGION_LENGTH__+0xea>
     862:	91 11       	cpse	r25, r1
     864:	02 c0       	rjmp	.+4      	; 0x86a <__DATA_REGION_LENGTH__+0x6a>
     866:	83 e0       	ldi	r24, 0x03	; 3
     868:	01 c0       	rjmp	.+2      	; 0x86c <__DATA_REGION_LENGTH__+0x6c>
     86a:	84 e0       	ldi	r24, 0x04	; 4
     86c:	81 17       	cp	r24, r17
     86e:	18 f4       	brcc	.+6      	; 0x876 <__DATA_REGION_LENGTH__+0x76>
     870:	21 2f       	mov	r18, r17
     872:	28 1b       	sub	r18, r24
     874:	01 c0       	rjmp	.+2      	; 0x878 <__DATA_REGION_LENGTH__+0x78>
     876:	20 e0       	ldi	r18, 0x00	; 0
     878:	51 11       	cpse	r21, r1
     87a:	0b c0       	rjmp	.+22     	; 0x892 <__DATA_REGION_LENGTH__+0x92>
     87c:	f6 01       	movw	r30, r12
     87e:	82 2f       	mov	r24, r18
     880:	30 e2       	ldi	r19, 0x20	; 32
     882:	88 23       	and	r24, r24
     884:	19 f0       	breq	.+6      	; 0x88c <__DATA_REGION_LENGTH__+0x8c>
     886:	31 93       	st	Z+, r19
     888:	81 50       	subi	r24, 0x01	; 1
     88a:	fb cf       	rjmp	.-10     	; 0x882 <__DATA_REGION_LENGTH__+0x82>
     88c:	c2 0e       	add	r12, r18
     88e:	d1 1c       	adc	r13, r1
     890:	20 e0       	ldi	r18, 0x00	; 0
     892:	99 23       	and	r25, r25
     894:	29 f0       	breq	.+10     	; 0x8a0 <__DATA_REGION_LENGTH__+0xa0>
     896:	d6 01       	movw	r26, r12
     898:	9c 93       	st	X, r25
     89a:	f6 01       	movw	r30, r12
     89c:	31 96       	adiw	r30, 0x01	; 1
     89e:	6f 01       	movw	r12, r30
     8a0:	c6 01       	movw	r24, r12
     8a2:	03 96       	adiw	r24, 0x03	; 3
     8a4:	e2 fe       	sbrs	r14, 2
     8a6:	0b c0       	rjmp	.+22     	; 0x8be <__DATA_REGION_LENGTH__+0xbe>
     8a8:	39 e4       	ldi	r19, 0x49	; 73
     8aa:	d6 01       	movw	r26, r12
     8ac:	3c 93       	st	X, r19
     8ae:	3e e4       	ldi	r19, 0x4E	; 78
     8b0:	11 96       	adiw	r26, 0x01	; 1
     8b2:	3c 93       	st	X, r19
     8b4:	11 97       	sbiw	r26, 0x01	; 1
     8b6:	36 e4       	ldi	r19, 0x46	; 70
     8b8:	12 96       	adiw	r26, 0x02	; 2
     8ba:	3c 93       	st	X, r19
     8bc:	07 c0       	rjmp	.+14     	; 0x8cc <__DATA_REGION_LENGTH__+0xcc>
     8be:	39 e6       	ldi	r19, 0x69	; 105
     8c0:	f6 01       	movw	r30, r12
     8c2:	30 83       	st	Z, r19
     8c4:	3e e6       	ldi	r19, 0x6E	; 110
     8c6:	31 83       	std	Z+1, r19	; 0x01
     8c8:	36 e6       	ldi	r19, 0x66	; 102
     8ca:	32 83       	std	Z+2, r19	; 0x02
     8cc:	fc 01       	movw	r30, r24
     8ce:	32 2f       	mov	r19, r18
     8d0:	40 e2       	ldi	r20, 0x20	; 32
     8d2:	33 23       	and	r19, r19
     8d4:	19 f0       	breq	.+6      	; 0x8dc <__DATA_REGION_LENGTH__+0xdc>
     8d6:	41 93       	st	Z+, r20
     8d8:	31 50       	subi	r19, 0x01	; 1
     8da:	fb cf       	rjmp	.-10     	; 0x8d2 <__DATA_REGION_LENGTH__+0xd2>
     8dc:	fc 01       	movw	r30, r24
     8de:	e2 0f       	add	r30, r18
     8e0:	f1 1d       	adc	r31, r1
     8e2:	10 82       	st	Z, r1
     8e4:	8e ef       	ldi	r24, 0xFE	; 254
     8e6:	9f ef       	ldi	r25, 0xFF	; 255
     8e8:	a6 c0       	rjmp	.+332    	; 0xa36 <__stack+0x137>
     8ea:	21 e0       	ldi	r18, 0x01	; 1
     8ec:	30 e0       	ldi	r19, 0x00	; 0
     8ee:	91 11       	cpse	r25, r1
     8f0:	02 c0       	rjmp	.+4      	; 0x8f6 <__DATA_REGION_LENGTH__+0xf6>
     8f2:	20 e0       	ldi	r18, 0x00	; 0
     8f4:	30 e0       	ldi	r19, 0x00	; 0
     8f6:	16 16       	cp	r1, r22
     8f8:	17 06       	cpc	r1, r23
     8fa:	1c f4       	brge	.+6      	; 0x902 <__stack+0x3>
     8fc:	fb 01       	movw	r30, r22
     8fe:	31 96       	adiw	r30, 0x01	; 1
     900:	02 c0       	rjmp	.+4      	; 0x906 <__stack+0x7>
     902:	e1 e0       	ldi	r30, 0x01	; 1
     904:	f0 e0       	ldi	r31, 0x00	; 0
     906:	2e 0f       	add	r18, r30
     908:	3f 1f       	adc	r19, r31
     90a:	bb 20       	and	r11, r11
     90c:	21 f0       	breq	.+8      	; 0x916 <__stack+0x17>
     90e:	eb 2d       	mov	r30, r11
     910:	f0 e0       	ldi	r31, 0x00	; 0
     912:	31 96       	adiw	r30, 0x01	; 1
     914:	02 c0       	rjmp	.+4      	; 0x91a <__stack+0x1b>
     916:	e0 e0       	ldi	r30, 0x00	; 0
     918:	f0 e0       	ldi	r31, 0x00	; 0
     91a:	2e 0f       	add	r18, r30
     91c:	3f 1f       	adc	r19, r31
     91e:	e1 2f       	mov	r30, r17
     920:	f0 e0       	ldi	r31, 0x00	; 0
     922:	2e 17       	cp	r18, r30
     924:	3f 07       	cpc	r19, r31
     926:	1c f4       	brge	.+6      	; 0x92e <__stack+0x2f>
     928:	12 1b       	sub	r17, r18
     92a:	21 2f       	mov	r18, r17
     92c:	01 c0       	rjmp	.+2      	; 0x930 <__stack+0x31>
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	8e 2d       	mov	r24, r14
     932:	88 71       	andi	r24, 0x18	; 24
     934:	59 f4       	brne	.+22     	; 0x94c <__stack+0x4d>
     936:	f6 01       	movw	r30, r12
     938:	82 2f       	mov	r24, r18
     93a:	30 e2       	ldi	r19, 0x20	; 32
     93c:	88 23       	and	r24, r24
     93e:	19 f0       	breq	.+6      	; 0x946 <__stack+0x47>
     940:	31 93       	st	Z+, r19
     942:	81 50       	subi	r24, 0x01	; 1
     944:	fb cf       	rjmp	.-10     	; 0x93c <__stack+0x3d>
     946:	c2 0e       	add	r12, r18
     948:	d1 1c       	adc	r13, r1
     94a:	20 e0       	ldi	r18, 0x00	; 0
     94c:	99 23       	and	r25, r25
     94e:	29 f0       	breq	.+10     	; 0x95a <__stack+0x5b>
     950:	d6 01       	movw	r26, r12
     952:	9c 93       	st	X, r25
     954:	f6 01       	movw	r30, r12
     956:	31 96       	adiw	r30, 0x01	; 1
     958:	6f 01       	movw	r12, r30
     95a:	51 11       	cpse	r21, r1
     95c:	0b c0       	rjmp	.+22     	; 0x974 <__stack+0x75>
     95e:	f6 01       	movw	r30, r12
     960:	82 2f       	mov	r24, r18
     962:	90 e3       	ldi	r25, 0x30	; 48
     964:	88 23       	and	r24, r24
     966:	19 f0       	breq	.+6      	; 0x96e <__stack+0x6f>
     968:	91 93       	st	Z+, r25
     96a:	81 50       	subi	r24, 0x01	; 1
     96c:	fb cf       	rjmp	.-10     	; 0x964 <__stack+0x65>
     96e:	c2 0e       	add	r12, r18
     970:	d1 1c       	adc	r13, r1
     972:	20 e0       	ldi	r18, 0x00	; 0
     974:	0f 2d       	mov	r16, r15
     976:	06 0f       	add	r16, r22
     978:	9a 81       	ldd	r25, Y+2	; 0x02
     97a:	34 2f       	mov	r19, r20
     97c:	30 71       	andi	r19, 0x10	; 16
     97e:	44 ff       	sbrs	r20, 4
     980:	03 c0       	rjmp	.+6      	; 0x988 <__stack+0x89>
     982:	91 33       	cpi	r25, 0x31	; 49
     984:	09 f4       	brne	.+2      	; 0x988 <__stack+0x89>
     986:	01 50       	subi	r16, 0x01	; 1
     988:	10 16       	cp	r1, r16
     98a:	24 f4       	brge	.+8      	; 0x994 <__stack+0x95>
     98c:	09 30       	cpi	r16, 0x09	; 9
     98e:	18 f0       	brcs	.+6      	; 0x996 <__stack+0x97>
     990:	08 e0       	ldi	r16, 0x08	; 8
     992:	01 c0       	rjmp	.+2      	; 0x996 <__stack+0x97>
     994:	01 e0       	ldi	r16, 0x01	; 1
     996:	ab 01       	movw	r20, r22
     998:	77 ff       	sbrs	r23, 7
     99a:	02 c0       	rjmp	.+4      	; 0x9a0 <__stack+0xa1>
     99c:	40 e0       	ldi	r20, 0x00	; 0
     99e:	50 e0       	ldi	r21, 0x00	; 0
     9a0:	fb 01       	movw	r30, r22
     9a2:	e4 1b       	sub	r30, r20
     9a4:	f5 0b       	sbc	r31, r21
     9a6:	a1 e0       	ldi	r26, 0x01	; 1
     9a8:	b0 e0       	ldi	r27, 0x00	; 0
     9aa:	ac 0f       	add	r26, r28
     9ac:	bd 1f       	adc	r27, r29
     9ae:	ea 0f       	add	r30, r26
     9b0:	fb 1f       	adc	r31, r27
     9b2:	8e e2       	ldi	r24, 0x2E	; 46
     9b4:	a8 2e       	mov	r10, r24
     9b6:	4b 01       	movw	r8, r22
     9b8:	80 1a       	sub	r8, r16
     9ba:	91 08       	sbc	r9, r1
     9bc:	0b 2d       	mov	r16, r11
     9be:	10 e0       	ldi	r17, 0x00	; 0
     9c0:	11 95       	neg	r17
     9c2:	01 95       	neg	r16
     9c4:	11 09       	sbc	r17, r1
     9c6:	4f 3f       	cpi	r20, 0xFF	; 255
     9c8:	bf ef       	ldi	r27, 0xFF	; 255
     9ca:	5b 07       	cpc	r21, r27
     9cc:	21 f4       	brne	.+8      	; 0x9d6 <__stack+0xd7>
     9ce:	d6 01       	movw	r26, r12
     9d0:	ac 92       	st	X, r10
     9d2:	11 96       	adiw	r26, 0x01	; 1
     9d4:	6d 01       	movw	r12, r26
     9d6:	64 17       	cp	r22, r20
     9d8:	75 07       	cpc	r23, r21
     9da:	2c f0       	brlt	.+10     	; 0x9e6 <__stack+0xe7>
     9dc:	84 16       	cp	r8, r20
     9de:	95 06       	cpc	r9, r21
     9e0:	14 f4       	brge	.+4      	; 0x9e6 <__stack+0xe7>
     9e2:	81 81       	ldd	r24, Z+1	; 0x01
     9e4:	01 c0       	rjmp	.+2      	; 0x9e8 <__stack+0xe9>
     9e6:	80 e3       	ldi	r24, 0x30	; 48
     9e8:	41 50       	subi	r20, 0x01	; 1
     9ea:	51 09       	sbc	r21, r1
     9ec:	31 96       	adiw	r30, 0x01	; 1
     9ee:	d6 01       	movw	r26, r12
     9f0:	11 96       	adiw	r26, 0x01	; 1
     9f2:	7d 01       	movw	r14, r26
     9f4:	40 17       	cp	r20, r16
     9f6:	51 07       	cpc	r21, r17
     9f8:	24 f0       	brlt	.+8      	; 0xa02 <__stack+0x103>
     9fa:	d6 01       	movw	r26, r12
     9fc:	8c 93       	st	X, r24
     9fe:	67 01       	movw	r12, r14
     a00:	e2 cf       	rjmp	.-60     	; 0x9c6 <__stack+0xc7>
     a02:	64 17       	cp	r22, r20
     a04:	75 07       	cpc	r23, r21
     a06:	39 f4       	brne	.+14     	; 0xa16 <__stack+0x117>
     a08:	96 33       	cpi	r25, 0x36	; 54
     a0a:	20 f4       	brcc	.+8      	; 0xa14 <__stack+0x115>
     a0c:	95 33       	cpi	r25, 0x35	; 53
     a0e:	19 f4       	brne	.+6      	; 0xa16 <__stack+0x117>
     a10:	31 11       	cpse	r19, r1
     a12:	01 c0       	rjmp	.+2      	; 0xa16 <__stack+0x117>
     a14:	81 e3       	ldi	r24, 0x31	; 49
     a16:	f6 01       	movw	r30, r12
     a18:	80 83       	st	Z, r24
     a1a:	f7 01       	movw	r30, r14
     a1c:	82 2f       	mov	r24, r18
     a1e:	90 e2       	ldi	r25, 0x20	; 32
     a20:	88 23       	and	r24, r24
     a22:	19 f0       	breq	.+6      	; 0xa2a <__stack+0x12b>
     a24:	91 93       	st	Z+, r25
     a26:	81 50       	subi	r24, 0x01	; 1
     a28:	fb cf       	rjmp	.-10     	; 0xa20 <__stack+0x121>
     a2a:	f7 01       	movw	r30, r14
     a2c:	e2 0f       	add	r30, r18
     a2e:	f1 1d       	adc	r31, r1
     a30:	10 82       	st	Z, r1
     a32:	80 e0       	ldi	r24, 0x00	; 0
     a34:	90 e0       	ldi	r25, 0x00	; 0
     a36:	29 96       	adiw	r28, 0x09	; 9
     a38:	ec e0       	ldi	r30, 0x0C	; 12
     a3a:	0c 94 91 08 	jmp	0x1122	; 0x1122 <__epilogue_restores__+0xc>

00000a3e <strtod>:
     a3e:	a0 e0       	ldi	r26, 0x00	; 0
     a40:	b0 e0       	ldi	r27, 0x00	; 0
     a42:	e5 e2       	ldi	r30, 0x25	; 37
     a44:	f5 e0       	ldi	r31, 0x05	; 5
     a46:	0c 94 75 08 	jmp	0x10ea	; 0x10ea <__prologue_saves__+0xc>
     a4a:	ec 01       	movw	r28, r24
     a4c:	6b 01       	movw	r12, r22
     a4e:	61 15       	cp	r22, r1
     a50:	71 05       	cpc	r23, r1
     a52:	19 f0       	breq	.+6      	; 0xa5a <strtod+0x1c>
     a54:	fb 01       	movw	r30, r22
     a56:	91 83       	std	Z+1, r25	; 0x01
     a58:	80 83       	st	Z, r24
     a5a:	7e 01       	movw	r14, r28
     a5c:	ff ef       	ldi	r31, 0xFF	; 255
     a5e:	ef 1a       	sub	r14, r31
     a60:	ff 0a       	sbc	r15, r31
     a62:	08 81       	ld	r16, Y
     a64:	80 2f       	mov	r24, r16
     a66:	90 e0       	ldi	r25, 0x00	; 0
     a68:	0e 94 45 07 	call	0xe8a	; 0xe8a <isspace>
     a6c:	89 2b       	or	r24, r25
     a6e:	11 f0       	breq	.+4      	; 0xa74 <strtod+0x36>
     a70:	e7 01       	movw	r28, r14
     a72:	f3 cf       	rjmp	.-26     	; 0xa5a <strtod+0x1c>
     a74:	0d 32       	cpi	r16, 0x2D	; 45
     a76:	39 f4       	brne	.+14     	; 0xa86 <strtod+0x48>
     a78:	7e 01       	movw	r14, r28
     a7a:	82 e0       	ldi	r24, 0x02	; 2
     a7c:	e8 0e       	add	r14, r24
     a7e:	f1 1c       	adc	r15, r1
     a80:	09 81       	ldd	r16, Y+1	; 0x01
     a82:	11 e0       	ldi	r17, 0x01	; 1
     a84:	08 c0       	rjmp	.+16     	; 0xa96 <strtod+0x58>
     a86:	0b 32       	cpi	r16, 0x2B	; 43
     a88:	29 f4       	brne	.+10     	; 0xa94 <strtod+0x56>
     a8a:	7e 01       	movw	r14, r28
     a8c:	92 e0       	ldi	r25, 0x02	; 2
     a8e:	e9 0e       	add	r14, r25
     a90:	f1 1c       	adc	r15, r1
     a92:	09 81       	ldd	r16, Y+1	; 0x01
     a94:	10 e0       	ldi	r17, 0x00	; 0
     a96:	e7 01       	movw	r28, r14
     a98:	21 97       	sbiw	r28, 0x01	; 1
     a9a:	43 e0       	ldi	r20, 0x03	; 3
     a9c:	50 e0       	ldi	r21, 0x00	; 0
     a9e:	6c eb       	ldi	r22, 0xBC	; 188
     aa0:	70 e0       	ldi	r23, 0x00	; 0
     aa2:	ce 01       	movw	r24, r28
     aa4:	0e 94 4e 07 	call	0xe9c	; 0xe9c <strncasecmp_P>
     aa8:	89 2b       	or	r24, r25
     aaa:	c1 f4       	brne	.+48     	; 0xadc <strtod+0x9e>
     aac:	23 96       	adiw	r28, 0x03	; 3
     aae:	45 e0       	ldi	r20, 0x05	; 5
     ab0:	50 e0       	ldi	r21, 0x00	; 0
     ab2:	67 eb       	ldi	r22, 0xB7	; 183
     ab4:	70 e0       	ldi	r23, 0x00	; 0
     ab6:	ce 01       	movw	r24, r28
     ab8:	0e 94 4e 07 	call	0xe9c	; 0xe9c <strncasecmp_P>
     abc:	89 2b       	or	r24, r25
     abe:	09 f4       	brne	.+2      	; 0xac2 <strtod+0x84>
     ac0:	25 96       	adiw	r28, 0x05	; 5
     ac2:	c1 14       	cp	r12, r1
     ac4:	d1 04       	cpc	r13, r1
     ac6:	19 f0       	breq	.+6      	; 0xace <strtod+0x90>
     ac8:	f6 01       	movw	r30, r12
     aca:	d1 83       	std	Z+1, r29	; 0x01
     acc:	c0 83       	st	Z, r28
     ace:	11 11       	cpse	r17, r1
     ad0:	f6 c0       	rjmp	.+492    	; 0xcbe <strtod+0x280>
     ad2:	60 e0       	ldi	r22, 0x00	; 0
     ad4:	70 e0       	ldi	r23, 0x00	; 0
     ad6:	80 e8       	ldi	r24, 0x80	; 128
     ad8:	9f e7       	ldi	r25, 0x7F	; 127
     ada:	fa c0       	rjmp	.+500    	; 0xcd0 <strtod+0x292>
     adc:	43 e0       	ldi	r20, 0x03	; 3
     ade:	50 e0       	ldi	r21, 0x00	; 0
     ae0:	64 eb       	ldi	r22, 0xB4	; 180
     ae2:	70 e0       	ldi	r23, 0x00	; 0
     ae4:	ce 01       	movw	r24, r28
     ae6:	0e 94 4e 07 	call	0xe9c	; 0xe9c <strncasecmp_P>
     aea:	89 2b       	or	r24, r25
     aec:	59 f4       	brne	.+22     	; 0xb04 <strtod+0xc6>
     aee:	c1 14       	cp	r12, r1
     af0:	d1 04       	cpc	r13, r1
     af2:	09 f4       	brne	.+2      	; 0xaf6 <strtod+0xb8>
     af4:	e9 c0       	rjmp	.+466    	; 0xcc8 <strtod+0x28a>
     af6:	f2 e0       	ldi	r31, 0x02	; 2
     af8:	ef 0e       	add	r14, r31
     afa:	f1 1c       	adc	r15, r1
     afc:	f6 01       	movw	r30, r12
     afe:	f1 82       	std	Z+1, r15	; 0x01
     b00:	e0 82       	st	Z, r14
     b02:	e2 c0       	rjmp	.+452    	; 0xcc8 <strtod+0x28a>
     b04:	20 e0       	ldi	r18, 0x00	; 0
     b06:	30 e0       	ldi	r19, 0x00	; 0
     b08:	a9 01       	movw	r20, r18
     b0a:	c0 e0       	ldi	r28, 0x00	; 0
     b0c:	d0 e0       	ldi	r29, 0x00	; 0
     b0e:	f7 01       	movw	r30, r14
     b10:	80 ed       	ldi	r24, 0xD0	; 208
     b12:	a8 2e       	mov	r10, r24
     b14:	a0 0e       	add	r10, r16
     b16:	89 e0       	ldi	r24, 0x09	; 9
     b18:	8a 15       	cp	r24, r10
     b1a:	30 f1       	brcs	.+76     	; 0xb68 <strtod+0x12a>
     b1c:	91 2f       	mov	r25, r17
     b1e:	92 60       	ori	r25, 0x02	; 2
     b20:	b9 2e       	mov	r11, r25
     b22:	81 2f       	mov	r24, r17
     b24:	88 70       	andi	r24, 0x08	; 8
     b26:	12 ff       	sbrs	r17, 2
     b28:	04 c0       	rjmp	.+8      	; 0xb32 <strtod+0xf4>
     b2a:	81 11       	cpse	r24, r1
     b2c:	24 c0       	rjmp	.+72     	; 0xb76 <strtod+0x138>
     b2e:	21 96       	adiw	r28, 0x01	; 1
     b30:	22 c0       	rjmp	.+68     	; 0xb76 <strtod+0x138>
     b32:	81 11       	cpse	r24, r1
     b34:	21 97       	sbiw	r28, 0x01	; 1
     b36:	a5 e0       	ldi	r26, 0x05	; 5
     b38:	b0 e0       	ldi	r27, 0x00	; 0
     b3a:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__muluhisi3>
     b3e:	dc 01       	movw	r26, r24
     b40:	cb 01       	movw	r24, r22
     b42:	88 0f       	add	r24, r24
     b44:	99 1f       	adc	r25, r25
     b46:	aa 1f       	adc	r26, r26
     b48:	bb 1f       	adc	r27, r27
     b4a:	9c 01       	movw	r18, r24
     b4c:	ad 01       	movw	r20, r26
     b4e:	2a 0d       	add	r18, r10
     b50:	31 1d       	adc	r19, r1
     b52:	41 1d       	adc	r20, r1
     b54:	51 1d       	adc	r21, r1
     b56:	28 39       	cpi	r18, 0x98	; 152
     b58:	89 e9       	ldi	r24, 0x99	; 153
     b5a:	38 07       	cpc	r19, r24
     b5c:	48 07       	cpc	r20, r24
     b5e:	89 e1       	ldi	r24, 0x19	; 25
     b60:	58 07       	cpc	r21, r24
     b62:	48 f0       	brcs	.+18     	; 0xb76 <strtod+0x138>
     b64:	16 60       	ori	r17, 0x06	; 6
     b66:	06 c0       	rjmp	.+12     	; 0xb74 <strtod+0x136>
     b68:	9e ef       	ldi	r25, 0xFE	; 254
     b6a:	a9 12       	cpse	r10, r25
     b6c:	0a c0       	rjmp	.+20     	; 0xb82 <strtod+0x144>
     b6e:	13 fd       	sbrc	r17, 3
     b70:	40 c0       	rjmp	.+128    	; 0xbf2 <strtod+0x1b4>
     b72:	18 60       	ori	r17, 0x08	; 8
     b74:	b1 2e       	mov	r11, r17
     b76:	8f ef       	ldi	r24, 0xFF	; 255
     b78:	e8 1a       	sub	r14, r24
     b7a:	f8 0a       	sbc	r15, r24
     b7c:	00 81       	ld	r16, Z
     b7e:	1b 2d       	mov	r17, r11
     b80:	c6 cf       	rjmp	.-116    	; 0xb0e <strtod+0xd0>
     b82:	80 2f       	mov	r24, r16
     b84:	8f 7d       	andi	r24, 0xDF	; 223
     b86:	85 34       	cpi	r24, 0x45	; 69
     b88:	a1 f5       	brne	.+104    	; 0xbf2 <strtod+0x1b4>
     b8a:	80 81       	ld	r24, Z
     b8c:	8d 32       	cpi	r24, 0x2D	; 45
     b8e:	11 f4       	brne	.+4      	; 0xb94 <strtod+0x156>
     b90:	10 61       	ori	r17, 0x10	; 16
     b92:	06 c0       	rjmp	.+12     	; 0xba0 <strtod+0x162>
     b94:	8b 32       	cpi	r24, 0x2B	; 43
     b96:	21 f0       	breq	.+8      	; 0xba0 <strtod+0x162>
     b98:	31 96       	adiw	r30, 0x01	; 1
     b9a:	61 e0       	ldi	r22, 0x01	; 1
     b9c:	70 e0       	ldi	r23, 0x00	; 0
     b9e:	04 c0       	rjmp	.+8      	; 0xba8 <strtod+0x16a>
     ba0:	81 81       	ldd	r24, Z+1	; 0x01
     ba2:	32 96       	adiw	r30, 0x02	; 2
     ba4:	62 e0       	ldi	r22, 0x02	; 2
     ba6:	70 e0       	ldi	r23, 0x00	; 0
     ba8:	80 53       	subi	r24, 0x30	; 48
     baa:	8a 30       	cpi	r24, 0x0A	; 10
     bac:	18 f0       	brcs	.+6      	; 0xbb4 <strtod+0x176>
     bae:	e6 1b       	sub	r30, r22
     bb0:	f7 0b       	sbc	r31, r23
     bb2:	1f c0       	rjmp	.+62     	; 0xbf2 <strtod+0x1b4>
     bb4:	60 e0       	ldi	r22, 0x00	; 0
     bb6:	70 e0       	ldi	r23, 0x00	; 0
     bb8:	60 38       	cpi	r22, 0x80	; 128
     bba:	9c e0       	ldi	r25, 0x0C	; 12
     bbc:	79 07       	cpc	r23, r25
     bbe:	5c f4       	brge	.+22     	; 0xbd6 <strtod+0x198>
     bc0:	db 01       	movw	r26, r22
     bc2:	aa 0f       	add	r26, r26
     bc4:	bb 1f       	adc	r27, r27
     bc6:	aa 0f       	add	r26, r26
     bc8:	bb 1f       	adc	r27, r27
     bca:	6a 0f       	add	r22, r26
     bcc:	7b 1f       	adc	r23, r27
     bce:	66 0f       	add	r22, r22
     bd0:	77 1f       	adc	r23, r23
     bd2:	68 0f       	add	r22, r24
     bd4:	71 1d       	adc	r23, r1
     bd6:	31 96       	adiw	r30, 0x01	; 1
     bd8:	df 01       	movw	r26, r30
     bda:	11 97       	sbiw	r26, 0x01	; 1
     bdc:	8c 91       	ld	r24, X
     bde:	80 53       	subi	r24, 0x30	; 48
     be0:	8a 30       	cpi	r24, 0x0A	; 10
     be2:	50 f3       	brcs	.-44     	; 0xbb8 <strtod+0x17a>
     be4:	14 ff       	sbrs	r17, 4
     be6:	03 c0       	rjmp	.+6      	; 0xbee <strtod+0x1b0>
     be8:	71 95       	neg	r23
     bea:	61 95       	neg	r22
     bec:	71 09       	sbc	r23, r1
     bee:	c6 0f       	add	r28, r22
     bf0:	d7 1f       	adc	r29, r23
     bf2:	11 ff       	sbrs	r17, 1
     bf4:	08 c0       	rjmp	.+16     	; 0xc06 <strtod+0x1c8>
     bf6:	c1 14       	cp	r12, r1
     bf8:	d1 04       	cpc	r13, r1
     bfa:	29 f0       	breq	.+10     	; 0xc06 <strtod+0x1c8>
     bfc:	cf 01       	movw	r24, r30
     bfe:	01 97       	sbiw	r24, 0x01	; 1
     c00:	f6 01       	movw	r30, r12
     c02:	91 83       	std	Z+1, r25	; 0x01
     c04:	80 83       	st	Z, r24
     c06:	ca 01       	movw	r24, r20
     c08:	b9 01       	movw	r22, r18
     c0a:	0e 94 66 07 	call	0xecc	; 0xecc <__floatunsisf>
     c0e:	21 2f       	mov	r18, r17
     c10:	23 70       	andi	r18, 0x03	; 3
     c12:	23 30       	cpi	r18, 0x03	; 3
     c14:	19 f0       	breq	.+6      	; 0xc1c <strtod+0x1de>
     c16:	4b 01       	movw	r8, r22
     c18:	5c 01       	movw	r10, r24
     c1a:	06 c0       	rjmp	.+12     	; 0xc28 <strtod+0x1ea>
     c1c:	4b 01       	movw	r8, r22
     c1e:	5c 01       	movw	r10, r24
     c20:	b7 fa       	bst	r11, 7
     c22:	b0 94       	com	r11
     c24:	b7 f8       	bld	r11, 7
     c26:	b0 94       	com	r11
     c28:	20 e0       	ldi	r18, 0x00	; 0
     c2a:	30 e0       	ldi	r19, 0x00	; 0
     c2c:	a9 01       	movw	r20, r18
     c2e:	c5 01       	movw	r24, r10
     c30:	b4 01       	movw	r22, r8
     c32:	0e 94 47 03 	call	0x68e	; 0x68e <__cmpsf2>
     c36:	88 23       	and	r24, r24
     c38:	09 f4       	brne	.+2      	; 0xc3c <strtod+0x1fe>
     c3a:	3e c0       	rjmp	.+124    	; 0xcb8 <strtod+0x27a>
     c3c:	d7 ff       	sbrs	r29, 7
     c3e:	06 c0       	rjmp	.+12     	; 0xc4c <strtod+0x20e>
     c40:	d1 95       	neg	r29
     c42:	c1 95       	neg	r28
     c44:	d1 09       	sbc	r29, r1
     c46:	03 ed       	ldi	r16, 0xD3	; 211
     c48:	10 e0       	ldi	r17, 0x00	; 0
     c4a:	02 c0       	rjmp	.+4      	; 0xc50 <strtod+0x212>
     c4c:	0b ee       	ldi	r16, 0xEB	; 235
     c4e:	10 e0       	ldi	r17, 0x00	; 0
     c50:	68 01       	movw	r12, r16
     c52:	f8 e1       	ldi	r31, 0x18	; 24
     c54:	cf 1a       	sub	r12, r31
     c56:	d1 08       	sbc	r13, r1
     c58:	90 e2       	ldi	r25, 0x20	; 32
     c5a:	e9 2e       	mov	r14, r25
     c5c:	f1 2c       	mov	r15, r1
     c5e:	ce 15       	cp	r28, r14
     c60:	df 05       	cpc	r29, r15
     c62:	74 f0       	brlt	.+28     	; 0xc80 <strtod+0x242>
     c64:	f8 01       	movw	r30, r16
     c66:	25 91       	lpm	r18, Z+
     c68:	35 91       	lpm	r19, Z+
     c6a:	45 91       	lpm	r20, Z+
     c6c:	54 91       	lpm	r21, Z
     c6e:	c5 01       	movw	r24, r10
     c70:	b4 01       	movw	r22, r8
     c72:	0e 94 a3 07 	call	0xf46	; 0xf46 <__mulsf3>
     c76:	4b 01       	movw	r8, r22
     c78:	5c 01       	movw	r10, r24
     c7a:	ce 19       	sub	r28, r14
     c7c:	df 09       	sbc	r29, r15
     c7e:	ef cf       	rjmp	.-34     	; 0xc5e <strtod+0x220>
     c80:	04 50       	subi	r16, 0x04	; 4
     c82:	11 09       	sbc	r17, r1
     c84:	f5 94       	asr	r15
     c86:	e7 94       	ror	r14
     c88:	0c 15       	cp	r16, r12
     c8a:	1d 05       	cpc	r17, r13
     c8c:	41 f7       	brne	.-48     	; 0xc5e <strtod+0x220>
     c8e:	8a 2d       	mov	r24, r10
     c90:	88 0f       	add	r24, r24
     c92:	8b 2d       	mov	r24, r11
     c94:	88 1f       	adc	r24, r24
     c96:	8f 3f       	cpi	r24, 0xFF	; 255
     c98:	49 f0       	breq	.+18     	; 0xcac <strtod+0x26e>
     c9a:	20 e0       	ldi	r18, 0x00	; 0
     c9c:	30 e0       	ldi	r19, 0x00	; 0
     c9e:	a9 01       	movw	r20, r18
     ca0:	c5 01       	movw	r24, r10
     ca2:	b4 01       	movw	r22, r8
     ca4:	0e 94 47 03 	call	0x68e	; 0x68e <__cmpsf2>
     ca8:	81 11       	cpse	r24, r1
     caa:	06 c0       	rjmp	.+12     	; 0xcb8 <strtod+0x27a>
     cac:	82 e2       	ldi	r24, 0x22	; 34
     cae:	90 e0       	ldi	r25, 0x00	; 0
     cb0:	90 93 b0 01 	sts	0x01B0, r25	; 0x8001b0 <errno+0x1>
     cb4:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <errno>
     cb8:	c5 01       	movw	r24, r10
     cba:	b4 01       	movw	r22, r8
     cbc:	09 c0       	rjmp	.+18     	; 0xcd0 <strtod+0x292>
     cbe:	60 e0       	ldi	r22, 0x00	; 0
     cc0:	70 e0       	ldi	r23, 0x00	; 0
     cc2:	80 e8       	ldi	r24, 0x80	; 128
     cc4:	9f ef       	ldi	r25, 0xFF	; 255
     cc6:	04 c0       	rjmp	.+8      	; 0xcd0 <strtod+0x292>
     cc8:	60 e0       	ldi	r22, 0x00	; 0
     cca:	70 e0       	ldi	r23, 0x00	; 0
     ccc:	80 ec       	ldi	r24, 0xC0	; 192
     cce:	9f e7       	ldi	r25, 0x7F	; 127
     cd0:	cd b7       	in	r28, 0x3d	; 61
     cd2:	de b7       	in	r29, 0x3e	; 62
     cd4:	ec e0       	ldi	r30, 0x0C	; 12
     cd6:	0c 94 91 08 	jmp	0x1122	; 0x1122 <__epilogue_restores__+0xc>

00000cda <__ftoa_engine>:
     cda:	28 30       	cpi	r18, 0x08	; 8
     cdc:	08 f0       	brcs	.+2      	; 0xce0 <__ftoa_engine+0x6>
     cde:	27 e0       	ldi	r18, 0x07	; 7
     ce0:	33 27       	eor	r19, r19
     ce2:	da 01       	movw	r26, r20
     ce4:	99 0f       	add	r25, r25
     ce6:	31 1d       	adc	r19, r1
     ce8:	87 fd       	sbrc	r24, 7
     cea:	91 60       	ori	r25, 0x01	; 1
     cec:	00 96       	adiw	r24, 0x00	; 0
     cee:	61 05       	cpc	r22, r1
     cf0:	71 05       	cpc	r23, r1
     cf2:	39 f4       	brne	.+14     	; 0xd02 <__ftoa_engine+0x28>
     cf4:	32 60       	ori	r19, 0x02	; 2
     cf6:	2e 5f       	subi	r18, 0xFE	; 254
     cf8:	3d 93       	st	X+, r19
     cfa:	30 e3       	ldi	r19, 0x30	; 48
     cfc:	2a 95       	dec	r18
     cfe:	e1 f7       	brne	.-8      	; 0xcf8 <__ftoa_engine+0x1e>
     d00:	08 95       	ret
     d02:	9f 3f       	cpi	r25, 0xFF	; 255
     d04:	30 f0       	brcs	.+12     	; 0xd12 <__ftoa_engine+0x38>
     d06:	80 38       	cpi	r24, 0x80	; 128
     d08:	71 05       	cpc	r23, r1
     d0a:	61 05       	cpc	r22, r1
     d0c:	09 f0       	breq	.+2      	; 0xd10 <__ftoa_engine+0x36>
     d0e:	3c 5f       	subi	r19, 0xFC	; 252
     d10:	3c 5f       	subi	r19, 0xFC	; 252
     d12:	3d 93       	st	X+, r19
     d14:	91 30       	cpi	r25, 0x01	; 1
     d16:	08 f0       	brcs	.+2      	; 0xd1a <__ftoa_engine+0x40>
     d18:	80 68       	ori	r24, 0x80	; 128
     d1a:	91 1d       	adc	r25, r1
     d1c:	df 93       	push	r29
     d1e:	cf 93       	push	r28
     d20:	1f 93       	push	r17
     d22:	0f 93       	push	r16
     d24:	ff 92       	push	r15
     d26:	ef 92       	push	r14
     d28:	19 2f       	mov	r17, r25
     d2a:	98 7f       	andi	r25, 0xF8	; 248
     d2c:	96 95       	lsr	r25
     d2e:	e9 2f       	mov	r30, r25
     d30:	96 95       	lsr	r25
     d32:	96 95       	lsr	r25
     d34:	e9 0f       	add	r30, r25
     d36:	ff 27       	eor	r31, r31
     d38:	e7 5b       	subi	r30, 0xB7	; 183
     d3a:	fe 4f       	sbci	r31, 0xFE	; 254
     d3c:	99 27       	eor	r25, r25
     d3e:	33 27       	eor	r19, r19
     d40:	ee 24       	eor	r14, r14
     d42:	ff 24       	eor	r15, r15
     d44:	a7 01       	movw	r20, r14
     d46:	e7 01       	movw	r28, r14
     d48:	05 90       	lpm	r0, Z+
     d4a:	08 94       	sec
     d4c:	07 94       	ror	r0
     d4e:	28 f4       	brcc	.+10     	; 0xd5a <__ftoa_engine+0x80>
     d50:	36 0f       	add	r19, r22
     d52:	e7 1e       	adc	r14, r23
     d54:	f8 1e       	adc	r15, r24
     d56:	49 1f       	adc	r20, r25
     d58:	51 1d       	adc	r21, r1
     d5a:	66 0f       	add	r22, r22
     d5c:	77 1f       	adc	r23, r23
     d5e:	88 1f       	adc	r24, r24
     d60:	99 1f       	adc	r25, r25
     d62:	06 94       	lsr	r0
     d64:	a1 f7       	brne	.-24     	; 0xd4e <__ftoa_engine+0x74>
     d66:	05 90       	lpm	r0, Z+
     d68:	07 94       	ror	r0
     d6a:	28 f4       	brcc	.+10     	; 0xd76 <__ftoa_engine+0x9c>
     d6c:	e7 0e       	add	r14, r23
     d6e:	f8 1e       	adc	r15, r24
     d70:	49 1f       	adc	r20, r25
     d72:	56 1f       	adc	r21, r22
     d74:	c1 1d       	adc	r28, r1
     d76:	77 0f       	add	r23, r23
     d78:	88 1f       	adc	r24, r24
     d7a:	99 1f       	adc	r25, r25
     d7c:	66 1f       	adc	r22, r22
     d7e:	06 94       	lsr	r0
     d80:	a1 f7       	brne	.-24     	; 0xd6a <__ftoa_engine+0x90>
     d82:	05 90       	lpm	r0, Z+
     d84:	07 94       	ror	r0
     d86:	28 f4       	brcc	.+10     	; 0xd92 <__ftoa_engine+0xb8>
     d88:	f8 0e       	add	r15, r24
     d8a:	49 1f       	adc	r20, r25
     d8c:	56 1f       	adc	r21, r22
     d8e:	c7 1f       	adc	r28, r23
     d90:	d1 1d       	adc	r29, r1
     d92:	88 0f       	add	r24, r24
     d94:	99 1f       	adc	r25, r25
     d96:	66 1f       	adc	r22, r22
     d98:	77 1f       	adc	r23, r23
     d9a:	06 94       	lsr	r0
     d9c:	a1 f7       	brne	.-24     	; 0xd86 <__ftoa_engine+0xac>
     d9e:	05 90       	lpm	r0, Z+
     da0:	07 94       	ror	r0
     da2:	20 f4       	brcc	.+8      	; 0xdac <__ftoa_engine+0xd2>
     da4:	49 0f       	add	r20, r25
     da6:	56 1f       	adc	r21, r22
     da8:	c7 1f       	adc	r28, r23
     daa:	d8 1f       	adc	r29, r24
     dac:	99 0f       	add	r25, r25
     dae:	66 1f       	adc	r22, r22
     db0:	77 1f       	adc	r23, r23
     db2:	88 1f       	adc	r24, r24
     db4:	06 94       	lsr	r0
     db6:	a9 f7       	brne	.-22     	; 0xda2 <__ftoa_engine+0xc8>
     db8:	84 91       	lpm	r24, Z
     dba:	10 95       	com	r17
     dbc:	17 70       	andi	r17, 0x07	; 7
     dbe:	41 f0       	breq	.+16     	; 0xdd0 <__ftoa_engine+0xf6>
     dc0:	d6 95       	lsr	r29
     dc2:	c7 95       	ror	r28
     dc4:	57 95       	ror	r21
     dc6:	47 95       	ror	r20
     dc8:	f7 94       	ror	r15
     dca:	e7 94       	ror	r14
     dcc:	1a 95       	dec	r17
     dce:	c1 f7       	brne	.-16     	; 0xdc0 <__ftoa_engine+0xe6>
     dd0:	ef ee       	ldi	r30, 0xEF	; 239
     dd2:	f0 e0       	ldi	r31, 0x00	; 0
     dd4:	68 94       	set
     dd6:	15 90       	lpm	r1, Z+
     dd8:	15 91       	lpm	r17, Z+
     dda:	35 91       	lpm	r19, Z+
     ddc:	65 91       	lpm	r22, Z+
     dde:	95 91       	lpm	r25, Z+
     de0:	05 90       	lpm	r0, Z+
     de2:	7f e2       	ldi	r23, 0x2F	; 47
     de4:	73 95       	inc	r23
     de6:	e1 18       	sub	r14, r1
     de8:	f1 0a       	sbc	r15, r17
     dea:	43 0b       	sbc	r20, r19
     dec:	56 0b       	sbc	r21, r22
     dee:	c9 0b       	sbc	r28, r25
     df0:	d0 09       	sbc	r29, r0
     df2:	c0 f7       	brcc	.-16     	; 0xde4 <__ftoa_engine+0x10a>
     df4:	e1 0c       	add	r14, r1
     df6:	f1 1e       	adc	r15, r17
     df8:	43 1f       	adc	r20, r19
     dfa:	56 1f       	adc	r21, r22
     dfc:	c9 1f       	adc	r28, r25
     dfe:	d0 1d       	adc	r29, r0
     e00:	7e f4       	brtc	.+30     	; 0xe20 <__ftoa_engine+0x146>
     e02:	70 33       	cpi	r23, 0x30	; 48
     e04:	11 f4       	brne	.+4      	; 0xe0a <__ftoa_engine+0x130>
     e06:	8a 95       	dec	r24
     e08:	e6 cf       	rjmp	.-52     	; 0xdd6 <__ftoa_engine+0xfc>
     e0a:	e8 94       	clt
     e0c:	01 50       	subi	r16, 0x01	; 1
     e0e:	30 f0       	brcs	.+12     	; 0xe1c <__ftoa_engine+0x142>
     e10:	08 0f       	add	r16, r24
     e12:	0a f4       	brpl	.+2      	; 0xe16 <__ftoa_engine+0x13c>
     e14:	00 27       	eor	r16, r16
     e16:	02 17       	cp	r16, r18
     e18:	08 f4       	brcc	.+2      	; 0xe1c <__ftoa_engine+0x142>
     e1a:	20 2f       	mov	r18, r16
     e1c:	23 95       	inc	r18
     e1e:	02 2f       	mov	r16, r18
     e20:	7a 33       	cpi	r23, 0x3A	; 58
     e22:	28 f0       	brcs	.+10     	; 0xe2e <__ftoa_engine+0x154>
     e24:	79 e3       	ldi	r23, 0x39	; 57
     e26:	7d 93       	st	X+, r23
     e28:	2a 95       	dec	r18
     e2a:	e9 f7       	brne	.-6      	; 0xe26 <__ftoa_engine+0x14c>
     e2c:	10 c0       	rjmp	.+32     	; 0xe4e <__ftoa_engine+0x174>
     e2e:	7d 93       	st	X+, r23
     e30:	2a 95       	dec	r18
     e32:	89 f6       	brne	.-94     	; 0xdd6 <__ftoa_engine+0xfc>
     e34:	06 94       	lsr	r0
     e36:	97 95       	ror	r25
     e38:	67 95       	ror	r22
     e3a:	37 95       	ror	r19
     e3c:	17 95       	ror	r17
     e3e:	17 94       	ror	r1
     e40:	e1 18       	sub	r14, r1
     e42:	f1 0a       	sbc	r15, r17
     e44:	43 0b       	sbc	r20, r19
     e46:	56 0b       	sbc	r21, r22
     e48:	c9 0b       	sbc	r28, r25
     e4a:	d0 09       	sbc	r29, r0
     e4c:	98 f0       	brcs	.+38     	; 0xe74 <__ftoa_engine+0x19a>
     e4e:	23 95       	inc	r18
     e50:	7e 91       	ld	r23, -X
     e52:	73 95       	inc	r23
     e54:	7a 33       	cpi	r23, 0x3A	; 58
     e56:	08 f0       	brcs	.+2      	; 0xe5a <__ftoa_engine+0x180>
     e58:	70 e3       	ldi	r23, 0x30	; 48
     e5a:	7c 93       	st	X, r23
     e5c:	20 13       	cpse	r18, r16
     e5e:	b8 f7       	brcc	.-18     	; 0xe4e <__ftoa_engine+0x174>
     e60:	7e 91       	ld	r23, -X
     e62:	70 61       	ori	r23, 0x10	; 16
     e64:	7d 93       	st	X+, r23
     e66:	30 f0       	brcs	.+12     	; 0xe74 <__ftoa_engine+0x19a>
     e68:	83 95       	inc	r24
     e6a:	71 e3       	ldi	r23, 0x31	; 49
     e6c:	7d 93       	st	X+, r23
     e6e:	70 e3       	ldi	r23, 0x30	; 48
     e70:	2a 95       	dec	r18
     e72:	e1 f7       	brne	.-8      	; 0xe6c <__ftoa_engine+0x192>
     e74:	11 24       	eor	r1, r1
     e76:	ef 90       	pop	r14
     e78:	ff 90       	pop	r15
     e7a:	0f 91       	pop	r16
     e7c:	1f 91       	pop	r17
     e7e:	cf 91       	pop	r28
     e80:	df 91       	pop	r29
     e82:	99 27       	eor	r25, r25
     e84:	87 fd       	sbrc	r24, 7
     e86:	90 95       	com	r25
     e88:	08 95       	ret

00000e8a <isspace>:
     e8a:	91 11       	cpse	r25, r1
     e8c:	0c 94 10 08 	jmp	0x1020	; 0x1020 <__ctype_isfalse>
     e90:	80 32       	cpi	r24, 0x20	; 32
     e92:	19 f0       	breq	.+6      	; 0xe9a <isspace+0x10>
     e94:	89 50       	subi	r24, 0x09	; 9
     e96:	85 50       	subi	r24, 0x05	; 5
     e98:	c8 f7       	brcc	.-14     	; 0xe8c <isspace+0x2>
     e9a:	08 95       	ret

00000e9c <strncasecmp_P>:
     e9c:	fb 01       	movw	r30, r22
     e9e:	dc 01       	movw	r26, r24
     ea0:	41 50       	subi	r20, 0x01	; 1
     ea2:	50 40       	sbci	r21, 0x00	; 0
     ea4:	88 f0       	brcs	.+34     	; 0xec8 <strncasecmp_P+0x2c>
     ea6:	8d 91       	ld	r24, X+
     ea8:	81 34       	cpi	r24, 0x41	; 65
     eaa:	1c f0       	brlt	.+6      	; 0xeb2 <strncasecmp_P+0x16>
     eac:	8b 35       	cpi	r24, 0x5B	; 91
     eae:	0c f4       	brge	.+2      	; 0xeb2 <strncasecmp_P+0x16>
     eb0:	80 5e       	subi	r24, 0xE0	; 224
     eb2:	65 91       	lpm	r22, Z+
     eb4:	61 34       	cpi	r22, 0x41	; 65
     eb6:	1c f0       	brlt	.+6      	; 0xebe <strncasecmp_P+0x22>
     eb8:	6b 35       	cpi	r22, 0x5B	; 91
     eba:	0c f4       	brge	.+2      	; 0xebe <strncasecmp_P+0x22>
     ebc:	60 5e       	subi	r22, 0xE0	; 224
     ebe:	86 1b       	sub	r24, r22
     ec0:	61 11       	cpse	r22, r1
     ec2:	71 f3       	breq	.-36     	; 0xea0 <strncasecmp_P+0x4>
     ec4:	99 0b       	sbc	r25, r25
     ec6:	08 95       	ret
     ec8:	88 1b       	sub	r24, r24
     eca:	fc cf       	rjmp	.-8      	; 0xec4 <strncasecmp_P+0x28>

00000ecc <__floatunsisf>:
     ecc:	e8 94       	clt
     ece:	09 c0       	rjmp	.+18     	; 0xee2 <__floatsisf+0x12>

00000ed0 <__floatsisf>:
     ed0:	97 fb       	bst	r25, 7
     ed2:	3e f4       	brtc	.+14     	; 0xee2 <__floatsisf+0x12>
     ed4:	90 95       	com	r25
     ed6:	80 95       	com	r24
     ed8:	70 95       	com	r23
     eda:	61 95       	neg	r22
     edc:	7f 4f       	sbci	r23, 0xFF	; 255
     ede:	8f 4f       	sbci	r24, 0xFF	; 255
     ee0:	9f 4f       	sbci	r25, 0xFF	; 255
     ee2:	99 23       	and	r25, r25
     ee4:	a9 f0       	breq	.+42     	; 0xf10 <__floatsisf+0x40>
     ee6:	f9 2f       	mov	r31, r25
     ee8:	96 e9       	ldi	r25, 0x96	; 150
     eea:	bb 27       	eor	r27, r27
     eec:	93 95       	inc	r25
     eee:	f6 95       	lsr	r31
     ef0:	87 95       	ror	r24
     ef2:	77 95       	ror	r23
     ef4:	67 95       	ror	r22
     ef6:	b7 95       	ror	r27
     ef8:	f1 11       	cpse	r31, r1
     efa:	f8 cf       	rjmp	.-16     	; 0xeec <__floatsisf+0x1c>
     efc:	fa f4       	brpl	.+62     	; 0xf3c <__floatsisf+0x6c>
     efe:	bb 0f       	add	r27, r27
     f00:	11 f4       	brne	.+4      	; 0xf06 <__floatsisf+0x36>
     f02:	60 ff       	sbrs	r22, 0
     f04:	1b c0       	rjmp	.+54     	; 0xf3c <__floatsisf+0x6c>
     f06:	6f 5f       	subi	r22, 0xFF	; 255
     f08:	7f 4f       	sbci	r23, 0xFF	; 255
     f0a:	8f 4f       	sbci	r24, 0xFF	; 255
     f0c:	9f 4f       	sbci	r25, 0xFF	; 255
     f0e:	16 c0       	rjmp	.+44     	; 0xf3c <__floatsisf+0x6c>
     f10:	88 23       	and	r24, r24
     f12:	11 f0       	breq	.+4      	; 0xf18 <__floatsisf+0x48>
     f14:	96 e9       	ldi	r25, 0x96	; 150
     f16:	11 c0       	rjmp	.+34     	; 0xf3a <__floatsisf+0x6a>
     f18:	77 23       	and	r23, r23
     f1a:	21 f0       	breq	.+8      	; 0xf24 <__floatsisf+0x54>
     f1c:	9e e8       	ldi	r25, 0x8E	; 142
     f1e:	87 2f       	mov	r24, r23
     f20:	76 2f       	mov	r23, r22
     f22:	05 c0       	rjmp	.+10     	; 0xf2e <__floatsisf+0x5e>
     f24:	66 23       	and	r22, r22
     f26:	71 f0       	breq	.+28     	; 0xf44 <__floatsisf+0x74>
     f28:	96 e8       	ldi	r25, 0x86	; 134
     f2a:	86 2f       	mov	r24, r22
     f2c:	70 e0       	ldi	r23, 0x00	; 0
     f2e:	60 e0       	ldi	r22, 0x00	; 0
     f30:	2a f0       	brmi	.+10     	; 0xf3c <__floatsisf+0x6c>
     f32:	9a 95       	dec	r25
     f34:	66 0f       	add	r22, r22
     f36:	77 1f       	adc	r23, r23
     f38:	88 1f       	adc	r24, r24
     f3a:	da f7       	brpl	.-10     	; 0xf32 <__floatsisf+0x62>
     f3c:	88 0f       	add	r24, r24
     f3e:	96 95       	lsr	r25
     f40:	87 95       	ror	r24
     f42:	97 f9       	bld	r25, 7
     f44:	08 95       	ret

00000f46 <__mulsf3>:
     f46:	0e 94 b6 07 	call	0xf6c	; 0xf6c <__mulsf3x>
     f4a:	0c 94 2a 08 	jmp	0x1054	; 0x1054 <__fp_round>
     f4e:	0e 94 1c 08 	call	0x1038	; 0x1038 <__fp_pscA>
     f52:	38 f0       	brcs	.+14     	; 0xf62 <__mulsf3+0x1c>
     f54:	0e 94 23 08 	call	0x1046	; 0x1046 <__fp_pscB>
     f58:	20 f0       	brcs	.+8      	; 0xf62 <__mulsf3+0x1c>
     f5a:	95 23       	and	r25, r21
     f5c:	11 f0       	breq	.+4      	; 0xf62 <__mulsf3+0x1c>
     f5e:	0c 94 13 08 	jmp	0x1026	; 0x1026 <__fp_inf>
     f62:	0c 94 19 08 	jmp	0x1032	; 0x1032 <__fp_nan>
     f66:	11 24       	eor	r1, r1
     f68:	0c 94 5e 08 	jmp	0x10bc	; 0x10bc <__fp_szero>

00000f6c <__mulsf3x>:
     f6c:	0e 94 3b 08 	call	0x1076	; 0x1076 <__fp_split3>
     f70:	70 f3       	brcs	.-36     	; 0xf4e <__mulsf3+0x8>

00000f72 <__mulsf3_pse>:
     f72:	95 9f       	mul	r25, r21
     f74:	c1 f3       	breq	.-16     	; 0xf66 <__mulsf3+0x20>
     f76:	95 0f       	add	r25, r21
     f78:	50 e0       	ldi	r21, 0x00	; 0
     f7a:	55 1f       	adc	r21, r21
     f7c:	62 9f       	mul	r22, r18
     f7e:	f0 01       	movw	r30, r0
     f80:	72 9f       	mul	r23, r18
     f82:	bb 27       	eor	r27, r27
     f84:	f0 0d       	add	r31, r0
     f86:	b1 1d       	adc	r27, r1
     f88:	63 9f       	mul	r22, r19
     f8a:	aa 27       	eor	r26, r26
     f8c:	f0 0d       	add	r31, r0
     f8e:	b1 1d       	adc	r27, r1
     f90:	aa 1f       	adc	r26, r26
     f92:	64 9f       	mul	r22, r20
     f94:	66 27       	eor	r22, r22
     f96:	b0 0d       	add	r27, r0
     f98:	a1 1d       	adc	r26, r1
     f9a:	66 1f       	adc	r22, r22
     f9c:	82 9f       	mul	r24, r18
     f9e:	22 27       	eor	r18, r18
     fa0:	b0 0d       	add	r27, r0
     fa2:	a1 1d       	adc	r26, r1
     fa4:	62 1f       	adc	r22, r18
     fa6:	73 9f       	mul	r23, r19
     fa8:	b0 0d       	add	r27, r0
     faa:	a1 1d       	adc	r26, r1
     fac:	62 1f       	adc	r22, r18
     fae:	83 9f       	mul	r24, r19
     fb0:	a0 0d       	add	r26, r0
     fb2:	61 1d       	adc	r22, r1
     fb4:	22 1f       	adc	r18, r18
     fb6:	74 9f       	mul	r23, r20
     fb8:	33 27       	eor	r19, r19
     fba:	a0 0d       	add	r26, r0
     fbc:	61 1d       	adc	r22, r1
     fbe:	23 1f       	adc	r18, r19
     fc0:	84 9f       	mul	r24, r20
     fc2:	60 0d       	add	r22, r0
     fc4:	21 1d       	adc	r18, r1
     fc6:	82 2f       	mov	r24, r18
     fc8:	76 2f       	mov	r23, r22
     fca:	6a 2f       	mov	r22, r26
     fcc:	11 24       	eor	r1, r1
     fce:	9f 57       	subi	r25, 0x7F	; 127
     fd0:	50 40       	sbci	r21, 0x00	; 0
     fd2:	9a f0       	brmi	.+38     	; 0xffa <__mulsf3_pse+0x88>
     fd4:	f1 f0       	breq	.+60     	; 0x1012 <__mulsf3_pse+0xa0>
     fd6:	88 23       	and	r24, r24
     fd8:	4a f0       	brmi	.+18     	; 0xfec <__mulsf3_pse+0x7a>
     fda:	ee 0f       	add	r30, r30
     fdc:	ff 1f       	adc	r31, r31
     fde:	bb 1f       	adc	r27, r27
     fe0:	66 1f       	adc	r22, r22
     fe2:	77 1f       	adc	r23, r23
     fe4:	88 1f       	adc	r24, r24
     fe6:	91 50       	subi	r25, 0x01	; 1
     fe8:	50 40       	sbci	r21, 0x00	; 0
     fea:	a9 f7       	brne	.-22     	; 0xfd6 <__mulsf3_pse+0x64>
     fec:	9e 3f       	cpi	r25, 0xFE	; 254
     fee:	51 05       	cpc	r21, r1
     ff0:	80 f0       	brcs	.+32     	; 0x1012 <__mulsf3_pse+0xa0>
     ff2:	0c 94 13 08 	jmp	0x1026	; 0x1026 <__fp_inf>
     ff6:	0c 94 5e 08 	jmp	0x10bc	; 0x10bc <__fp_szero>
     ffa:	5f 3f       	cpi	r21, 0xFF	; 255
     ffc:	e4 f3       	brlt	.-8      	; 0xff6 <__mulsf3_pse+0x84>
     ffe:	98 3e       	cpi	r25, 0xE8	; 232
    1000:	d4 f3       	brlt	.-12     	; 0xff6 <__mulsf3_pse+0x84>
    1002:	86 95       	lsr	r24
    1004:	77 95       	ror	r23
    1006:	67 95       	ror	r22
    1008:	b7 95       	ror	r27
    100a:	f7 95       	ror	r31
    100c:	e7 95       	ror	r30
    100e:	9f 5f       	subi	r25, 0xFF	; 255
    1010:	c1 f7       	brne	.-16     	; 0x1002 <__mulsf3_pse+0x90>
    1012:	fe 2b       	or	r31, r30
    1014:	88 0f       	add	r24, r24
    1016:	91 1d       	adc	r25, r1
    1018:	96 95       	lsr	r25
    101a:	87 95       	ror	r24
    101c:	97 f9       	bld	r25, 7
    101e:	08 95       	ret

00001020 <__ctype_isfalse>:
    1020:	99 27       	eor	r25, r25
    1022:	88 27       	eor	r24, r24

00001024 <__ctype_istrue>:
    1024:	08 95       	ret

00001026 <__fp_inf>:
    1026:	97 f9       	bld	r25, 7
    1028:	9f 67       	ori	r25, 0x7F	; 127
    102a:	80 e8       	ldi	r24, 0x80	; 128
    102c:	70 e0       	ldi	r23, 0x00	; 0
    102e:	60 e0       	ldi	r22, 0x00	; 0
    1030:	08 95       	ret

00001032 <__fp_nan>:
    1032:	9f ef       	ldi	r25, 0xFF	; 255
    1034:	80 ec       	ldi	r24, 0xC0	; 192
    1036:	08 95       	ret

00001038 <__fp_pscA>:
    1038:	00 24       	eor	r0, r0
    103a:	0a 94       	dec	r0
    103c:	16 16       	cp	r1, r22
    103e:	17 06       	cpc	r1, r23
    1040:	18 06       	cpc	r1, r24
    1042:	09 06       	cpc	r0, r25
    1044:	08 95       	ret

00001046 <__fp_pscB>:
    1046:	00 24       	eor	r0, r0
    1048:	0a 94       	dec	r0
    104a:	12 16       	cp	r1, r18
    104c:	13 06       	cpc	r1, r19
    104e:	14 06       	cpc	r1, r20
    1050:	05 06       	cpc	r0, r21
    1052:	08 95       	ret

00001054 <__fp_round>:
    1054:	09 2e       	mov	r0, r25
    1056:	03 94       	inc	r0
    1058:	00 0c       	add	r0, r0
    105a:	11 f4       	brne	.+4      	; 0x1060 <__fp_round+0xc>
    105c:	88 23       	and	r24, r24
    105e:	52 f0       	brmi	.+20     	; 0x1074 <__fp_round+0x20>
    1060:	bb 0f       	add	r27, r27
    1062:	40 f4       	brcc	.+16     	; 0x1074 <__fp_round+0x20>
    1064:	bf 2b       	or	r27, r31
    1066:	11 f4       	brne	.+4      	; 0x106c <__fp_round+0x18>
    1068:	60 ff       	sbrs	r22, 0
    106a:	04 c0       	rjmp	.+8      	; 0x1074 <__fp_round+0x20>
    106c:	6f 5f       	subi	r22, 0xFF	; 255
    106e:	7f 4f       	sbci	r23, 0xFF	; 255
    1070:	8f 4f       	sbci	r24, 0xFF	; 255
    1072:	9f 4f       	sbci	r25, 0xFF	; 255
    1074:	08 95       	ret

00001076 <__fp_split3>:
    1076:	57 fd       	sbrc	r21, 7
    1078:	90 58       	subi	r25, 0x80	; 128
    107a:	44 0f       	add	r20, r20
    107c:	55 1f       	adc	r21, r21
    107e:	59 f0       	breq	.+22     	; 0x1096 <__fp_splitA+0x10>
    1080:	5f 3f       	cpi	r21, 0xFF	; 255
    1082:	71 f0       	breq	.+28     	; 0x10a0 <__fp_splitA+0x1a>
    1084:	47 95       	ror	r20

00001086 <__fp_splitA>:
    1086:	88 0f       	add	r24, r24
    1088:	97 fb       	bst	r25, 7
    108a:	99 1f       	adc	r25, r25
    108c:	61 f0       	breq	.+24     	; 0x10a6 <__fp_splitA+0x20>
    108e:	9f 3f       	cpi	r25, 0xFF	; 255
    1090:	79 f0       	breq	.+30     	; 0x10b0 <__fp_splitA+0x2a>
    1092:	87 95       	ror	r24
    1094:	08 95       	ret
    1096:	12 16       	cp	r1, r18
    1098:	13 06       	cpc	r1, r19
    109a:	14 06       	cpc	r1, r20
    109c:	55 1f       	adc	r21, r21
    109e:	f2 cf       	rjmp	.-28     	; 0x1084 <__fp_split3+0xe>
    10a0:	46 95       	lsr	r20
    10a2:	f1 df       	rcall	.-30     	; 0x1086 <__fp_splitA>
    10a4:	08 c0       	rjmp	.+16     	; 0x10b6 <__fp_splitA+0x30>
    10a6:	16 16       	cp	r1, r22
    10a8:	17 06       	cpc	r1, r23
    10aa:	18 06       	cpc	r1, r24
    10ac:	99 1f       	adc	r25, r25
    10ae:	f1 cf       	rjmp	.-30     	; 0x1092 <__fp_splitA+0xc>
    10b0:	86 95       	lsr	r24
    10b2:	71 05       	cpc	r23, r1
    10b4:	61 05       	cpc	r22, r1
    10b6:	08 94       	sec
    10b8:	08 95       	ret

000010ba <__fp_zero>:
    10ba:	e8 94       	clt

000010bc <__fp_szero>:
    10bc:	bb 27       	eor	r27, r27
    10be:	66 27       	eor	r22, r22
    10c0:	77 27       	eor	r23, r23
    10c2:	cb 01       	movw	r24, r22
    10c4:	97 f9       	bld	r25, 7
    10c6:	08 95       	ret

000010c8 <__muluhisi3>:
    10c8:	0e 94 a6 08 	call	0x114c	; 0x114c <__umulhisi3>
    10cc:	a5 9f       	mul	r26, r21
    10ce:	90 0d       	add	r25, r0
    10d0:	b4 9f       	mul	r27, r20
    10d2:	90 0d       	add	r25, r0
    10d4:	a4 9f       	mul	r26, r20
    10d6:	80 0d       	add	r24, r0
    10d8:	91 1d       	adc	r25, r1
    10da:	11 24       	eor	r1, r1
    10dc:	08 95       	ret

000010de <__prologue_saves__>:
    10de:	2f 92       	push	r2
    10e0:	3f 92       	push	r3
    10e2:	4f 92       	push	r4
    10e4:	5f 92       	push	r5
    10e6:	6f 92       	push	r6
    10e8:	7f 92       	push	r7
    10ea:	8f 92       	push	r8
    10ec:	9f 92       	push	r9
    10ee:	af 92       	push	r10
    10f0:	bf 92       	push	r11
    10f2:	cf 92       	push	r12
    10f4:	df 92       	push	r13
    10f6:	ef 92       	push	r14
    10f8:	ff 92       	push	r15
    10fa:	0f 93       	push	r16
    10fc:	1f 93       	push	r17
    10fe:	cf 93       	push	r28
    1100:	df 93       	push	r29
    1102:	cd b7       	in	r28, 0x3d	; 61
    1104:	de b7       	in	r29, 0x3e	; 62
    1106:	ca 1b       	sub	r28, r26
    1108:	db 0b       	sbc	r29, r27
    110a:	0f b6       	in	r0, 0x3f	; 63
    110c:	f8 94       	cli
    110e:	de bf       	out	0x3e, r29	; 62
    1110:	0f be       	out	0x3f, r0	; 63
    1112:	cd bf       	out	0x3d, r28	; 61
    1114:	09 94       	ijmp

00001116 <__epilogue_restores__>:
    1116:	2a 88       	ldd	r2, Y+18	; 0x12
    1118:	39 88       	ldd	r3, Y+17	; 0x11
    111a:	48 88       	ldd	r4, Y+16	; 0x10
    111c:	5f 84       	ldd	r5, Y+15	; 0x0f
    111e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1120:	7d 84       	ldd	r7, Y+13	; 0x0d
    1122:	8c 84       	ldd	r8, Y+12	; 0x0c
    1124:	9b 84       	ldd	r9, Y+11	; 0x0b
    1126:	aa 84       	ldd	r10, Y+10	; 0x0a
    1128:	b9 84       	ldd	r11, Y+9	; 0x09
    112a:	c8 84       	ldd	r12, Y+8	; 0x08
    112c:	df 80       	ldd	r13, Y+7	; 0x07
    112e:	ee 80       	ldd	r14, Y+6	; 0x06
    1130:	fd 80       	ldd	r15, Y+5	; 0x05
    1132:	0c 81       	ldd	r16, Y+4	; 0x04
    1134:	1b 81       	ldd	r17, Y+3	; 0x03
    1136:	aa 81       	ldd	r26, Y+2	; 0x02
    1138:	b9 81       	ldd	r27, Y+1	; 0x01
    113a:	ce 0f       	add	r28, r30
    113c:	d1 1d       	adc	r29, r1
    113e:	0f b6       	in	r0, 0x3f	; 63
    1140:	f8 94       	cli
    1142:	de bf       	out	0x3e, r29	; 62
    1144:	0f be       	out	0x3f, r0	; 63
    1146:	cd bf       	out	0x3d, r28	; 61
    1148:	ed 01       	movw	r28, r26
    114a:	08 95       	ret

0000114c <__umulhisi3>:
    114c:	a2 9f       	mul	r26, r18
    114e:	b0 01       	movw	r22, r0
    1150:	b3 9f       	mul	r27, r19
    1152:	c0 01       	movw	r24, r0
    1154:	a3 9f       	mul	r26, r19
    1156:	70 0d       	add	r23, r0
    1158:	81 1d       	adc	r24, r1
    115a:	11 24       	eor	r1, r1
    115c:	91 1d       	adc	r25, r1
    115e:	b2 9f       	mul	r27, r18
    1160:	70 0d       	add	r23, r0
    1162:	81 1d       	adc	r24, r1
    1164:	11 24       	eor	r1, r1
    1166:	91 1d       	adc	r25, r1
    1168:	08 95       	ret

0000116a <_exit>:
    116a:	f8 94       	cli

0000116c <__stop_program>:
    116c:	ff cf       	rjmp	.-2      	; 0x116c <__stop_program>
