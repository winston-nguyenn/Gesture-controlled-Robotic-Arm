
glove_sensors_reading.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000181e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017aa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000042  00800100  00800100  0000181e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000181e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001850  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00001890  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a17  00000000  00000000  000019a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000de4  00000000  00000000  000033bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b0c  00000000  00000000  000041a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000029c  00000000  00000000  00004cb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000792  00000000  00000000  00004f4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005d0  00000000  00000000  000056de  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d8  00000000  00000000  00005cae  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2f 01 	jmp	0x25e	; 0x25e <__ctors_end>
       4:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
       8:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
       c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      10:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      14:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      18:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      1c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      20:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      24:	0c 94 2b 03 	jmp	0x656	; 0x656 <__vector_9>
      28:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      2c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      30:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      34:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      38:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      3c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      40:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      44:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      48:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      4c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      50:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      54:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      58:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      5c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      60:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      64:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      68:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      6c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      70:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      74:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      78:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      7c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      80:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      84:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      88:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      8c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      90:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      94:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      98:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      9c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      a0:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      a4:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      a8:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      ac:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      b0:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
      b4:	08 4a       	sbci	r16, 0xA8	; 168
      b6:	d7 3b       	cpi	r29, 0xB7	; 183
      b8:	3b ce       	rjmp	.-906    	; 0xfffffd30 <__eeprom_end+0xff7efd30>
      ba:	01 6e       	ori	r16, 0xE1	; 225
      bc:	84 bc       	out	0x24, r8	; 36
      be:	bf fd       	.word	0xfdbf	; ????
      c0:	c1 2f       	mov	r28, r17
      c2:	3d 6c       	ori	r19, 0xCD	; 205
      c4:	74 31       	cpi	r23, 0x14	; 20
      c6:	9a bd       	out	0x2a, r25	; 42
      c8:	56 83       	std	Z+6, r21	; 0x06
      ca:	3d da       	rcall	.-2950   	; 0xfffff546 <__eeprom_end+0xff7ef546>
      cc:	3d 00       	.word	0x003d	; ????
      ce:	c7 7f       	andi	r28, 0xF7	; 247
      d0:	11 be       	out	0x31, r1	; 49
      d2:	d9 e4       	ldi	r29, 0x49	; 73
      d4:	bb 4c       	sbci	r27, 0xCB	; 203
      d6:	3e 91       	ld	r19, -X
      d8:	6b aa       	std	Y+51, r6	; 0x33
      da:	aa be       	out	0x3a, r10	; 58
      dc:	00 00       	nop
      de:	00 80       	ld	r0, Z
      e0:	3f 07       	cpc	r19, r31
      e2:	63 42       	sbci	r22, 0x23	; 35
      e4:	36 b7       	in	r19, 0x36	; 54
      e6:	9b d8       	rcall	.-3786   	; 0xfffff21e <__eeprom_end+0xff7ef21e>
      e8:	a7 1a       	sub	r10, r23
      ea:	39 68       	ori	r19, 0x89	; 137
      ec:	56 18       	sub	r5, r6
      ee:	ae ba       	out	0x1e, r10	; 30
      f0:	ab 55       	subi	r26, 0x5B	; 91
      f2:	8c 1d       	adc	r24, r12
      f4:	3c b7       	in	r19, 0x3c	; 60
      f6:	cc 57       	subi	r28, 0x7C	; 124
      f8:	63 bd       	out	0x23, r22	; 35
      fa:	6d ed       	ldi	r22, 0xDD	; 221
      fc:	fd 75       	andi	r31, 0x5D	; 93
      fe:	3e f6       	brtc	.-114    	; 0x8e <__SREG__+0x4f>
     100:	17 72       	andi	r17, 0x27	; 39
     102:	31 bf       	out	0x31, r19	; 49
     104:	00 00       	nop
     106:	00 80       	ld	r0, Z
     108:	3f 08       	sbc	r3, r15
     10a:	00 00       	nop
     10c:	00 be       	out	0x30, r0	; 48
     10e:	92 24       	eor	r9, r2
     110:	49 12       	cpse	r4, r25
     112:	3e ab       	std	Y+54, r19	; 0x36
     114:	aa aa       	std	Y+50, r10	; 0x32
     116:	2a be       	out	0x3a, r2	; 58
     118:	cd cc       	rjmp	.-1638   	; 0xfffffab4 <__eeprom_end+0xff7efab4>
     11a:	cc 4c       	sbci	r28, 0xCC	; 204
     11c:	3e 00       	.word	0x003e	; ????
     11e:	00 00       	nop
     120:	80 be       	out	0x30, r8	; 48
     122:	ab aa       	std	Y+51, r10	; 0x33
     124:	aa aa       	std	Y+50, r10	; 0x32
     126:	3e 00       	.word	0x003e	; ????
     128:	00 00       	nop
     12a:	00 bf       	out	0x30, r16	; 48
     12c:	00 00       	nop
     12e:	00 80       	ld	r0, Z
     130:	3f 00       	.word	0x003f	; ????
     132:	00 00       	nop
     134:	00 00       	nop
     136:	08 41       	sbci	r16, 0x18	; 24
     138:	78 d3       	rcall	.+1776   	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
     13a:	bb 43       	sbci	r27, 0x3B	; 59
     13c:	87 d1       	rcall	.+782    	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
     13e:	13 3d       	cpi	r17, 0xD3	; 211
     140:	19 0e       	add	r1, r25
     142:	3c c3       	rjmp	.+1656   	; 0x7bc <get_MPU_readings+0x11c>
     144:	bd 42       	sbci	r27, 0x2D	; 45
     146:	82 ad       	ldd	r24, Z+58	; 0x3a
     148:	2b 3e       	cpi	r18, 0xEB	; 235
     14a:	68 ec       	ldi	r22, 0xC8	; 200
     14c:	82 76       	andi	r24, 0x62	; 98
     14e:	be d9       	rcall	.-3204   	; 0xfffff4cc <__eeprom_end+0xff7ef4cc>
     150:	8f e1       	ldi	r24, 0x1F	; 31
     152:	a9 3e       	cpi	r26, 0xE9	; 233
     154:	4c 80       	ldd	r4, Y+4	; 0x04
     156:	ef ff       	.word	0xffef	; ????
     158:	be 01       	movw	r22, r28
     15a:	c4 ff       	sbrs	r28, 4
     15c:	7f 3f       	cpi	r23, 0xFF	; 255
     15e:	00 00       	nop
     160:	00 00       	nop
	...

00000164 <__trampolines_end>:
     164:	00 40       	sbci	r16, 0x00	; 0
     166:	7a 10       	cpse	r7, r10
     168:	f3 5a       	subi	r31, 0xA3	; 163
     16a:	00 a0       	ldd	r0, Z+32	; 0x20
     16c:	72 4e       	sbci	r23, 0xE2	; 226
     16e:	18 09       	sbc	r17, r8
     170:	00 10       	cpse	r0, r0
     172:	a5 d4       	rcall	.+2378   	; 0xabe <__addsf3x+0x46>
     174:	e8 00       	.word	0x00e8	; ????
     176:	00 e8       	ldi	r16, 0x80	; 128
     178:	76 48       	sbci	r23, 0x86	; 134
     17a:	17 00       	.word	0x0017	; ????
     17c:	00 e4       	ldi	r16, 0x40	; 64
     17e:	0b 54       	subi	r16, 0x4B	; 75
     180:	02 00       	.word	0x0002	; ????
     182:	00 ca       	rjmp	.-3072   	; 0xfffff584 <__eeprom_end+0xff7ef584>
     184:	9a 3b       	cpi	r25, 0xBA	; 186
     186:	00 00       	nop
     188:	00 e1       	ldi	r16, 0x10	; 16
     18a:	f5 05       	cpc	r31, r5
     18c:	00 00       	nop
     18e:	80 96       	adiw	r24, 0x20	; 32
     190:	98 00       	.word	0x0098	; ????
     192:	00 00       	nop
     194:	40 42       	sbci	r20, 0x20	; 32
     196:	0f 00       	.word	0x000f	; ????
     198:	00 00       	nop
     19a:	a0 86       	std	Z+8, r10	; 0x08
     19c:	01 00       	.word	0x0001	; ????
     19e:	00 00       	nop
     1a0:	10 27       	eor	r17, r16
     1a2:	00 00       	nop
     1a4:	00 00       	nop
     1a6:	e8 03       	fmulsu	r22, r16
     1a8:	00 00       	nop
     1aa:	00 00       	nop
     1ac:	64 00       	.word	0x0064	; ????
     1ae:	00 00       	nop
     1b0:	00 00       	nop
     1b2:	0a 00       	.word	0x000a	; ????
     1b4:	00 00       	nop
     1b6:	00 00       	nop
     1b8:	01 00       	.word	0x0001	; ????
     1ba:	00 00       	nop
     1bc:	00 00       	nop
     1be:	2c 76       	andi	r18, 0x6C	; 108
     1c0:	d8 88       	ldd	r13, Y+16	; 0x10
     1c2:	dc 67       	ori	r29, 0x7C	; 124
     1c4:	4f 08       	sbc	r4, r15
     1c6:	23 df       	rcall	.-442    	; 0xe <__FUSE_REGION_LENGTH__+0xb>
     1c8:	c1 df       	rcall	.-126    	; 0x14c <__SREG__+0x10d>
     1ca:	ae 59       	subi	r26, 0x9E	; 158
     1cc:	e1 b1       	in	r30, 0x01	; 1
     1ce:	b7 96       	adiw	r30, 0x27	; 39
     1d0:	e5 e3       	ldi	r30, 0x35	; 53
     1d2:	e4 53       	subi	r30, 0x34	; 52
     1d4:	c6 3a       	cpi	r28, 0xA6	; 166
     1d6:	e6 51       	subi	r30, 0x16	; 22
     1d8:	99 76       	andi	r25, 0x69	; 105
     1da:	96 e8       	ldi	r25, 0x86	; 134
     1dc:	e6 c2       	rjmp	.+1484   	; 0x7aa <get_MPU_readings+0x10a>
     1de:	84 26       	eor	r8, r20
     1e0:	eb 89       	ldd	r30, Y+19	; 0x13
     1e2:	8c 9b       	sbis	0x11, 4	; 17
     1e4:	62 ed       	ldi	r22, 0xD2	; 210
     1e6:	40 7c       	andi	r20, 0xC0	; 192
     1e8:	6f fc       	.word	0xfc6f	; ????
     1ea:	ef bc       	out	0x2f, r14	; 47
     1ec:	9c 9f       	mul	r25, r28
     1ee:	40 f2       	brcs	.-112    	; 0x180 <__trampolines_end+0x1c>
     1f0:	ba a5       	ldd	r27, Y+42	; 0x2a
     1f2:	6f a5       	ldd	r22, Y+47	; 0x2f
     1f4:	f4 90       	lpm	r15, Z
     1f6:	05 5a       	subi	r16, 0xA5	; 165
     1f8:	2a f7       	brpl	.-54     	; 0x1c4 <__trampolines_end+0x60>
     1fa:	5c 93       	st	X, r21
     1fc:	6b 6c       	ori	r22, 0xCB	; 203
     1fe:	f9 67       	ori	r31, 0x79	; 121
     200:	6d c1       	rjmp	.+730    	; 0x4dc <__EEPROM_REGION_LENGTH__+0xdc>
     202:	1b fc       	.word	0xfc1b	; ????
     204:	e0 e4       	ldi	r30, 0x40	; 64
     206:	0d 47       	sbci	r16, 0x7D	; 125
     208:	fe f5       	brtc	.+126    	; 0x288 <I2C_init+0x2>
     20a:	20 e6       	ldi	r18, 0x60	; 96
     20c:	b5 00       	.word	0x00b5	; ????
     20e:	d0 ed       	ldi	r29, 0xD0	; 208
     210:	90 2e       	mov	r9, r16
     212:	03 00       	.word	0x0003	; ????
     214:	94 35       	cpi	r25, 0x54	; 84
     216:	77 05       	cpc	r23, r7
     218:	00 80       	ld	r0, Z
     21a:	84 1e       	adc	r8, r20
     21c:	08 00       	.word	0x0008	; ????
     21e:	00 20       	and	r0, r0
     220:	4e 0a       	sbc	r4, r30
     222:	00 00       	nop
     224:	00 c8       	rjmp	.-4096   	; 0xfffff226 <__eeprom_end+0xff7ef226>
     226:	0c 33       	cpi	r16, 0x3C	; 60
     228:	33 33       	cpi	r19, 0x33	; 51
     22a:	33 0f       	add	r19, r19
     22c:	98 6e       	ori	r25, 0xE8	; 232
     22e:	12 83       	std	Z+2, r17	; 0x02
     230:	11 41       	sbci	r17, 0x11	; 17
     232:	ef 8d       	ldd	r30, Y+31	; 0x1f
     234:	21 14       	cp	r2, r1
     236:	89 3b       	cpi	r24, 0xB9	; 185
     238:	e6 55       	subi	r30, 0x56	; 86
     23a:	16 cf       	rjmp	.-468    	; 0x68 <__SREG__+0x29>
     23c:	fe e6       	ldi	r31, 0x6E	; 110
     23e:	db 18       	sub	r13, r11
     240:	d1 84       	ldd	r13, Z+9	; 0x09
     242:	4b 38       	cpi	r20, 0x8B	; 139
     244:	1b f7       	brvc	.-58     	; 0x20c <__trampolines_end+0xa8>
     246:	7c 1d       	adc	r23, r12
     248:	90 1d       	adc	r25, r0
     24a:	a4 bb       	out	0x14, r26	; 20
     24c:	e4 24       	eor	r14, r4
     24e:	20 32       	cpi	r18, 0x20	; 32
     250:	84 72       	andi	r24, 0x24	; 36
     252:	5e 22       	and	r5, r30
     254:	81 00       	.word	0x0081	; ????
     256:	c9 f1       	breq	.+114    	; 0x2ca <I2C_readACK+0xc>
     258:	24 ec       	ldi	r18, 0xC4	; 196
     25a:	a1 e5       	ldi	r26, 0x51	; 81
     25c:	3d 27       	eor	r19, r29

0000025e <__ctors_end>:
     25e:	11 24       	eor	r1, r1
     260:	1f be       	out	0x3f, r1	; 63
     262:	cf ef       	ldi	r28, 0xFF	; 255
     264:	d8 e0       	ldi	r29, 0x08	; 8
     266:	de bf       	out	0x3e, r29	; 62
     268:	cd bf       	out	0x3d, r28	; 61

0000026a <__do_clear_bss>:
     26a:	21 e0       	ldi	r18, 0x01	; 1
     26c:	a0 e0       	ldi	r26, 0x00	; 0
     26e:	b1 e0       	ldi	r27, 0x01	; 1
     270:	01 c0       	rjmp	.+2      	; 0x274 <.do_clear_bss_start>

00000272 <.do_clear_bss_loop>:
     272:	1d 92       	st	X+, r1

00000274 <.do_clear_bss_start>:
     274:	a2 34       	cpi	r26, 0x42	; 66
     276:	b2 07       	cpc	r27, r18
     278:	e1 f7       	brne	.-8      	; 0x272 <.do_clear_bss_loop>
     27a:	0e 94 d2 01 	call	0x3a4	; 0x3a4 <main>
     27e:	0c 94 d3 0b 	jmp	0x17a6	; 0x17a6 <_exit>

00000282 <__bad_interrupt>:
     282:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000286 <I2C_init>:
#include <math.h>
#include <util/twi.h>

// Initialization of I2C with 100 kHz SCL clock
void I2C_init(void){
	TWSR0 = 0x00; // TWPS[1:0] = 00 -> prescaler = 1
     286:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	TWBR0 = 0x48; // TWBR = 72 => TWI clock = 100kHz, SCL frequency = F_CPU/(16 + 2(TWBR)*(TWSR prescale))
     28a:	88 e4       	ldi	r24, 0x48	; 72
     28c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
     290:	08 95       	ret

00000292 <I2C_start>:
	//TWCR0 = (1 << TWEN); // TWEN bit enables TWI0 operation and activates the TWI0interface
}

void I2C_start(void){
	// TWI enable/clear TWI Interrupt flag/START condition for TWI0 to become a Master
	TWCR0 = (1 << TWEN) | (1 << TWINT) |(1 << TWSTA);
     292:	84 ea       	ldi	r24, 0xA4	; 164
     294:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	// Wait for TWINT flag set, which indicates that the START condition has been transmitted
	while (!(TWCR0 & (1 << TWINT)));
     298:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     29c:	88 23       	and	r24, r24
     29e:	e4 f7       	brge	.-8      	; 0x298 <I2C_start+0x6>
	// Check value of TWI status register and mask the prescaler bits
	//if ((TWSR0 & 0xF8) != TW_START) return -1;
}
     2a0:	08 95       	ret

000002a2 <I2C_stop>:

void I2C_stop(void){
	// transmit STOP condition
	TWCR0 = (1 << TWEN) | (1 << TWINT) |(1 << TWSTO);
     2a2:	84 e9       	ldi	r24, 0x94	; 148
     2a4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2a8:	08 95       	ret

000002aa <I2C_write>:
}

void I2C_write(uint8_t data){
	// load data into TWDR register
	TWDR0 = data;
     2aa:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
	// Clear TWINT bit in TWCR to start transmission of data
	TWCR0 = (1 << TWINT) | (1 << TWEN);
     2ae:	84 e8       	ldi	r24, 0x84	; 132
     2b0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	// Wait for TWINT flag set, which indicates that data has been transmitted and ACK/NACK has been received
	while (!(TWCR0 & (1 << TWINT)));
     2b4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2b8:	88 23       	and	r24, r24
     2ba:	e4 f7       	brge	.-8      	; 0x2b4 <I2C_write+0xa>
	// Check value of TWI status register and mask prescaler bits
	//if ((TWSR0 & 0xF8) != TW_MT_SLA_ACK) return -1;
}
     2bc:	08 95       	ret

000002be <I2C_readACK>:

uint8_t I2C_readACK(){
	// The ACK pulse is generated on the TWI0 bus
	TWCR0 = (1 << TWINT)|(1 << TWEN)|(1 << TWEA);
     2be:	84 ec       	ldi	r24, 0xC4	; 196
     2c0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	// Wait for TWINT flag set, which indicates that data has been transmitted and ACK/NACK has been received
	while (!(TWCR0 & (1 << TWINT)));
     2c4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2c8:	88 23       	and	r24, r24
     2ca:	e4 f7       	brge	.-8      	; 0x2c4 <I2C_readACK+0x6>
	
	return TWDR0;
     2cc:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
     2d0:	08 95       	ret

000002d2 <I2C_readNACK>:

uint8_t I2C_readNACK(){
	// the device can be virtually disconnected from the 2-wire Serial Bus temporarily
	TWCR0 = (1 << TWINT)|(1 << TWEN);
     2d2:	84 e8       	ldi	r24, 0x84	; 132
     2d4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	// Wait for TWINT flag set, which indicates that data has been transmitted and ACK/NACK has been received
	while (!(TWCR0 & (1 << TWINT)));
     2d8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     2dc:	88 23       	and	r24, r24
     2de:	e4 f7       	brge	.-8      	; 0x2d8 <I2C_readNACK+0x6>

	return TWDR0;
     2e0:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
}
     2e4:	08 95       	ret

000002e6 <I2C_status>:

uint8_t I2C_status(void)
{
	uint8_t status;
	//mask status
	status = TWSR0 & 0xF8;
     2e6:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	return status;
     2ea:	88 7f       	andi	r24, 0xF8	; 248
     2ec:	08 95       	ret

000002ee <ADC_initialize>:
int flex_sensor_reading;

void ADC_initialize() {
	// Setup for ADC (10bit = 0-1023)
	// Clear power reduction bit for ADC
	PRR0 &= ~(1 << PRADC);
     2ee:	e4 e6       	ldi	r30, 0x64	; 100
     2f0:	f0 e0       	ldi	r31, 0x00	; 0
     2f2:	80 81       	ld	r24, Z
     2f4:	8e 7f       	andi	r24, 0xFE	; 254
     2f6:	80 83       	st	Z, r24
	// Select Vref = AVcc
	ADMUX |= (1 << REFS0);
     2f8:	ac e7       	ldi	r26, 0x7C	; 124
     2fa:	b0 e0       	ldi	r27, 0x00	; 0
     2fc:	8c 91       	ld	r24, X
     2fe:	80 64       	ori	r24, 0x40	; 64
     300:	8c 93       	st	X, r24
	ADMUX &= ~(1 << REFS1);
     302:	8c 91       	ld	r24, X
     304:	8f 77       	andi	r24, 0x7F	; 127
     306:	8c 93       	st	X, r24
	// Set the ADC clock div by 128
	// 16M/128=125kHz
	ADCSRA |= (1 << ADPS0);
     308:	ea e7       	ldi	r30, 0x7A	; 122
     30a:	f0 e0       	ldi	r31, 0x00	; 0
     30c:	80 81       	ld	r24, Z
     30e:	81 60       	ori	r24, 0x01	; 1
     310:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS1);
     312:	80 81       	ld	r24, Z
     314:	82 60       	ori	r24, 0x02	; 2
     316:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS2);
     318:	80 81       	ld	r24, Z
     31a:	84 60       	ori	r24, 0x04	; 4
     31c:	80 83       	st	Z, r24
	// Select Channel ADC0 (pin C0)
	ADMUX &= ~(1 << MUX0);
     31e:	8c 91       	ld	r24, X
     320:	8e 7f       	andi	r24, 0xFE	; 254
     322:	8c 93       	st	X, r24
	ADMUX &= ~(1 << MUX1);
     324:	8c 91       	ld	r24, X
     326:	8d 7f       	andi	r24, 0xFD	; 253
     328:	8c 93       	st	X, r24
	ADMUX &= ~(1 << MUX2);
     32a:	8c 91       	ld	r24, X
     32c:	8b 7f       	andi	r24, 0xFB	; 251
     32e:	8c 93       	st	X, r24
	ADMUX &= ~(1 << MUX3);
     330:	8c 91       	ld	r24, X
     332:	87 7f       	andi	r24, 0xF7	; 247
     334:	8c 93       	st	X, r24
	ADCSRA |= (1 << ADATE);   // Autotriggering of ADC
     336:	80 81       	ld	r24, Z
     338:	80 62       	ori	r24, 0x20	; 32
     33a:	80 83       	st	Z, r24
	// Free running mode ADTS[2:0] = 000
	ADCSRB &= ~(1 << ADTS0);
     33c:	ab e7       	ldi	r26, 0x7B	; 123
     33e:	b0 e0       	ldi	r27, 0x00	; 0
     340:	8c 91       	ld	r24, X
     342:	8e 7f       	andi	r24, 0xFE	; 254
     344:	8c 93       	st	X, r24
	ADCSRB &= ~(1 << ADTS1);
     346:	8c 91       	ld	r24, X
     348:	8d 7f       	andi	r24, 0xFD	; 253
     34a:	8c 93       	st	X, r24
	ADCSRB &= ~(1 << ADTS2);
     34c:	8c 91       	ld	r24, X
     34e:	8b 7f       	andi	r24, 0xFB	; 251
     350:	8c 93       	st	X, r24
	// Disable digital input buffer on ADC pin
	DIDR0 |= (1 << ADC0D);
     352:	ae e7       	ldi	r26, 0x7E	; 126
     354:	b0 e0       	ldi	r27, 0x00	; 0
     356:	8c 91       	ld	r24, X
     358:	81 60       	ori	r24, 0x01	; 1
     35a:	8c 93       	st	X, r24
	// Enable ADC
	ADCSRA |= (1 << ADEN);
     35c:	80 81       	ld	r24, Z
     35e:	80 68       	ori	r24, 0x80	; 128
     360:	80 83       	st	Z, r24
	// Start conversion
	ADCSRA |= (1 << ADSC);
     362:	80 81       	ld	r24, Z
     364:	80 64       	ori	r24, 0x40	; 64
     366:	80 83       	st	Z, r24
     368:	08 95       	ret

0000036a <initialize>:
}

void initialize() {
	ADC_initialize(); // ADC initialization to read flex sensor at pin PC0
     36a:	0e 94 77 01 	call	0x2ee	; 0x2ee <ADC_initialize>
	// Set up serial UART printing
	UART0_init(USART_BAUD_PRESCALER);
     36e:	87 e6       	ldi	r24, 0x67	; 103
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	0e 94 de 04 	call	0x9bc	; 0x9bc <UART0_init>
	UART1_init(USART_BAUD_PRESCALER);
     376:	87 e6       	ldi	r24, 0x67	; 103
     378:	90 e0       	ldi	r25, 0x00	; 0
     37a:	0e 94 ed 04 	call	0x9da	; 0x9da <UART1_init>
	// Set ESP TX pin (ATmega) as output
	DDRB |= (1 << ESP_TX_PIN);
     37e:	84 b1       	in	r24, 0x04	; 4
     380:	84 b9       	out	0x04, r24	; 4
	// Set ESP RX pin (ATmega) as input
	DDRB &= ~(1 << ESP_RX_PIN);
     382:	84 b1       	in	r24, 0x04	; 4
     384:	84 b9       	out	0x04, r24	; 4
	
	MPU_init(); // initialize MPU6050
     386:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <MPU_init>
	MPU_write(0x1A, 3); // configure the bandwidth and delay for accelerometer and gyroscope
     38a:	63 e0       	ldi	r22, 0x03	; 3
     38c:	8a e1       	ldi	r24, 0x1A	; 26
     38e:	0e 94 aa 02 	call	0x554	; 0x554 <MPU_write>
	MPU_write(0x1B, 0); // configure gyroscope range to default range +- 250 degree/second
     392:	60 e0       	ldi	r22, 0x00	; 0
     394:	8b e1       	ldi	r24, 0x1B	; 27
     396:	0e 94 aa 02 	call	0x554	; 0x554 <MPU_write>
	MPU_write(0x1C, 0); // configure accelerometer range to default range +- 2g
     39a:	60 e0       	ldi	r22, 0x00	; 0
     39c:	8c e1       	ldi	r24, 0x1C	; 28
     39e:	0e 94 aa 02 	call	0x554	; 0x554 <MPU_write>
     3a2:	08 95       	ret

000003a4 <main>:
}
int main(void)
{
     3a4:	cf 93       	push	r28
     3a6:	df 93       	push	r29
     3a8:	cd b7       	in	r28, 0x3d	; 61
     3aa:	de b7       	in	r29, 0x3e	; 62
     3ac:	cc 58       	subi	r28, 0x8C	; 140
     3ae:	d1 09       	sbc	r29, r1
     3b0:	0f b6       	in	r0, 0x3f	; 63
     3b2:	f8 94       	cli
     3b4:	de bf       	out	0x3e, r29	; 62
     3b6:	0f be       	out	0x3f, r0	; 63
     3b8:	cd bf       	out	0x3d, r28	; 61
	initialize(); // initialization of Timer2 and MPU
     3ba:	0e 94 b5 01 	call	0x36a	; 0x36a <initialize>
	overflowCount = 0;
     3be:	10 92 2e 01 	sts	0x012E, r1	; 0x80012e <overflowCount>
     3c2:	10 92 2f 01 	sts	0x012F, r1	; 0x80012f <overflowCount+0x1>
     3c6:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <overflowCount+0x2>
     3ca:	10 92 31 01 	sts	0x0131, r1	; 0x800131 <overflowCount+0x3>
	previous_time = 0;
     3ce:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <previous_time>
     3d2:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <previous_time+0x1>
     3d6:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <previous_time+0x2>
     3da:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <previous_time+0x3>
	char dataString[100];
	char angleXStr[10], angleYStr[10], gyroZStr[10], flexStr[10];
    while (1) 
    {
		// Readings from FLEX SENSOR and MPU6050
		get_MPU_readings(); // needed readings sent to the arm: angleX, angleY, GyroZ_converted
     3de:	0e 94 50 03 	call	0x6a0	; 0x6a0 <get_MPU_readings>
		flex_sensor_reading = ADC; // store the reading from ADC to flex_sensor_reading variable
     3e2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     3e6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     3ea:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <flex_sensor_reading+0x1>
     3ee:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <flex_sensor_reading>
		// Sending data from Atmega328PB to ESP32
        // Convert floats to strings
        dtostrf(angleX, 6, 2, angleXStr);
     3f2:	60 91 28 01 	lds	r22, 0x0128	; 0x800128 <angleX>
     3f6:	70 91 29 01 	lds	r23, 0x0129	; 0x800129 <angleX+0x1>
     3fa:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <angleX+0x2>
     3fe:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <angleX+0x3>
     402:	8e 01       	movw	r16, r28
     404:	0b 59       	subi	r16, 0x9B	; 155
     406:	1f 4f       	sbci	r17, 0xFF	; 255
     408:	22 e0       	ldi	r18, 0x02	; 2
     40a:	46 e0       	ldi	r20, 0x06	; 6
     40c:	0e 94 03 09 	call	0x1206	; 0x1206 <dtostrf>
        dtostrf(angleY, 6, 2, angleYStr);
     410:	60 91 38 01 	lds	r22, 0x0138	; 0x800138 <angleY>
     414:	70 91 39 01 	lds	r23, 0x0139	; 0x800139 <angleY+0x1>
     418:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <angleY+0x2>
     41c:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <angleY+0x3>
     420:	06 5f       	subi	r16, 0xF6	; 246
     422:	1f 4f       	sbci	r17, 0xFF	; 255
     424:	22 e0       	ldi	r18, 0x02	; 2
     426:	46 e0       	ldi	r20, 0x06	; 6
     428:	0e 94 03 09 	call	0x1206	; 0x1206 <dtostrf>
        dtostrf(GyroZ_converted, 6, 2, gyroZStr);
     42c:	60 91 16 01 	lds	r22, 0x0116	; 0x800116 <GyroZ_converted>
     430:	70 91 17 01 	lds	r23, 0x0117	; 0x800117 <GyroZ_converted+0x1>
     434:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <GyroZ_converted+0x2>
     438:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <GyroZ_converted+0x3>
     43c:	06 5f       	subi	r16, 0xF6	; 246
     43e:	1f 4f       	sbci	r17, 0xFF	; 255
     440:	22 e0       	ldi	r18, 0x02	; 2
     442:	46 e0       	ldi	r20, 0x06	; 6
     444:	0e 94 03 09 	call	0x1206	; 0x1206 <dtostrf>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     448:	4a e0       	ldi	r20, 0x0A	; 10
     44a:	be 01       	movw	r22, r28
     44c:	6d 57       	subi	r22, 0x7D	; 125
     44e:	7f 4f       	sbci	r23, 0xFF	; 255
     450:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <flex_sensor_reading>
     454:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <flex_sensor_reading+0x1>
     458:	0e 94 35 09 	call	0x126a	; 0x126a <__itoa_ncheck>
        itoa(flex_sensor_reading, flexStr, 10); // Convert integer to string

        // Manually construct the string to send
        strcpy(dataString, flexStr);
     45c:	be 01       	movw	r22, r28
     45e:	6d 57       	subi	r22, 0x7D	; 125
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	08 57       	subi	r16, 0x78	; 120
     464:	11 09       	sbc	r17, r1
     466:	c8 01       	movw	r24, r16
     468:	0e 94 2e 09 	call	0x125c	; 0x125c <strcpy>
        strcat(dataString, ",");
     46c:	f8 01       	movw	r30, r16
     46e:	01 90       	ld	r0, Z+
     470:	00 20       	and	r0, r0
     472:	e9 f7       	brne	.-6      	; 0x46e <__EEPROM_REGION_LENGTH__+0x6e>
     474:	31 97       	sbiw	r30, 0x01	; 1
     476:	0f 2e       	mov	r0, r31
     478:	fc e2       	ldi	r31, 0x2C	; 44
     47a:	ef 2e       	mov	r14, r31
     47c:	f1 2c       	mov	r15, r1
     47e:	f0 2d       	mov	r31, r0
     480:	f1 82       	std	Z+1, r15	; 0x01
     482:	e0 82       	st	Z, r14
        strcat(dataString, angleXStr);
     484:	be 01       	movw	r22, r28
     486:	6b 59       	subi	r22, 0x9B	; 155
     488:	7f 4f       	sbci	r23, 0xFF	; 255
     48a:	c8 01       	movw	r24, r16
     48c:	0e 94 23 09 	call	0x1246	; 0x1246 <strcat>
        strcat(dataString, ",");
     490:	f8 01       	movw	r30, r16
     492:	01 90       	ld	r0, Z+
     494:	00 20       	and	r0, r0
     496:	e9 f7       	brne	.-6      	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
     498:	31 97       	sbiw	r30, 0x01	; 1
     49a:	f1 82       	std	Z+1, r15	; 0x01
     49c:	e0 82       	st	Z, r14
        strcat(dataString, angleYStr);
     49e:	be 01       	movw	r22, r28
     4a0:	61 59       	subi	r22, 0x91	; 145
     4a2:	7f 4f       	sbci	r23, 0xFF	; 255
     4a4:	c8 01       	movw	r24, r16
     4a6:	0e 94 23 09 	call	0x1246	; 0x1246 <strcat>
        strcat(dataString, ",");
     4aa:	f8 01       	movw	r30, r16
     4ac:	01 90       	ld	r0, Z+
     4ae:	00 20       	and	r0, r0
     4b0:	e9 f7       	brne	.-6      	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
     4b2:	31 97       	sbiw	r30, 0x01	; 1
     4b4:	f1 82       	std	Z+1, r15	; 0x01
     4b6:	e0 82       	st	Z, r14
        strcat(dataString, gyroZStr);
     4b8:	be 01       	movw	r22, r28
     4ba:	67 58       	subi	r22, 0x87	; 135
     4bc:	7f 4f       	sbci	r23, 0xFF	; 255
     4be:	c8 01       	movw	r24, r16
     4c0:	0e 94 23 09 	call	0x1246	; 0x1246 <strcat>
        strcat(dataString, "\n");
     4c4:	f8 01       	movw	r30, r16
     4c6:	01 90       	ld	r0, Z+
     4c8:	00 20       	and	r0, r0
     4ca:	e9 f7       	brne	.-6      	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
     4cc:	31 97       	sbiw	r30, 0x01	; 1
     4ce:	8a e0       	ldi	r24, 0x0A	; 10
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	91 83       	std	Z+1, r25	; 0x01
     4d4:	80 83       	st	Z, r24
				
        UART1_putstring(dataString); // send to UART1
     4d6:	c8 01       	movw	r24, r16
     4d8:	0e 94 17 05 	call	0xa2e	; 0xa2e <UART1_putstring>
		UART0_putstring(dataString); // send to UART0 for checking
     4dc:	c8 01       	movw	r24, r16
     4de:	0e 94 0a 05 	call	0xa14	; 0xa14 <UART0_putstring>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4e2:	2f ef       	ldi	r18, 0xFF	; 255
     4e4:	89 e6       	ldi	r24, 0x69	; 105
     4e6:	98 e1       	ldi	r25, 0x18	; 24
     4e8:	21 50       	subi	r18, 0x01	; 1
     4ea:	80 40       	sbci	r24, 0x00	; 0
     4ec:	90 40       	sbci	r25, 0x00	; 0
     4ee:	e1 f7       	brne	.-8      	; 0x4e8 <__EEPROM_REGION_LENGTH__+0xe8>
     4f0:	00 c0       	rjmp	.+0      	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
     4f2:	00 00       	nop
     4f4:	74 cf       	rjmp	.-280    	; 0x3de <main+0x3a>

000004f6 <MPU_init>:
	//cli();
	TCCR2A = 0;
	TCCR2B = 0;
	TCNT2 = 0; // initialize TImer 2 value
	TCCR2B |= (1 << CS20) | (1 << CS21); // prescaler = 32
	TIMSK2 |= (1 << TOIE2); // enable overflow interrupt
     4f6:	0e 94 43 01 	call	0x286	; 0x286 <I2C_init>
     4fa:	0e 94 49 01 	call	0x292	; 0x292 <I2C_start>
     4fe:	0e 94 73 01 	call	0x2e6	; 0x2e6 <I2C_status>
     502:	88 30       	cpi	r24, 0x08	; 8
     504:	f9 f4       	brne	.+62     	; 0x544 <MPU_init+0x4e>
     506:	80 ed       	ldi	r24, 0xD0	; 208
     508:	0e 94 55 01 	call	0x2aa	; 0x2aa <I2C_write>
     50c:	0e 94 73 01 	call	0x2e6	; 0x2e6 <I2C_status>
     510:	88 31       	cpi	r24, 0x18	; 24
     512:	d1 f4       	brne	.+52     	; 0x548 <MPU_init+0x52>
     514:	8b e6       	ldi	r24, 0x6B	; 107
     516:	0e 94 55 01 	call	0x2aa	; 0x2aa <I2C_write>
     51a:	0e 94 73 01 	call	0x2e6	; 0x2e6 <I2C_status>
     51e:	88 32       	cpi	r24, 0x28	; 40
     520:	a9 f4       	brne	.+42     	; 0x54c <MPU_init+0x56>
     522:	80 e0       	ldi	r24, 0x00	; 0
     524:	0e 94 55 01 	call	0x2aa	; 0x2aa <I2C_write>
     528:	0e 94 73 01 	call	0x2e6	; 0x2e6 <I2C_status>
     52c:	88 32       	cpi	r24, 0x28	; 40
     52e:	81 f4       	brne	.+32     	; 0x550 <MPU_init+0x5a>
     530:	0e 94 51 01 	call	0x2a2	; 0x2a2 <I2C_stop>
     534:	8f e9       	ldi	r24, 0x9F	; 159
     536:	9f e0       	ldi	r25, 0x0F	; 15
     538:	01 97       	sbiw	r24, 0x01	; 1
     53a:	f1 f7       	brne	.-4      	; 0x538 <MPU_init+0x42>
     53c:	00 c0       	rjmp	.+0      	; 0x53e <MPU_init+0x48>
     53e:	00 00       	nop
     540:	80 e0       	ldi	r24, 0x00	; 0
     542:	08 95       	ret
     544:	8f ef       	ldi	r24, 0xFF	; 255
     546:	08 95       	ret
     548:	8f ef       	ldi	r24, 0xFF	; 255
     54a:	08 95       	ret
     54c:	8f ef       	ldi	r24, 0xFF	; 255
     54e:	08 95       	ret
     550:	8f ef       	ldi	r24, 0xFF	; 255
     552:	08 95       	ret

00000554 <MPU_write>:
     554:	cf 93       	push	r28
     556:	df 93       	push	r29
     558:	c8 2f       	mov	r28, r24
     55a:	d6 2f       	mov	r29, r22
     55c:	0e 94 43 01 	call	0x286	; 0x286 <I2C_init>
     560:	0e 94 49 01 	call	0x292	; 0x292 <I2C_start>
     564:	0e 94 73 01 	call	0x2e6	; 0x2e6 <I2C_status>
     568:	88 30       	cpi	r24, 0x08	; 8
     56a:	e9 f4       	brne	.+58     	; 0x5a6 <MPU_write+0x52>
     56c:	80 ed       	ldi	r24, 0xD0	; 208
     56e:	0e 94 55 01 	call	0x2aa	; 0x2aa <I2C_write>
     572:	0e 94 73 01 	call	0x2e6	; 0x2e6 <I2C_status>
     576:	88 31       	cpi	r24, 0x18	; 24
     578:	c1 f4       	brne	.+48     	; 0x5aa <MPU_write+0x56>
     57a:	8c 2f       	mov	r24, r28
     57c:	0e 94 55 01 	call	0x2aa	; 0x2aa <I2C_write>
     580:	0e 94 73 01 	call	0x2e6	; 0x2e6 <I2C_status>
     584:	88 32       	cpi	r24, 0x28	; 40
     586:	99 f4       	brne	.+38     	; 0x5ae <MPU_write+0x5a>
     588:	8d 2f       	mov	r24, r29
     58a:	0e 94 55 01 	call	0x2aa	; 0x2aa <I2C_write>
     58e:	0e 94 73 01 	call	0x2e6	; 0x2e6 <I2C_status>
     592:	88 32       	cpi	r24, 0x28	; 40
     594:	71 f4       	brne	.+28     	; 0x5b2 <MPU_write+0x5e>
     596:	0e 94 51 01 	call	0x2a2	; 0x2a2 <I2C_stop>
     59a:	85 e3       	ldi	r24, 0x35	; 53
     59c:	8a 95       	dec	r24
     59e:	f1 f7       	brne	.-4      	; 0x59c <MPU_write+0x48>
     5a0:	00 00       	nop
     5a2:	80 e0       	ldi	r24, 0x00	; 0
     5a4:	07 c0       	rjmp	.+14     	; 0x5b4 <MPU_write+0x60>
     5a6:	8f ef       	ldi	r24, 0xFF	; 255
     5a8:	05 c0       	rjmp	.+10     	; 0x5b4 <MPU_write+0x60>
     5aa:	8f ef       	ldi	r24, 0xFF	; 255
     5ac:	03 c0       	rjmp	.+6      	; 0x5b4 <MPU_write+0x60>
     5ae:	8f ef       	ldi	r24, 0xFF	; 255
     5b0:	01 c0       	rjmp	.+2      	; 0x5b4 <MPU_write+0x60>
     5b2:	8f ef       	ldi	r24, 0xFF	; 255
     5b4:	df 91       	pop	r29
     5b6:	cf 91       	pop	r28
     5b8:	08 95       	ret

000005ba <MPU_read>:
     5ba:	0f 93       	push	r16
     5bc:	1f 93       	push	r17
     5be:	cf 93       	push	r28
     5c0:	c8 2f       	mov	r28, r24
     5c2:	8b 01       	movw	r16, r22
     5c4:	0e 94 49 01 	call	0x292	; 0x292 <I2C_start>
     5c8:	0e 94 73 01 	call	0x2e6	; 0x2e6 <I2C_status>
     5cc:	88 30       	cpi	r24, 0x08	; 8
     5ce:	b1 f5       	brne	.+108    	; 0x63c <MPU_read+0x82>
     5d0:	80 ed       	ldi	r24, 0xD0	; 208
     5d2:	0e 94 55 01 	call	0x2aa	; 0x2aa <I2C_write>
     5d6:	0e 94 73 01 	call	0x2e6	; 0x2e6 <I2C_status>
     5da:	88 31       	cpi	r24, 0x18	; 24
     5dc:	89 f5       	brne	.+98     	; 0x640 <MPU_read+0x86>
     5de:	8c 2f       	mov	r24, r28
     5e0:	0e 94 55 01 	call	0x2aa	; 0x2aa <I2C_write>
     5e4:	0e 94 73 01 	call	0x2e6	; 0x2e6 <I2C_status>
     5e8:	88 32       	cpi	r24, 0x28	; 40
     5ea:	61 f5       	brne	.+88     	; 0x644 <MPU_read+0x8a>
     5ec:	0e 94 51 01 	call	0x2a2	; 0x2a2 <I2C_stop>
     5f0:	85 e3       	ldi	r24, 0x35	; 53
     5f2:	8a 95       	dec	r24
     5f4:	f1 f7       	brne	.-4      	; 0x5f2 <MPU_read+0x38>
     5f6:	00 00       	nop
     5f8:	0e 94 49 01 	call	0x292	; 0x292 <I2C_start>
     5fc:	0e 94 73 01 	call	0x2e6	; 0x2e6 <I2C_status>
     600:	88 30       	cpi	r24, 0x08	; 8
     602:	11 f5       	brne	.+68     	; 0x648 <MPU_read+0x8e>
     604:	81 ed       	ldi	r24, 0xD1	; 209
     606:	0e 94 55 01 	call	0x2aa	; 0x2aa <I2C_write>
     60a:	0e 94 73 01 	call	0x2e6	; 0x2e6 <I2C_status>
     60e:	80 34       	cpi	r24, 0x40	; 64
     610:	e9 f4       	brne	.+58     	; 0x64c <MPU_read+0x92>
     612:	0e 94 5f 01 	call	0x2be	; 0x2be <I2C_readACK>
     616:	f8 01       	movw	r30, r16
     618:	10 82       	st	Z, r1
     61a:	81 83       	std	Z+1, r24	; 0x01
     61c:	0e 94 69 01 	call	0x2d2	; 0x2d2 <I2C_readNACK>
     620:	f8 01       	movw	r30, r16
     622:	20 81       	ld	r18, Z
     624:	31 81       	ldd	r19, Z+1	; 0x01
     626:	28 2b       	or	r18, r24
     628:	31 83       	std	Z+1, r19	; 0x01
     62a:	20 83       	st	Z, r18
     62c:	0e 94 51 01 	call	0x2a2	; 0x2a2 <I2C_stop>
     630:	f5 e3       	ldi	r31, 0x35	; 53
     632:	fa 95       	dec	r31
     634:	f1 f7       	brne	.-4      	; 0x632 <MPU_read+0x78>
     636:	00 00       	nop
     638:	80 e0       	ldi	r24, 0x00	; 0
     63a:	09 c0       	rjmp	.+18     	; 0x64e <MPU_read+0x94>
     63c:	8f ef       	ldi	r24, 0xFF	; 255
     63e:	07 c0       	rjmp	.+14     	; 0x64e <MPU_read+0x94>
     640:	8f ef       	ldi	r24, 0xFF	; 255
     642:	05 c0       	rjmp	.+10     	; 0x64e <MPU_read+0x94>
     644:	8f ef       	ldi	r24, 0xFF	; 255
     646:	03 c0       	rjmp	.+6      	; 0x64e <MPU_read+0x94>
     648:	8f ef       	ldi	r24, 0xFF	; 255
     64a:	01 c0       	rjmp	.+2      	; 0x64e <MPU_read+0x94>
     64c:	8f ef       	ldi	r24, 0xFF	; 255
     64e:	cf 91       	pop	r28
     650:	1f 91       	pop	r17
     652:	0f 91       	pop	r16
     654:	08 95       	ret

00000656 <__vector_9>:
	//sei();
}
ISR(TIMER2_OVF_vect) {
     656:	1f 92       	push	r1
     658:	0f 92       	push	r0
     65a:	0f b6       	in	r0, 0x3f	; 63
     65c:	0f 92       	push	r0
     65e:	11 24       	eor	r1, r1
     660:	8f 93       	push	r24
     662:	9f 93       	push	r25
     664:	af 93       	push	r26
     666:	bf 93       	push	r27
	overflowCount++; // Increment overflow counter
     668:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <overflowCount>
     66c:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <overflowCount+0x1>
     670:	a0 91 30 01 	lds	r26, 0x0130	; 0x800130 <overflowCount+0x2>
     674:	b0 91 31 01 	lds	r27, 0x0131	; 0x800131 <overflowCount+0x3>
     678:	01 96       	adiw	r24, 0x01	; 1
     67a:	a1 1d       	adc	r26, r1
     67c:	b1 1d       	adc	r27, r1
     67e:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <overflowCount>
     682:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <overflowCount+0x1>
     686:	a0 93 30 01 	sts	0x0130, r26	; 0x800130 <overflowCount+0x2>
     68a:	b0 93 31 01 	sts	0x0131, r27	; 0x800131 <overflowCount+0x3>
}
     68e:	bf 91       	pop	r27
     690:	af 91       	pop	r26
     692:	9f 91       	pop	r25
     694:	8f 91       	pop	r24
     696:	0f 90       	pop	r0
     698:	0f be       	out	0x3f, r0	; 63
     69a:	0f 90       	pop	r0
     69c:	1f 90       	pop	r1
     69e:	18 95       	reti

000006a0 <get_MPU_readings>:

void get_MPU_readings() {
     6a0:	4f 92       	push	r4
     6a2:	5f 92       	push	r5
     6a4:	6f 92       	push	r6
     6a6:	7f 92       	push	r7
     6a8:	8f 92       	push	r8
     6aa:	9f 92       	push	r9
     6ac:	af 92       	push	r10
     6ae:	bf 92       	push	r11
     6b0:	cf 92       	push	r12
     6b2:	df 92       	push	r13
     6b4:	ef 92       	push	r14
     6b6:	ff 92       	push	r15
     6b8:	cf 93       	push	r28
     6ba:	df 93       	push	r29
     6bc:	00 d0       	rcall	.+0      	; 0x6be <get_MPU_readings+0x1e>
     6be:	00 d0       	rcall	.+0      	; 0x6c0 <get_MPU_readings+0x20>
     6c0:	cd b7       	in	r28, 0x3d	; 61
     6c2:	de b7       	in	r29, 0x3e	; 62
	MPU_read(0x3B,&AcX);
     6c4:	62 e3       	ldi	r22, 0x32	; 50
     6c6:	71 e0       	ldi	r23, 0x01	; 1
     6c8:	8b e3       	ldi	r24, 0x3B	; 59
     6ca:	0e 94 dd 02 	call	0x5ba	; 0x5ba <MPU_read>
	MPU_read(0x3D,&AcY);
     6ce:	64 e1       	ldi	r22, 0x14	; 20
     6d0:	71 e0       	ldi	r23, 0x01	; 1
     6d2:	8d e3       	ldi	r24, 0x3D	; 61
     6d4:	0e 94 dd 02 	call	0x5ba	; 0x5ba <MPU_read>
	MPU_read(0x3F,&AcZ);
     6d8:	6a e1       	ldi	r22, 0x1A	; 26
     6da:	71 e0       	ldi	r23, 0x01	; 1
     6dc:	8f e3       	ldi	r24, 0x3F	; 63
     6de:	0e 94 dd 02 	call	0x5ba	; 0x5ba <MPU_read>
	MPU_read(0x43,&GyroX);
     6e2:	68 e0       	ldi	r22, 0x08	; 8
     6e4:	71 e0       	ldi	r23, 0x01	; 1
     6e6:	83 e4       	ldi	r24, 0x43	; 67
     6e8:	0e 94 dd 02 	call	0x5ba	; 0x5ba <MPU_read>
	MPU_read(0x43,&GyroX);
     6ec:	68 e0       	ldi	r22, 0x08	; 8
     6ee:	71 e0       	ldi	r23, 0x01	; 1
     6f0:	83 e4       	ldi	r24, 0x43	; 67
     6f2:	0e 94 dd 02 	call	0x5ba	; 0x5ba <MPU_read>
	MPU_read(0x45,&GyroY);
     6f6:	6c e2       	ldi	r22, 0x2C	; 44
     6f8:	71 e0       	ldi	r23, 0x01	; 1
     6fa:	85 e4       	ldi	r24, 0x45	; 69
     6fc:	0e 94 dd 02 	call	0x5ba	; 0x5ba <MPU_read>
	MPU_read(0x47,&GyroZ);
     700:	6c e3       	ldi	r22, 0x3C	; 60
     702:	71 e0       	ldi	r23, 0x01	; 1
     704:	87 e4       	ldi	r24, 0x47	; 71
     706:	0e 94 dd 02 	call	0x5ba	; 0x5ba <MPU_read>
	// Convert ACCELEROMETER raw data to m/s with g = 9.8 m/s^2
	AcX_converted = (((float) AcX + 300) / 16384.0) * 9.8;
     70a:	60 91 32 01 	lds	r22, 0x0132	; 0x800132 <AcX>
     70e:	70 91 33 01 	lds	r23, 0x0133	; 0x800133 <AcX+0x1>
     712:	07 2e       	mov	r0, r23
     714:	00 0c       	add	r0, r0
     716:	88 0b       	sbc	r24, r24
     718:	99 0b       	sbc	r25, r25
     71a:	0e 94 34 06 	call	0xc68	; 0xc68 <__floatsisf>
     71e:	20 e0       	ldi	r18, 0x00	; 0
     720:	30 e0       	ldi	r19, 0x00	; 0
     722:	46 e9       	ldi	r20, 0x96	; 150
     724:	53 e4       	ldi	r21, 0x43	; 67
     726:	0e 94 25 05 	call	0xa4a	; 0xa4a <__addsf3>
     72a:	20 e0       	ldi	r18, 0x00	; 0
     72c:	30 e0       	ldi	r19, 0x00	; 0
     72e:	40 e8       	ldi	r20, 0x80	; 128
     730:	58 e3       	ldi	r21, 0x38	; 56
     732:	0e 94 ef 06 	call	0xdde	; 0xdde <__mulsf3>
     736:	2d ec       	ldi	r18, 0xCD	; 205
     738:	3c ec       	ldi	r19, 0xCC	; 204
     73a:	4c e1       	ldi	r20, 0x1C	; 28
     73c:	51 e4       	ldi	r21, 0x41	; 65
     73e:	0e 94 ef 06 	call	0xdde	; 0xdde <__mulsf3>
     742:	2b 01       	movw	r4, r22
     744:	3c 01       	movw	r6, r24
     746:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <AcX_converted>
     74a:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <AcX_converted+0x1>
     74e:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <AcX_converted+0x2>
     752:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <AcX_converted+0x3>
	AcY_converted = (((float) AcY - 890) / 16384.0) * 9.8;
     756:	60 91 14 01 	lds	r22, 0x0114	; 0x800114 <AcY>
     75a:	70 91 15 01 	lds	r23, 0x0115	; 0x800115 <AcY+0x1>
     75e:	07 2e       	mov	r0, r23
     760:	00 0c       	add	r0, r0
     762:	88 0b       	sbc	r24, r24
     764:	99 0b       	sbc	r25, r25
     766:	0e 94 34 06 	call	0xc68	; 0xc68 <__floatsisf>
     76a:	20 e0       	ldi	r18, 0x00	; 0
     76c:	30 e8       	ldi	r19, 0x80	; 128
     76e:	4e e5       	ldi	r20, 0x5E	; 94
     770:	54 e4       	ldi	r21, 0x44	; 68
     772:	0e 94 24 05 	call	0xa48	; 0xa48 <__subsf3>
     776:	20 e0       	ldi	r18, 0x00	; 0
     778:	30 e0       	ldi	r19, 0x00	; 0
     77a:	40 e8       	ldi	r20, 0x80	; 128
     77c:	58 e3       	ldi	r21, 0x38	; 56
     77e:	0e 94 ef 06 	call	0xdde	; 0xdde <__mulsf3>
     782:	2d ec       	ldi	r18, 0xCD	; 205
     784:	3c ec       	ldi	r19, 0xCC	; 204
     786:	4c e1       	ldi	r20, 0x1C	; 28
     788:	51 e4       	ldi	r21, 0x41	; 65
     78a:	0e 94 ef 06 	call	0xdde	; 0xdde <__mulsf3>
     78e:	4b 01       	movw	r8, r22
     790:	5c 01       	movw	r10, r24
     792:	60 93 1c 01 	sts	0x011C, r22	; 0x80011c <AcY_converted>
     796:	70 93 1d 01 	sts	0x011D, r23	; 0x80011d <AcY_converted+0x1>
     79a:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <AcY_converted+0x2>
     79e:	90 93 1f 01 	sts	0x011F, r25	; 0x80011f <AcY_converted+0x3>
	AcZ_converted = (((float) AcZ + 484)/ 16384.0) * 9.8;
     7a2:	60 91 1a 01 	lds	r22, 0x011A	; 0x80011a <AcZ>
     7a6:	70 91 1b 01 	lds	r23, 0x011B	; 0x80011b <AcZ+0x1>
     7aa:	07 2e       	mov	r0, r23
     7ac:	00 0c       	add	r0, r0
     7ae:	88 0b       	sbc	r24, r24
     7b0:	99 0b       	sbc	r25, r25
     7b2:	0e 94 34 06 	call	0xc68	; 0xc68 <__floatsisf>
     7b6:	20 e0       	ldi	r18, 0x00	; 0
     7b8:	30 e0       	ldi	r19, 0x00	; 0
     7ba:	42 ef       	ldi	r20, 0xF2	; 242
     7bc:	53 e4       	ldi	r21, 0x43	; 67
     7be:	0e 94 25 05 	call	0xa4a	; 0xa4a <__addsf3>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e8       	ldi	r20, 0x80	; 128
     7c8:	58 e3       	ldi	r21, 0x38	; 56
     7ca:	0e 94 ef 06 	call	0xdde	; 0xdde <__mulsf3>
     7ce:	2d ec       	ldi	r18, 0xCD	; 205
     7d0:	3c ec       	ldi	r19, 0xCC	; 204
     7d2:	4c e1       	ldi	r20, 0x1C	; 28
     7d4:	51 e4       	ldi	r21, 0x41	; 65
     7d6:	0e 94 ef 06 	call	0xdde	; 0xdde <__mulsf3>
     7da:	6b 01       	movw	r12, r22
     7dc:	7c 01       	movw	r14, r24
     7de:	60 93 3e 01 	sts	0x013E, r22	; 0x80013e <AcZ_converted>
     7e2:	70 93 3f 01 	sts	0x013F, r23	; 0x80013f <AcZ_converted+0x1>
     7e6:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <AcZ_converted+0x2>
     7ea:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <AcZ_converted+0x3>
	// Convert GYROSCOPE raw data to degree/s
	GyroX_converted = ((float) GyroX + 140) / 131.0;
     7ee:	60 91 08 01 	lds	r22, 0x0108	; 0x800108 <GyroX>
     7f2:	70 91 09 01 	lds	r23, 0x0109	; 0x800109 <GyroX+0x1>
     7f6:	07 2e       	mov	r0, r23
     7f8:	00 0c       	add	r0, r0
     7fa:	88 0b       	sbc	r24, r24
     7fc:	99 0b       	sbc	r25, r25
     7fe:	0e 94 34 06 	call	0xc68	; 0xc68 <__floatsisf>
     802:	20 e0       	ldi	r18, 0x00	; 0
     804:	30 e0       	ldi	r19, 0x00	; 0
     806:	4c e0       	ldi	r20, 0x0C	; 12
     808:	53 e4       	ldi	r21, 0x43	; 67
     80a:	0e 94 25 05 	call	0xa4a	; 0xa4a <__addsf3>
     80e:	20 e0       	ldi	r18, 0x00	; 0
     810:	30 e0       	ldi	r19, 0x00	; 0
     812:	43 e0       	ldi	r20, 0x03	; 3
     814:	53 e4       	ldi	r21, 0x43	; 67
     816:	0e 94 c0 05 	call	0xb80	; 0xb80 <__divsf3>
     81a:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <GyroX_converted>
     81e:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <GyroX_converted+0x1>
     822:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <GyroX_converted+0x2>
     826:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <GyroX_converted+0x3>
	GyroY_converted = ((float) GyroY + 75) / 131.0;
     82a:	60 91 2c 01 	lds	r22, 0x012C	; 0x80012c <GyroY>
     82e:	70 91 2d 01 	lds	r23, 0x012D	; 0x80012d <GyroY+0x1>
     832:	07 2e       	mov	r0, r23
     834:	00 0c       	add	r0, r0
     836:	88 0b       	sbc	r24, r24
     838:	99 0b       	sbc	r25, r25
     83a:	0e 94 34 06 	call	0xc68	; 0xc68 <__floatsisf>
     83e:	20 e0       	ldi	r18, 0x00	; 0
     840:	30 e0       	ldi	r19, 0x00	; 0
     842:	46 e9       	ldi	r20, 0x96	; 150
     844:	52 e4       	ldi	r21, 0x42	; 66
     846:	0e 94 25 05 	call	0xa4a	; 0xa4a <__addsf3>
     84a:	20 e0       	ldi	r18, 0x00	; 0
     84c:	30 e0       	ldi	r19, 0x00	; 0
     84e:	43 e0       	ldi	r20, 0x03	; 3
     850:	53 e4       	ldi	r21, 0x43	; 67
     852:	0e 94 c0 05 	call	0xb80	; 0xb80 <__divsf3>
     856:	60 93 00 01 	sts	0x0100, r22	; 0x800100 <__DATA_REGION_ORIGIN__>
     85a:	70 93 01 01 	sts	0x0101, r23	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     85e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     862:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
	GyroZ_converted = ((float) GyroZ - 135) / 131.0;
     866:	60 91 3c 01 	lds	r22, 0x013C	; 0x80013c <GyroZ>
     86a:	70 91 3d 01 	lds	r23, 0x013D	; 0x80013d <GyroZ+0x1>
     86e:	07 2e       	mov	r0, r23
     870:	00 0c       	add	r0, r0
     872:	88 0b       	sbc	r24, r24
     874:	99 0b       	sbc	r25, r25
     876:	0e 94 34 06 	call	0xc68	; 0xc68 <__floatsisf>
     87a:	20 e0       	ldi	r18, 0x00	; 0
     87c:	30 e0       	ldi	r19, 0x00	; 0
     87e:	47 e0       	ldi	r20, 0x07	; 7
     880:	53 e4       	ldi	r21, 0x43	; 67
     882:	0e 94 24 05 	call	0xa48	; 0xa48 <__subsf3>
     886:	20 e0       	ldi	r18, 0x00	; 0
     888:	30 e0       	ldi	r19, 0x00	; 0
     88a:	43 e0       	ldi	r20, 0x03	; 3
     88c:	53 e4       	ldi	r21, 0x43	; 67
     88e:	0e 94 c0 05 	call	0xb80	; 0xb80 <__divsf3>
     892:	60 93 16 01 	sts	0x0116, r22	; 0x800116 <GyroZ_converted>
     896:	70 93 17 01 	sts	0x0117, r23	; 0x800117 <GyroZ_converted+0x1>
     89a:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <GyroZ_converted+0x2>
     89e:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <GyroZ_converted+0x3>
	// Rotational angle around X, Y axis (ROLL ~ X, PITCH ~ Y)
	angleX = (atan(AcY_converted / sqrt(pow(AcX_converted, 2) + pow(AcZ_converted, 2))) * 180 / PI) + 0.60;
     8a2:	20 e0       	ldi	r18, 0x00	; 0
     8a4:	30 e0       	ldi	r19, 0x00	; 0
     8a6:	40 e0       	ldi	r20, 0x00	; 0
     8a8:	50 e4       	ldi	r21, 0x40	; 64
     8aa:	c3 01       	movw	r24, r6
     8ac:	b2 01       	movw	r22, r4
     8ae:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <pow>
     8b2:	69 83       	std	Y+1, r22	; 0x01
     8b4:	7a 83       	std	Y+2, r23	; 0x02
     8b6:	8b 83       	std	Y+3, r24	; 0x03
     8b8:	9c 83       	std	Y+4, r25	; 0x04
     8ba:	20 e0       	ldi	r18, 0x00	; 0
     8bc:	30 e0       	ldi	r19, 0x00	; 0
     8be:	40 e0       	ldi	r20, 0x00	; 0
     8c0:	50 e4       	ldi	r21, 0x40	; 64
     8c2:	c7 01       	movw	r24, r14
     8c4:	b6 01       	movw	r22, r12
     8c6:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <pow>
     8ca:	6b 01       	movw	r12, r22
     8cc:	7c 01       	movw	r14, r24
     8ce:	a7 01       	movw	r20, r14
     8d0:	96 01       	movw	r18, r12
     8d2:	69 81       	ldd	r22, Y+1	; 0x01
     8d4:	7a 81       	ldd	r23, Y+2	; 0x02
     8d6:	8b 81       	ldd	r24, Y+3	; 0x03
     8d8:	9c 81       	ldd	r25, Y+4	; 0x04
     8da:	0e 94 25 05 	call	0xa4a	; 0xa4a <__addsf3>
     8de:	0e 94 b2 07 	call	0xf64	; 0xf64 <sqrt>
     8e2:	9b 01       	movw	r18, r22
     8e4:	ac 01       	movw	r20, r24
     8e6:	c5 01       	movw	r24, r10
     8e8:	b4 01       	movw	r22, r8
     8ea:	0e 94 c0 05 	call	0xb80	; 0xb80 <__divsf3>
     8ee:	0e 94 91 05 	call	0xb22	; 0xb22 <atan>
     8f2:	20 e0       	ldi	r18, 0x00	; 0
     8f4:	30 e0       	ldi	r19, 0x00	; 0
     8f6:	44 e3       	ldi	r20, 0x34	; 52
     8f8:	53 e4       	ldi	r21, 0x43	; 67
     8fa:	0e 94 ef 06 	call	0xdde	; 0xdde <__mulsf3>
     8fe:	2b ed       	ldi	r18, 0xDB	; 219
     900:	3f e0       	ldi	r19, 0x0F	; 15
     902:	49 e4       	ldi	r20, 0x49	; 73
     904:	50 e4       	ldi	r21, 0x40	; 64
     906:	0e 94 c0 05 	call	0xb80	; 0xb80 <__divsf3>
     90a:	2a e9       	ldi	r18, 0x9A	; 154
     90c:	39 e9       	ldi	r19, 0x99	; 153
     90e:	49 e1       	ldi	r20, 0x19	; 25
     910:	5f e3       	ldi	r21, 0x3F	; 63
     912:	0e 94 25 05 	call	0xa4a	; 0xa4a <__addsf3>
     916:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <angleX>
     91a:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <angleX+0x1>
     91e:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <angleX+0x2>
     922:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <angleX+0x3>
	angleY = (atan(-1 * AcX_converted / sqrt(pow(AcY_converted, 2) + pow(AcZ_converted, 2))) * 180 / PI) -4.0;
     926:	77 fa       	bst	r7, 7
     928:	70 94       	com	r7
     92a:	77 f8       	bld	r7, 7
     92c:	70 94       	com	r7
     92e:	20 e0       	ldi	r18, 0x00	; 0
     930:	30 e0       	ldi	r19, 0x00	; 0
     932:	40 e0       	ldi	r20, 0x00	; 0
     934:	50 e4       	ldi	r21, 0x40	; 64
     936:	c5 01       	movw	r24, r10
     938:	b4 01       	movw	r22, r8
     93a:	0e 94 5c 07 	call	0xeb8	; 0xeb8 <pow>
     93e:	4b 01       	movw	r8, r22
     940:	5c 01       	movw	r10, r24
     942:	a5 01       	movw	r20, r10
     944:	94 01       	movw	r18, r8
     946:	c7 01       	movw	r24, r14
     948:	b6 01       	movw	r22, r12
     94a:	0e 94 25 05 	call	0xa4a	; 0xa4a <__addsf3>
     94e:	0e 94 b2 07 	call	0xf64	; 0xf64 <sqrt>
     952:	9b 01       	movw	r18, r22
     954:	ac 01       	movw	r20, r24
     956:	c3 01       	movw	r24, r6
     958:	b2 01       	movw	r22, r4
     95a:	0e 94 c0 05 	call	0xb80	; 0xb80 <__divsf3>
     95e:	0e 94 91 05 	call	0xb22	; 0xb22 <atan>
     962:	20 e0       	ldi	r18, 0x00	; 0
     964:	30 e0       	ldi	r19, 0x00	; 0
     966:	44 e3       	ldi	r20, 0x34	; 52
     968:	53 e4       	ldi	r21, 0x43	; 67
     96a:	0e 94 ef 06 	call	0xdde	; 0xdde <__mulsf3>
     96e:	2b ed       	ldi	r18, 0xDB	; 219
     970:	3f e0       	ldi	r19, 0x0F	; 15
     972:	49 e4       	ldi	r20, 0x49	; 73
     974:	50 e4       	ldi	r21, 0x40	; 64
     976:	0e 94 c0 05 	call	0xb80	; 0xb80 <__divsf3>
     97a:	20 e0       	ldi	r18, 0x00	; 0
     97c:	30 e0       	ldi	r19, 0x00	; 0
     97e:	40 e8       	ldi	r20, 0x80	; 128
     980:	50 e4       	ldi	r21, 0x40	; 64
     982:	0e 94 24 05 	call	0xa48	; 0xa48 <__subsf3>
     986:	60 93 38 01 	sts	0x0138, r22	; 0x800138 <angleY>
     98a:	70 93 39 01 	sts	0x0139, r23	; 0x800139 <angleY+0x1>
     98e:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <angleY+0x2>
     992:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <angleY+0x3>
}
     996:	0f 90       	pop	r0
     998:	0f 90       	pop	r0
     99a:	0f 90       	pop	r0
     99c:	0f 90       	pop	r0
     99e:	df 91       	pop	r29
     9a0:	cf 91       	pop	r28
     9a2:	ff 90       	pop	r15
     9a4:	ef 90       	pop	r14
     9a6:	df 90       	pop	r13
     9a8:	cf 90       	pop	r12
     9aa:	bf 90       	pop	r11
     9ac:	af 90       	pop	r10
     9ae:	9f 90       	pop	r9
     9b0:	8f 90       	pop	r8
     9b2:	7f 90       	pop	r7
     9b4:	6f 90       	pop	r6
     9b6:	5f 90       	pop	r5
     9b8:	4f 90       	pop	r4
     9ba:	08 95       	ret

000009bc <UART0_init>:

void UART0_init(int BAUD_PRESCALER)
{
	
	/*Set baud rate */
	UBRR0H = (unsigned char)(BAUD_PRESCALER>>8);
     9bc:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char)BAUD_PRESCALER;
     9c0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	//Enable receiver and transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     9c4:	88 e1       	ldi	r24, 0x18	; 24
     9c6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	/* Set frame format: 2 stop bits, 8 data bits */
	UCSR0C = (1<<UCSZ01) | (1<<UCSZ00); // 8 data bits
     9ca:	e2 ec       	ldi	r30, 0xC2	; 194
     9cc:	f0 e0       	ldi	r31, 0x00	; 0
     9ce:	86 e0       	ldi	r24, 0x06	; 6
     9d0:	80 83       	st	Z, r24
	UCSR0C |= (1<<USBS0); // 2 stop bits
     9d2:	80 81       	ld	r24, Z
     9d4:	88 60       	ori	r24, 0x08	; 8
     9d6:	80 83       	st	Z, r24
     9d8:	08 95       	ret

000009da <UART1_init>:

void UART1_init(int BAUD_PRESCALER)
{
	
	/*Set baud rate */
	UBRR1H = (unsigned char)(BAUD_PRESCALER>>8);
     9da:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7f80cd>
	UBRR1L = (unsigned char)BAUD_PRESCALER;
     9de:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7f80cc>
	//Enable receiver and transmitter
	UCSR1B = (1<<RXEN1)|(1<<TXEN1);
     9e2:	88 e1       	ldi	r24, 0x18	; 24
     9e4:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7f80c9>
	/* Set frame format: 2 stop bits, 8 data bits */
	UCSR1C = (1<<UCSZ11) | (1<<UCSZ10); // 8 data bits
     9e8:	ea ec       	ldi	r30, 0xCA	; 202
     9ea:	f0 e0       	ldi	r31, 0x00	; 0
     9ec:	86 e0       	ldi	r24, 0x06	; 6
     9ee:	80 83       	st	Z, r24
	UCSR1C |= (1<<USBS1); // 2 stop bits
     9f0:	80 81       	ld	r24, Z
     9f2:	88 60       	ori	r24, 0x08	; 8
     9f4:	80 83       	st	Z, r24
     9f6:	08 95       	ret

000009f8 <UART0_send>:
}

void UART0_send(unsigned char data)
{
	// Wait for empty transmit buffer
	while(!(UCSR0A & (1<<UDRE0)));
     9f8:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     9fc:	95 ff       	sbrs	r25, 5
     9fe:	fc cf       	rjmp	.-8      	; 0x9f8 <UART0_send>
	// Put data into buffer and send data
	UDR0 = data;
     a00:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     a04:	08 95       	ret

00000a06 <UART1_send>:
}

void UART1_send(unsigned char data)
{
	// Wait for empty transmit buffer
	while(!(UCSR1A & (1<<UDRE1)));
     a06:	90 91 c8 00 	lds	r25, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7f80c8>
     a0a:	95 ff       	sbrs	r25, 5
     a0c:	fc cf       	rjmp	.-8      	; 0xa06 <UART1_send>
	// Put data into buffer and send data
	UDR1 = data;
     a0e:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7f80ce>
     a12:	08 95       	ret

00000a14 <UART0_putstring>:
	
}

void UART0_putstring(char* StringPtr)
{
     a14:	cf 93       	push	r28
     a16:	df 93       	push	r29
     a18:	ec 01       	movw	r28, r24
	while(*StringPtr != 0x00)
     a1a:	03 c0       	rjmp	.+6      	; 0xa22 <UART0_putstring+0xe>
	{
		UART0_send(*StringPtr);
     a1c:	0e 94 fc 04 	call	0x9f8	; 0x9f8 <UART0_send>
		StringPtr++;
     a20:	21 96       	adiw	r28, 0x01	; 1
	
}

void UART0_putstring(char* StringPtr)
{
	while(*StringPtr != 0x00)
     a22:	88 81       	ld	r24, Y
     a24:	81 11       	cpse	r24, r1
     a26:	fa cf       	rjmp	.-12     	; 0xa1c <UART0_putstring+0x8>
	{
		UART0_send(*StringPtr);
		StringPtr++;
	}
}
     a28:	df 91       	pop	r29
     a2a:	cf 91       	pop	r28
     a2c:	08 95       	ret

00000a2e <UART1_putstring>:

void UART1_putstring(char* StringPtr)
{
     a2e:	cf 93       	push	r28
     a30:	df 93       	push	r29
     a32:	ec 01       	movw	r28, r24
	while(*StringPtr != 0x00)
     a34:	03 c0       	rjmp	.+6      	; 0xa3c <UART1_putstring+0xe>
	{
		UART1_send(*StringPtr);
     a36:	0e 94 03 05 	call	0xa06	; 0xa06 <UART1_send>
		StringPtr++;
     a3a:	21 96       	adiw	r28, 0x01	; 1
	}
}

void UART1_putstring(char* StringPtr)
{
	while(*StringPtr != 0x00)
     a3c:	88 81       	ld	r24, Y
     a3e:	81 11       	cpse	r24, r1
     a40:	fa cf       	rjmp	.-12     	; 0xa36 <UART1_putstring+0x8>
	{
		UART1_send(*StringPtr);
		StringPtr++;
	}
     a42:	df 91       	pop	r29
     a44:	cf 91       	pop	r28
     a46:	08 95       	ret

00000a48 <__subsf3>:
     a48:	50 58       	subi	r21, 0x80	; 128

00000a4a <__addsf3>:
     a4a:	bb 27       	eor	r27, r27
     a4c:	aa 27       	eor	r26, r26
     a4e:	0e 94 3c 05 	call	0xa78	; 0xa78 <__addsf3x>
     a52:	0c 94 ad 06 	jmp	0xd5a	; 0xd5a <__fp_round>
     a56:	0e 94 9f 06 	call	0xd3e	; 0xd3e <__fp_pscA>
     a5a:	38 f0       	brcs	.+14     	; 0xa6a <__addsf3+0x20>
     a5c:	0e 94 a6 06 	call	0xd4c	; 0xd4c <__fp_pscB>
     a60:	20 f0       	brcs	.+8      	; 0xa6a <__addsf3+0x20>
     a62:	39 f4       	brne	.+14     	; 0xa72 <__addsf3+0x28>
     a64:	9f 3f       	cpi	r25, 0xFF	; 255
     a66:	19 f4       	brne	.+6      	; 0xa6e <__addsf3+0x24>
     a68:	26 f4       	brtc	.+8      	; 0xa72 <__addsf3+0x28>
     a6a:	0c 94 75 06 	jmp	0xcea	; 0xcea <__fp_nan>
     a6e:	0e f4       	brtc	.+2      	; 0xa72 <__addsf3+0x28>
     a70:	e0 95       	com	r30
     a72:	e7 fb       	bst	r30, 7
     a74:	0c 94 6f 06 	jmp	0xcde	; 0xcde <__fp_inf>

00000a78 <__addsf3x>:
     a78:	e9 2f       	mov	r30, r25
     a7a:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fp_split3>
     a7e:	58 f3       	brcs	.-42     	; 0xa56 <__addsf3+0xc>
     a80:	ba 17       	cp	r27, r26
     a82:	62 07       	cpc	r22, r18
     a84:	73 07       	cpc	r23, r19
     a86:	84 07       	cpc	r24, r20
     a88:	95 07       	cpc	r25, r21
     a8a:	20 f0       	brcs	.+8      	; 0xa94 <__addsf3x+0x1c>
     a8c:	79 f4       	brne	.+30     	; 0xaac <__addsf3x+0x34>
     a8e:	a6 f5       	brtc	.+104    	; 0xaf8 <__addsf3x+0x80>
     a90:	0c 94 e0 06 	jmp	0xdc0	; 0xdc0 <__fp_zero>
     a94:	0e f4       	brtc	.+2      	; 0xa98 <__addsf3x+0x20>
     a96:	e0 95       	com	r30
     a98:	0b 2e       	mov	r0, r27
     a9a:	ba 2f       	mov	r27, r26
     a9c:	a0 2d       	mov	r26, r0
     a9e:	0b 01       	movw	r0, r22
     aa0:	b9 01       	movw	r22, r18
     aa2:	90 01       	movw	r18, r0
     aa4:	0c 01       	movw	r0, r24
     aa6:	ca 01       	movw	r24, r20
     aa8:	a0 01       	movw	r20, r0
     aaa:	11 24       	eor	r1, r1
     aac:	ff 27       	eor	r31, r31
     aae:	59 1b       	sub	r21, r25
     ab0:	99 f0       	breq	.+38     	; 0xad8 <__addsf3x+0x60>
     ab2:	59 3f       	cpi	r21, 0xF9	; 249
     ab4:	50 f4       	brcc	.+20     	; 0xaca <__addsf3x+0x52>
     ab6:	50 3e       	cpi	r21, 0xE0	; 224
     ab8:	68 f1       	brcs	.+90     	; 0xb14 <__addsf3x+0x9c>
     aba:	1a 16       	cp	r1, r26
     abc:	f0 40       	sbci	r31, 0x00	; 0
     abe:	a2 2f       	mov	r26, r18
     ac0:	23 2f       	mov	r18, r19
     ac2:	34 2f       	mov	r19, r20
     ac4:	44 27       	eor	r20, r20
     ac6:	58 5f       	subi	r21, 0xF8	; 248
     ac8:	f3 cf       	rjmp	.-26     	; 0xab0 <__addsf3x+0x38>
     aca:	46 95       	lsr	r20
     acc:	37 95       	ror	r19
     ace:	27 95       	ror	r18
     ad0:	a7 95       	ror	r26
     ad2:	f0 40       	sbci	r31, 0x00	; 0
     ad4:	53 95       	inc	r21
     ad6:	c9 f7       	brne	.-14     	; 0xaca <__addsf3x+0x52>
     ad8:	7e f4       	brtc	.+30     	; 0xaf8 <__addsf3x+0x80>
     ada:	1f 16       	cp	r1, r31
     adc:	ba 0b       	sbc	r27, r26
     ade:	62 0b       	sbc	r22, r18
     ae0:	73 0b       	sbc	r23, r19
     ae2:	84 0b       	sbc	r24, r20
     ae4:	ba f0       	brmi	.+46     	; 0xb14 <__addsf3x+0x9c>
     ae6:	91 50       	subi	r25, 0x01	; 1
     ae8:	a1 f0       	breq	.+40     	; 0xb12 <__addsf3x+0x9a>
     aea:	ff 0f       	add	r31, r31
     aec:	bb 1f       	adc	r27, r27
     aee:	66 1f       	adc	r22, r22
     af0:	77 1f       	adc	r23, r23
     af2:	88 1f       	adc	r24, r24
     af4:	c2 f7       	brpl	.-16     	; 0xae6 <__addsf3x+0x6e>
     af6:	0e c0       	rjmp	.+28     	; 0xb14 <__addsf3x+0x9c>
     af8:	ba 0f       	add	r27, r26
     afa:	62 1f       	adc	r22, r18
     afc:	73 1f       	adc	r23, r19
     afe:	84 1f       	adc	r24, r20
     b00:	48 f4       	brcc	.+18     	; 0xb14 <__addsf3x+0x9c>
     b02:	87 95       	ror	r24
     b04:	77 95       	ror	r23
     b06:	67 95       	ror	r22
     b08:	b7 95       	ror	r27
     b0a:	f7 95       	ror	r31
     b0c:	9e 3f       	cpi	r25, 0xFE	; 254
     b0e:	08 f0       	brcs	.+2      	; 0xb12 <__addsf3x+0x9a>
     b10:	b0 cf       	rjmp	.-160    	; 0xa72 <__addsf3+0x28>
     b12:	93 95       	inc	r25
     b14:	88 0f       	add	r24, r24
     b16:	08 f0       	brcs	.+2      	; 0xb1a <__addsf3x+0xa2>
     b18:	99 27       	eor	r25, r25
     b1a:	ee 0f       	add	r30, r30
     b1c:	97 95       	ror	r25
     b1e:	87 95       	ror	r24
     b20:	08 95       	ret

00000b22 <atan>:
     b22:	df 93       	push	r29
     b24:	dd 27       	eor	r29, r29
     b26:	b9 2f       	mov	r27, r25
     b28:	bf 77       	andi	r27, 0x7F	; 127
     b2a:	40 e8       	ldi	r20, 0x80	; 128
     b2c:	5f e3       	ldi	r21, 0x3F	; 63
     b2e:	16 16       	cp	r1, r22
     b30:	17 06       	cpc	r1, r23
     b32:	48 07       	cpc	r20, r24
     b34:	5b 07       	cpc	r21, r27
     b36:	18 f4       	brcc	.+6      	; 0xb3e <atan+0x1c>
     b38:	d9 2f       	mov	r29, r25
     b3a:	0e 94 e7 06 	call	0xdce	; 0xdce <inverse>
     b3e:	9f 93       	push	r25
     b40:	8f 93       	push	r24
     b42:	7f 93       	push	r23
     b44:	6f 93       	push	r22
     b46:	0e 94 f2 07 	call	0xfe4	; 0xfe4 <square>
     b4a:	e4 eb       	ldi	r30, 0xB4	; 180
     b4c:	f0 e0       	ldi	r31, 0x00	; 0
     b4e:	0e 94 78 06 	call	0xcf0	; 0xcf0 <__fp_powser>
     b52:	0e 94 ad 06 	call	0xd5a	; 0xd5a <__fp_round>
     b56:	2f 91       	pop	r18
     b58:	3f 91       	pop	r19
     b5a:	4f 91       	pop	r20
     b5c:	5f 91       	pop	r21
     b5e:	0e 94 02 07 	call	0xe04	; 0xe04 <__mulsf3x>
     b62:	dd 23       	and	r29, r29
     b64:	51 f0       	breq	.+20     	; 0xb7a <atan+0x58>
     b66:	90 58       	subi	r25, 0x80	; 128
     b68:	a2 ea       	ldi	r26, 0xA2	; 162
     b6a:	2a ed       	ldi	r18, 0xDA	; 218
     b6c:	3f e0       	ldi	r19, 0x0F	; 15
     b6e:	49 ec       	ldi	r20, 0xC9	; 201
     b70:	5f e3       	ldi	r21, 0x3F	; 63
     b72:	d0 78       	andi	r29, 0x80	; 128
     b74:	5d 27       	eor	r21, r29
     b76:	0e 94 3c 05 	call	0xa78	; 0xa78 <__addsf3x>
     b7a:	df 91       	pop	r29
     b7c:	0c 94 ad 06 	jmp	0xd5a	; 0xd5a <__fp_round>

00000b80 <__divsf3>:
     b80:	0e 94 d4 05 	call	0xba8	; 0xba8 <__divsf3x>
     b84:	0c 94 ad 06 	jmp	0xd5a	; 0xd5a <__fp_round>
     b88:	0e 94 a6 06 	call	0xd4c	; 0xd4c <__fp_pscB>
     b8c:	58 f0       	brcs	.+22     	; 0xba4 <__divsf3+0x24>
     b8e:	0e 94 9f 06 	call	0xd3e	; 0xd3e <__fp_pscA>
     b92:	40 f0       	brcs	.+16     	; 0xba4 <__divsf3+0x24>
     b94:	29 f4       	brne	.+10     	; 0xba0 <__divsf3+0x20>
     b96:	5f 3f       	cpi	r21, 0xFF	; 255
     b98:	29 f0       	breq	.+10     	; 0xba4 <__divsf3+0x24>
     b9a:	0c 94 6f 06 	jmp	0xcde	; 0xcde <__fp_inf>
     b9e:	51 11       	cpse	r21, r1
     ba0:	0c 94 e1 06 	jmp	0xdc2	; 0xdc2 <__fp_szero>
     ba4:	0c 94 75 06 	jmp	0xcea	; 0xcea <__fp_nan>

00000ba8 <__divsf3x>:
     ba8:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fp_split3>
     bac:	68 f3       	brcs	.-38     	; 0xb88 <__divsf3+0x8>

00000bae <__divsf3_pse>:
     bae:	99 23       	and	r25, r25
     bb0:	b1 f3       	breq	.-20     	; 0xb9e <__divsf3+0x1e>
     bb2:	55 23       	and	r21, r21
     bb4:	91 f3       	breq	.-28     	; 0xb9a <__divsf3+0x1a>
     bb6:	95 1b       	sub	r25, r21
     bb8:	55 0b       	sbc	r21, r21
     bba:	bb 27       	eor	r27, r27
     bbc:	aa 27       	eor	r26, r26
     bbe:	62 17       	cp	r22, r18
     bc0:	73 07       	cpc	r23, r19
     bc2:	84 07       	cpc	r24, r20
     bc4:	38 f0       	brcs	.+14     	; 0xbd4 <__divsf3_pse+0x26>
     bc6:	9f 5f       	subi	r25, 0xFF	; 255
     bc8:	5f 4f       	sbci	r21, 0xFF	; 255
     bca:	22 0f       	add	r18, r18
     bcc:	33 1f       	adc	r19, r19
     bce:	44 1f       	adc	r20, r20
     bd0:	aa 1f       	adc	r26, r26
     bd2:	a9 f3       	breq	.-22     	; 0xbbe <__divsf3_pse+0x10>
     bd4:	35 d0       	rcall	.+106    	; 0xc40 <__divsf3_pse+0x92>
     bd6:	0e 2e       	mov	r0, r30
     bd8:	3a f0       	brmi	.+14     	; 0xbe8 <__divsf3_pse+0x3a>
     bda:	e0 e8       	ldi	r30, 0x80	; 128
     bdc:	32 d0       	rcall	.+100    	; 0xc42 <__divsf3_pse+0x94>
     bde:	91 50       	subi	r25, 0x01	; 1
     be0:	50 40       	sbci	r21, 0x00	; 0
     be2:	e6 95       	lsr	r30
     be4:	00 1c       	adc	r0, r0
     be6:	ca f7       	brpl	.-14     	; 0xbda <__divsf3_pse+0x2c>
     be8:	2b d0       	rcall	.+86     	; 0xc40 <__divsf3_pse+0x92>
     bea:	fe 2f       	mov	r31, r30
     bec:	29 d0       	rcall	.+82     	; 0xc40 <__divsf3_pse+0x92>
     bee:	66 0f       	add	r22, r22
     bf0:	77 1f       	adc	r23, r23
     bf2:	88 1f       	adc	r24, r24
     bf4:	bb 1f       	adc	r27, r27
     bf6:	26 17       	cp	r18, r22
     bf8:	37 07       	cpc	r19, r23
     bfa:	48 07       	cpc	r20, r24
     bfc:	ab 07       	cpc	r26, r27
     bfe:	b0 e8       	ldi	r27, 0x80	; 128
     c00:	09 f0       	breq	.+2      	; 0xc04 <__divsf3_pse+0x56>
     c02:	bb 0b       	sbc	r27, r27
     c04:	80 2d       	mov	r24, r0
     c06:	bf 01       	movw	r22, r30
     c08:	ff 27       	eor	r31, r31
     c0a:	93 58       	subi	r25, 0x83	; 131
     c0c:	5f 4f       	sbci	r21, 0xFF	; 255
     c0e:	3a f0       	brmi	.+14     	; 0xc1e <__divsf3_pse+0x70>
     c10:	9e 3f       	cpi	r25, 0xFE	; 254
     c12:	51 05       	cpc	r21, r1
     c14:	78 f0       	brcs	.+30     	; 0xc34 <__divsf3_pse+0x86>
     c16:	0c 94 6f 06 	jmp	0xcde	; 0xcde <__fp_inf>
     c1a:	0c 94 e1 06 	jmp	0xdc2	; 0xdc2 <__fp_szero>
     c1e:	5f 3f       	cpi	r21, 0xFF	; 255
     c20:	e4 f3       	brlt	.-8      	; 0xc1a <__divsf3_pse+0x6c>
     c22:	98 3e       	cpi	r25, 0xE8	; 232
     c24:	d4 f3       	brlt	.-12     	; 0xc1a <__divsf3_pse+0x6c>
     c26:	86 95       	lsr	r24
     c28:	77 95       	ror	r23
     c2a:	67 95       	ror	r22
     c2c:	b7 95       	ror	r27
     c2e:	f7 95       	ror	r31
     c30:	9f 5f       	subi	r25, 0xFF	; 255
     c32:	c9 f7       	brne	.-14     	; 0xc26 <__divsf3_pse+0x78>
     c34:	88 0f       	add	r24, r24
     c36:	91 1d       	adc	r25, r1
     c38:	96 95       	lsr	r25
     c3a:	87 95       	ror	r24
     c3c:	97 f9       	bld	r25, 7
     c3e:	08 95       	ret
     c40:	e1 e0       	ldi	r30, 0x01	; 1
     c42:	66 0f       	add	r22, r22
     c44:	77 1f       	adc	r23, r23
     c46:	88 1f       	adc	r24, r24
     c48:	bb 1f       	adc	r27, r27
     c4a:	62 17       	cp	r22, r18
     c4c:	73 07       	cpc	r23, r19
     c4e:	84 07       	cpc	r24, r20
     c50:	ba 07       	cpc	r27, r26
     c52:	20 f0       	brcs	.+8      	; 0xc5c <__divsf3_pse+0xae>
     c54:	62 1b       	sub	r22, r18
     c56:	73 0b       	sbc	r23, r19
     c58:	84 0b       	sbc	r24, r20
     c5a:	ba 0b       	sbc	r27, r26
     c5c:	ee 1f       	adc	r30, r30
     c5e:	88 f7       	brcc	.-30     	; 0xc42 <__divsf3_pse+0x94>
     c60:	e0 95       	com	r30
     c62:	08 95       	ret

00000c64 <__floatunsisf>:
     c64:	e8 94       	clt
     c66:	09 c0       	rjmp	.+18     	; 0xc7a <__floatsisf+0x12>

00000c68 <__floatsisf>:
     c68:	97 fb       	bst	r25, 7
     c6a:	3e f4       	brtc	.+14     	; 0xc7a <__floatsisf+0x12>
     c6c:	90 95       	com	r25
     c6e:	80 95       	com	r24
     c70:	70 95       	com	r23
     c72:	61 95       	neg	r22
     c74:	7f 4f       	sbci	r23, 0xFF	; 255
     c76:	8f 4f       	sbci	r24, 0xFF	; 255
     c78:	9f 4f       	sbci	r25, 0xFF	; 255
     c7a:	99 23       	and	r25, r25
     c7c:	a9 f0       	breq	.+42     	; 0xca8 <__floatsisf+0x40>
     c7e:	f9 2f       	mov	r31, r25
     c80:	96 e9       	ldi	r25, 0x96	; 150
     c82:	bb 27       	eor	r27, r27
     c84:	93 95       	inc	r25
     c86:	f6 95       	lsr	r31
     c88:	87 95       	ror	r24
     c8a:	77 95       	ror	r23
     c8c:	67 95       	ror	r22
     c8e:	b7 95       	ror	r27
     c90:	f1 11       	cpse	r31, r1
     c92:	f8 cf       	rjmp	.-16     	; 0xc84 <__floatsisf+0x1c>
     c94:	fa f4       	brpl	.+62     	; 0xcd4 <__floatsisf+0x6c>
     c96:	bb 0f       	add	r27, r27
     c98:	11 f4       	brne	.+4      	; 0xc9e <__floatsisf+0x36>
     c9a:	60 ff       	sbrs	r22, 0
     c9c:	1b c0       	rjmp	.+54     	; 0xcd4 <__floatsisf+0x6c>
     c9e:	6f 5f       	subi	r22, 0xFF	; 255
     ca0:	7f 4f       	sbci	r23, 0xFF	; 255
     ca2:	8f 4f       	sbci	r24, 0xFF	; 255
     ca4:	9f 4f       	sbci	r25, 0xFF	; 255
     ca6:	16 c0       	rjmp	.+44     	; 0xcd4 <__floatsisf+0x6c>
     ca8:	88 23       	and	r24, r24
     caa:	11 f0       	breq	.+4      	; 0xcb0 <__floatsisf+0x48>
     cac:	96 e9       	ldi	r25, 0x96	; 150
     cae:	11 c0       	rjmp	.+34     	; 0xcd2 <__floatsisf+0x6a>
     cb0:	77 23       	and	r23, r23
     cb2:	21 f0       	breq	.+8      	; 0xcbc <__floatsisf+0x54>
     cb4:	9e e8       	ldi	r25, 0x8E	; 142
     cb6:	87 2f       	mov	r24, r23
     cb8:	76 2f       	mov	r23, r22
     cba:	05 c0       	rjmp	.+10     	; 0xcc6 <__floatsisf+0x5e>
     cbc:	66 23       	and	r22, r22
     cbe:	71 f0       	breq	.+28     	; 0xcdc <__floatsisf+0x74>
     cc0:	96 e8       	ldi	r25, 0x86	; 134
     cc2:	86 2f       	mov	r24, r22
     cc4:	70 e0       	ldi	r23, 0x00	; 0
     cc6:	60 e0       	ldi	r22, 0x00	; 0
     cc8:	2a f0       	brmi	.+10     	; 0xcd4 <__floatsisf+0x6c>
     cca:	9a 95       	dec	r25
     ccc:	66 0f       	add	r22, r22
     cce:	77 1f       	adc	r23, r23
     cd0:	88 1f       	adc	r24, r24
     cd2:	da f7       	brpl	.-10     	; 0xcca <__floatsisf+0x62>
     cd4:	88 0f       	add	r24, r24
     cd6:	96 95       	lsr	r25
     cd8:	87 95       	ror	r24
     cda:	97 f9       	bld	r25, 7
     cdc:	08 95       	ret

00000cde <__fp_inf>:
     cde:	97 f9       	bld	r25, 7
     ce0:	9f 67       	ori	r25, 0x7F	; 127
     ce2:	80 e8       	ldi	r24, 0x80	; 128
     ce4:	70 e0       	ldi	r23, 0x00	; 0
     ce6:	60 e0       	ldi	r22, 0x00	; 0
     ce8:	08 95       	ret

00000cea <__fp_nan>:
     cea:	9f ef       	ldi	r25, 0xFF	; 255
     cec:	80 ec       	ldi	r24, 0xC0	; 192
     cee:	08 95       	ret

00000cf0 <__fp_powser>:
     cf0:	df 93       	push	r29
     cf2:	cf 93       	push	r28
     cf4:	1f 93       	push	r17
     cf6:	0f 93       	push	r16
     cf8:	ff 92       	push	r15
     cfa:	ef 92       	push	r14
     cfc:	df 92       	push	r13
     cfe:	7b 01       	movw	r14, r22
     d00:	8c 01       	movw	r16, r24
     d02:	68 94       	set
     d04:	06 c0       	rjmp	.+12     	; 0xd12 <__fp_powser+0x22>
     d06:	da 2e       	mov	r13, r26
     d08:	ef 01       	movw	r28, r30
     d0a:	0e 94 02 07 	call	0xe04	; 0xe04 <__mulsf3x>
     d0e:	fe 01       	movw	r30, r28
     d10:	e8 94       	clt
     d12:	a5 91       	lpm	r26, Z+
     d14:	25 91       	lpm	r18, Z+
     d16:	35 91       	lpm	r19, Z+
     d18:	45 91       	lpm	r20, Z+
     d1a:	55 91       	lpm	r21, Z+
     d1c:	a6 f3       	brts	.-24     	; 0xd06 <__fp_powser+0x16>
     d1e:	ef 01       	movw	r28, r30
     d20:	0e 94 3c 05 	call	0xa78	; 0xa78 <__addsf3x>
     d24:	fe 01       	movw	r30, r28
     d26:	97 01       	movw	r18, r14
     d28:	a8 01       	movw	r20, r16
     d2a:	da 94       	dec	r13
     d2c:	69 f7       	brne	.-38     	; 0xd08 <__fp_powser+0x18>
     d2e:	df 90       	pop	r13
     d30:	ef 90       	pop	r14
     d32:	ff 90       	pop	r15
     d34:	0f 91       	pop	r16
     d36:	1f 91       	pop	r17
     d38:	cf 91       	pop	r28
     d3a:	df 91       	pop	r29
     d3c:	08 95       	ret

00000d3e <__fp_pscA>:
     d3e:	00 24       	eor	r0, r0
     d40:	0a 94       	dec	r0
     d42:	16 16       	cp	r1, r22
     d44:	17 06       	cpc	r1, r23
     d46:	18 06       	cpc	r1, r24
     d48:	09 06       	cpc	r0, r25
     d4a:	08 95       	ret

00000d4c <__fp_pscB>:
     d4c:	00 24       	eor	r0, r0
     d4e:	0a 94       	dec	r0
     d50:	12 16       	cp	r1, r18
     d52:	13 06       	cpc	r1, r19
     d54:	14 06       	cpc	r1, r20
     d56:	05 06       	cpc	r0, r21
     d58:	08 95       	ret

00000d5a <__fp_round>:
     d5a:	09 2e       	mov	r0, r25
     d5c:	03 94       	inc	r0
     d5e:	00 0c       	add	r0, r0
     d60:	11 f4       	brne	.+4      	; 0xd66 <__fp_round+0xc>
     d62:	88 23       	and	r24, r24
     d64:	52 f0       	brmi	.+20     	; 0xd7a <__fp_round+0x20>
     d66:	bb 0f       	add	r27, r27
     d68:	40 f4       	brcc	.+16     	; 0xd7a <__fp_round+0x20>
     d6a:	bf 2b       	or	r27, r31
     d6c:	11 f4       	brne	.+4      	; 0xd72 <__fp_round+0x18>
     d6e:	60 ff       	sbrs	r22, 0
     d70:	04 c0       	rjmp	.+8      	; 0xd7a <__fp_round+0x20>
     d72:	6f 5f       	subi	r22, 0xFF	; 255
     d74:	7f 4f       	sbci	r23, 0xFF	; 255
     d76:	8f 4f       	sbci	r24, 0xFF	; 255
     d78:	9f 4f       	sbci	r25, 0xFF	; 255
     d7a:	08 95       	ret

00000d7c <__fp_split3>:
     d7c:	57 fd       	sbrc	r21, 7
     d7e:	90 58       	subi	r25, 0x80	; 128
     d80:	44 0f       	add	r20, r20
     d82:	55 1f       	adc	r21, r21
     d84:	59 f0       	breq	.+22     	; 0xd9c <__fp_splitA+0x10>
     d86:	5f 3f       	cpi	r21, 0xFF	; 255
     d88:	71 f0       	breq	.+28     	; 0xda6 <__fp_splitA+0x1a>
     d8a:	47 95       	ror	r20

00000d8c <__fp_splitA>:
     d8c:	88 0f       	add	r24, r24
     d8e:	97 fb       	bst	r25, 7
     d90:	99 1f       	adc	r25, r25
     d92:	61 f0       	breq	.+24     	; 0xdac <__fp_splitA+0x20>
     d94:	9f 3f       	cpi	r25, 0xFF	; 255
     d96:	79 f0       	breq	.+30     	; 0xdb6 <__fp_splitA+0x2a>
     d98:	87 95       	ror	r24
     d9a:	08 95       	ret
     d9c:	12 16       	cp	r1, r18
     d9e:	13 06       	cpc	r1, r19
     da0:	14 06       	cpc	r1, r20
     da2:	55 1f       	adc	r21, r21
     da4:	f2 cf       	rjmp	.-28     	; 0xd8a <__fp_split3+0xe>
     da6:	46 95       	lsr	r20
     da8:	f1 df       	rcall	.-30     	; 0xd8c <__fp_splitA>
     daa:	08 c0       	rjmp	.+16     	; 0xdbc <__fp_splitA+0x30>
     dac:	16 16       	cp	r1, r22
     dae:	17 06       	cpc	r1, r23
     db0:	18 06       	cpc	r1, r24
     db2:	99 1f       	adc	r25, r25
     db4:	f1 cf       	rjmp	.-30     	; 0xd98 <__fp_splitA+0xc>
     db6:	86 95       	lsr	r24
     db8:	71 05       	cpc	r23, r1
     dba:	61 05       	cpc	r22, r1
     dbc:	08 94       	sec
     dbe:	08 95       	ret

00000dc0 <__fp_zero>:
     dc0:	e8 94       	clt

00000dc2 <__fp_szero>:
     dc2:	bb 27       	eor	r27, r27
     dc4:	66 27       	eor	r22, r22
     dc6:	77 27       	eor	r23, r23
     dc8:	cb 01       	movw	r24, r22
     dca:	97 f9       	bld	r25, 7
     dcc:	08 95       	ret

00000dce <inverse>:
     dce:	9b 01       	movw	r18, r22
     dd0:	ac 01       	movw	r20, r24
     dd2:	60 e0       	ldi	r22, 0x00	; 0
     dd4:	70 e0       	ldi	r23, 0x00	; 0
     dd6:	80 e8       	ldi	r24, 0x80	; 128
     dd8:	9f e3       	ldi	r25, 0x3F	; 63
     dda:	0c 94 c0 05 	jmp	0xb80	; 0xb80 <__divsf3>

00000dde <__mulsf3>:
     dde:	0e 94 02 07 	call	0xe04	; 0xe04 <__mulsf3x>
     de2:	0c 94 ad 06 	jmp	0xd5a	; 0xd5a <__fp_round>
     de6:	0e 94 9f 06 	call	0xd3e	; 0xd3e <__fp_pscA>
     dea:	38 f0       	brcs	.+14     	; 0xdfa <__mulsf3+0x1c>
     dec:	0e 94 a6 06 	call	0xd4c	; 0xd4c <__fp_pscB>
     df0:	20 f0       	brcs	.+8      	; 0xdfa <__mulsf3+0x1c>
     df2:	95 23       	and	r25, r21
     df4:	11 f0       	breq	.+4      	; 0xdfa <__mulsf3+0x1c>
     df6:	0c 94 6f 06 	jmp	0xcde	; 0xcde <__fp_inf>
     dfa:	0c 94 75 06 	jmp	0xcea	; 0xcea <__fp_nan>
     dfe:	11 24       	eor	r1, r1
     e00:	0c 94 e1 06 	jmp	0xdc2	; 0xdc2 <__fp_szero>

00000e04 <__mulsf3x>:
     e04:	0e 94 be 06 	call	0xd7c	; 0xd7c <__fp_split3>
     e08:	70 f3       	brcs	.-36     	; 0xde6 <__mulsf3+0x8>

00000e0a <__mulsf3_pse>:
     e0a:	95 9f       	mul	r25, r21
     e0c:	c1 f3       	breq	.-16     	; 0xdfe <__mulsf3+0x20>
     e0e:	95 0f       	add	r25, r21
     e10:	50 e0       	ldi	r21, 0x00	; 0
     e12:	55 1f       	adc	r21, r21
     e14:	62 9f       	mul	r22, r18
     e16:	f0 01       	movw	r30, r0
     e18:	72 9f       	mul	r23, r18
     e1a:	bb 27       	eor	r27, r27
     e1c:	f0 0d       	add	r31, r0
     e1e:	b1 1d       	adc	r27, r1
     e20:	63 9f       	mul	r22, r19
     e22:	aa 27       	eor	r26, r26
     e24:	f0 0d       	add	r31, r0
     e26:	b1 1d       	adc	r27, r1
     e28:	aa 1f       	adc	r26, r26
     e2a:	64 9f       	mul	r22, r20
     e2c:	66 27       	eor	r22, r22
     e2e:	b0 0d       	add	r27, r0
     e30:	a1 1d       	adc	r26, r1
     e32:	66 1f       	adc	r22, r22
     e34:	82 9f       	mul	r24, r18
     e36:	22 27       	eor	r18, r18
     e38:	b0 0d       	add	r27, r0
     e3a:	a1 1d       	adc	r26, r1
     e3c:	62 1f       	adc	r22, r18
     e3e:	73 9f       	mul	r23, r19
     e40:	b0 0d       	add	r27, r0
     e42:	a1 1d       	adc	r26, r1
     e44:	62 1f       	adc	r22, r18
     e46:	83 9f       	mul	r24, r19
     e48:	a0 0d       	add	r26, r0
     e4a:	61 1d       	adc	r22, r1
     e4c:	22 1f       	adc	r18, r18
     e4e:	74 9f       	mul	r23, r20
     e50:	33 27       	eor	r19, r19
     e52:	a0 0d       	add	r26, r0
     e54:	61 1d       	adc	r22, r1
     e56:	23 1f       	adc	r18, r19
     e58:	84 9f       	mul	r24, r20
     e5a:	60 0d       	add	r22, r0
     e5c:	21 1d       	adc	r18, r1
     e5e:	82 2f       	mov	r24, r18
     e60:	76 2f       	mov	r23, r22
     e62:	6a 2f       	mov	r22, r26
     e64:	11 24       	eor	r1, r1
     e66:	9f 57       	subi	r25, 0x7F	; 127
     e68:	50 40       	sbci	r21, 0x00	; 0
     e6a:	9a f0       	brmi	.+38     	; 0xe92 <__mulsf3_pse+0x88>
     e6c:	f1 f0       	breq	.+60     	; 0xeaa <__mulsf3_pse+0xa0>
     e6e:	88 23       	and	r24, r24
     e70:	4a f0       	brmi	.+18     	; 0xe84 <__mulsf3_pse+0x7a>
     e72:	ee 0f       	add	r30, r30
     e74:	ff 1f       	adc	r31, r31
     e76:	bb 1f       	adc	r27, r27
     e78:	66 1f       	adc	r22, r22
     e7a:	77 1f       	adc	r23, r23
     e7c:	88 1f       	adc	r24, r24
     e7e:	91 50       	subi	r25, 0x01	; 1
     e80:	50 40       	sbci	r21, 0x00	; 0
     e82:	a9 f7       	brne	.-22     	; 0xe6e <__mulsf3_pse+0x64>
     e84:	9e 3f       	cpi	r25, 0xFE	; 254
     e86:	51 05       	cpc	r21, r1
     e88:	80 f0       	brcs	.+32     	; 0xeaa <__mulsf3_pse+0xa0>
     e8a:	0c 94 6f 06 	jmp	0xcde	; 0xcde <__fp_inf>
     e8e:	0c 94 e1 06 	jmp	0xdc2	; 0xdc2 <__fp_szero>
     e92:	5f 3f       	cpi	r21, 0xFF	; 255
     e94:	e4 f3       	brlt	.-8      	; 0xe8e <__mulsf3_pse+0x84>
     e96:	98 3e       	cpi	r25, 0xE8	; 232
     e98:	d4 f3       	brlt	.-12     	; 0xe8e <__mulsf3_pse+0x84>
     e9a:	86 95       	lsr	r24
     e9c:	77 95       	ror	r23
     e9e:	67 95       	ror	r22
     ea0:	b7 95       	ror	r27
     ea2:	f7 95       	ror	r31
     ea4:	e7 95       	ror	r30
     ea6:	9f 5f       	subi	r25, 0xFF	; 255
     ea8:	c1 f7       	brne	.-16     	; 0xe9a <__mulsf3_pse+0x90>
     eaa:	fe 2b       	or	r31, r30
     eac:	88 0f       	add	r24, r24
     eae:	91 1d       	adc	r25, r1
     eb0:	96 95       	lsr	r25
     eb2:	87 95       	ror	r24
     eb4:	97 f9       	bld	r25, 7
     eb6:	08 95       	ret

00000eb8 <pow>:
     eb8:	fa 01       	movw	r30, r20
     eba:	ee 0f       	add	r30, r30
     ebc:	ff 1f       	adc	r31, r31
     ebe:	30 96       	adiw	r30, 0x00	; 0
     ec0:	21 05       	cpc	r18, r1
     ec2:	31 05       	cpc	r19, r1
     ec4:	a1 f1       	breq	.+104    	; 0xf2e <pow+0x76>
     ec6:	61 15       	cp	r22, r1
     ec8:	71 05       	cpc	r23, r1
     eca:	61 f4       	brne	.+24     	; 0xee4 <pow+0x2c>
     ecc:	80 38       	cpi	r24, 0x80	; 128
     ece:	bf e3       	ldi	r27, 0x3F	; 63
     ed0:	9b 07       	cpc	r25, r27
     ed2:	49 f1       	breq	.+82     	; 0xf26 <pow+0x6e>
     ed4:	68 94       	set
     ed6:	90 38       	cpi	r25, 0x80	; 128
     ed8:	81 05       	cpc	r24, r1
     eda:	61 f0       	breq	.+24     	; 0xef4 <pow+0x3c>
     edc:	80 38       	cpi	r24, 0x80	; 128
     ede:	bf ef       	ldi	r27, 0xFF	; 255
     ee0:	9b 07       	cpc	r25, r27
     ee2:	41 f0       	breq	.+16     	; 0xef4 <pow+0x3c>
     ee4:	99 23       	and	r25, r25
     ee6:	4a f5       	brpl	.+82     	; 0xf3a <pow+0x82>
     ee8:	ff 3f       	cpi	r31, 0xFF	; 255
     eea:	e1 05       	cpc	r30, r1
     eec:	31 05       	cpc	r19, r1
     eee:	21 05       	cpc	r18, r1
     ef0:	19 f1       	breq	.+70     	; 0xf38 <pow+0x80>
     ef2:	e8 94       	clt
     ef4:	08 94       	sec
     ef6:	e7 95       	ror	r30
     ef8:	d9 01       	movw	r26, r18
     efa:	aa 23       	and	r26, r26
     efc:	29 f4       	brne	.+10     	; 0xf08 <pow+0x50>
     efe:	ab 2f       	mov	r26, r27
     f00:	be 2f       	mov	r27, r30
     f02:	f8 5f       	subi	r31, 0xF8	; 248
     f04:	d0 f3       	brcs	.-12     	; 0xefa <pow+0x42>
     f06:	10 c0       	rjmp	.+32     	; 0xf28 <pow+0x70>
     f08:	ff 5f       	subi	r31, 0xFF	; 255
     f0a:	70 f4       	brcc	.+28     	; 0xf28 <pow+0x70>
     f0c:	a6 95       	lsr	r26
     f0e:	e0 f7       	brcc	.-8      	; 0xf08 <pow+0x50>
     f10:	f7 39       	cpi	r31, 0x97	; 151
     f12:	50 f0       	brcs	.+20     	; 0xf28 <pow+0x70>
     f14:	19 f0       	breq	.+6      	; 0xf1c <pow+0x64>
     f16:	ff 3a       	cpi	r31, 0xAF	; 175
     f18:	38 f4       	brcc	.+14     	; 0xf28 <pow+0x70>
     f1a:	9f 77       	andi	r25, 0x7F	; 127
     f1c:	9f 93       	push	r25
     f1e:	0d d0       	rcall	.+26     	; 0xf3a <pow+0x82>
     f20:	0f 90       	pop	r0
     f22:	07 fc       	sbrc	r0, 7
     f24:	90 58       	subi	r25, 0x80	; 128
     f26:	08 95       	ret
     f28:	46 f0       	brts	.+16     	; 0xf3a <pow+0x82>
     f2a:	0c 94 75 06 	jmp	0xcea	; 0xcea <__fp_nan>
     f2e:	60 e0       	ldi	r22, 0x00	; 0
     f30:	70 e0       	ldi	r23, 0x00	; 0
     f32:	80 e8       	ldi	r24, 0x80	; 128
     f34:	9f e3       	ldi	r25, 0x3F	; 63
     f36:	08 95       	ret
     f38:	4f e7       	ldi	r20, 0x7F	; 127
     f3a:	9f 77       	andi	r25, 0x7F	; 127
     f3c:	5f 93       	push	r21
     f3e:	4f 93       	push	r20
     f40:	3f 93       	push	r19
     f42:	2f 93       	push	r18
     f44:	0e 94 87 08 	call	0x110e	; 0x110e <log>
     f48:	2f 91       	pop	r18
     f4a:	3f 91       	pop	r19
     f4c:	4f 91       	pop	r20
     f4e:	5f 91       	pop	r21
     f50:	0e 94 ef 06 	call	0xdde	; 0xdde <__mulsf3>
     f54:	0c 94 fe 07 	jmp	0xffc	; 0xffc <exp>
     f58:	19 f4       	brne	.+6      	; 0xf60 <pow+0xa8>
     f5a:	16 f4       	brtc	.+4      	; 0xf60 <pow+0xa8>
     f5c:	0c 94 75 06 	jmp	0xcea	; 0xcea <__fp_nan>
     f60:	0c 94 30 08 	jmp	0x1060	; 0x1060 <__fp_mpack>

00000f64 <sqrt>:
     f64:	0e 94 c6 06 	call	0xd8c	; 0xd8c <__fp_splitA>
     f68:	b8 f3       	brcs	.-18     	; 0xf58 <pow+0xa0>
     f6a:	99 23       	and	r25, r25
     f6c:	c9 f3       	breq	.-14     	; 0xf60 <pow+0xa8>
     f6e:	b6 f3       	brts	.-20     	; 0xf5c <pow+0xa4>
     f70:	9f 57       	subi	r25, 0x7F	; 127
     f72:	55 0b       	sbc	r21, r21
     f74:	87 ff       	sbrs	r24, 7
     f76:	0e 94 3e 08 	call	0x107c	; 0x107c <__fp_norm2>
     f7a:	00 24       	eor	r0, r0
     f7c:	a0 e6       	ldi	r26, 0x60	; 96
     f7e:	40 ea       	ldi	r20, 0xA0	; 160
     f80:	90 01       	movw	r18, r0
     f82:	80 58       	subi	r24, 0x80	; 128
     f84:	56 95       	lsr	r21
     f86:	97 95       	ror	r25
     f88:	28 f4       	brcc	.+10     	; 0xf94 <sqrt+0x30>
     f8a:	80 5c       	subi	r24, 0xC0	; 192
     f8c:	66 0f       	add	r22, r22
     f8e:	77 1f       	adc	r23, r23
     f90:	88 1f       	adc	r24, r24
     f92:	20 f0       	brcs	.+8      	; 0xf9c <sqrt+0x38>
     f94:	26 17       	cp	r18, r22
     f96:	37 07       	cpc	r19, r23
     f98:	48 07       	cpc	r20, r24
     f9a:	30 f4       	brcc	.+12     	; 0xfa8 <sqrt+0x44>
     f9c:	62 1b       	sub	r22, r18
     f9e:	73 0b       	sbc	r23, r19
     fa0:	84 0b       	sbc	r24, r20
     fa2:	20 29       	or	r18, r0
     fa4:	31 29       	or	r19, r1
     fa6:	4a 2b       	or	r20, r26
     fa8:	a6 95       	lsr	r26
     faa:	17 94       	ror	r1
     fac:	07 94       	ror	r0
     fae:	20 25       	eor	r18, r0
     fb0:	31 25       	eor	r19, r1
     fb2:	4a 27       	eor	r20, r26
     fb4:	58 f7       	brcc	.-42     	; 0xf8c <sqrt+0x28>
     fb6:	66 0f       	add	r22, r22
     fb8:	77 1f       	adc	r23, r23
     fba:	88 1f       	adc	r24, r24
     fbc:	20 f0       	brcs	.+8      	; 0xfc6 <sqrt+0x62>
     fbe:	26 17       	cp	r18, r22
     fc0:	37 07       	cpc	r19, r23
     fc2:	48 07       	cpc	r20, r24
     fc4:	30 f4       	brcc	.+12     	; 0xfd2 <sqrt+0x6e>
     fc6:	62 0b       	sbc	r22, r18
     fc8:	73 0b       	sbc	r23, r19
     fca:	84 0b       	sbc	r24, r20
     fcc:	20 0d       	add	r18, r0
     fce:	31 1d       	adc	r19, r1
     fd0:	41 1d       	adc	r20, r1
     fd2:	a0 95       	com	r26
     fd4:	81 f7       	brne	.-32     	; 0xfb6 <sqrt+0x52>
     fd6:	b9 01       	movw	r22, r18
     fd8:	84 2f       	mov	r24, r20
     fda:	91 58       	subi	r25, 0x81	; 129
     fdc:	88 0f       	add	r24, r24
     fde:	96 95       	lsr	r25
     fe0:	87 95       	ror	r24
     fe2:	08 95       	ret

00000fe4 <square>:
     fe4:	9b 01       	movw	r18, r22
     fe6:	ac 01       	movw	r20, r24
     fe8:	0c 94 ef 06 	jmp	0xdde	; 0xdde <__mulsf3>
     fec:	29 f4       	brne	.+10     	; 0xff8 <square+0x14>
     fee:	16 f0       	brts	.+4      	; 0xff4 <square+0x10>
     ff0:	0c 94 6f 06 	jmp	0xcde	; 0xcde <__fp_inf>
     ff4:	0c 94 e0 06 	jmp	0xdc0	; 0xdc0 <__fp_zero>
     ff8:	0c 94 75 06 	jmp	0xcea	; 0xcea <__fp_nan>

00000ffc <exp>:
     ffc:	0e 94 c6 06 	call	0xd8c	; 0xd8c <__fp_splitA>
    1000:	a8 f3       	brcs	.-22     	; 0xfec <square+0x8>
    1002:	96 38       	cpi	r25, 0x86	; 134
    1004:	a0 f7       	brcc	.-24     	; 0xfee <square+0xa>
    1006:	07 f8       	bld	r0, 7
    1008:	0f 92       	push	r0
    100a:	e8 94       	clt
    100c:	2b e3       	ldi	r18, 0x3B	; 59
    100e:	3a ea       	ldi	r19, 0xAA	; 170
    1010:	48 eb       	ldi	r20, 0xB8	; 184
    1012:	5f e7       	ldi	r21, 0x7F	; 127
    1014:	0e 94 05 07 	call	0xe0a	; 0xe0a <__mulsf3_pse>
    1018:	0f 92       	push	r0
    101a:	0f 92       	push	r0
    101c:	0f 92       	push	r0
    101e:	4d b7       	in	r20, 0x3d	; 61
    1020:	5e b7       	in	r21, 0x3e	; 62
    1022:	0f 92       	push	r0
    1024:	0e 94 cf 08 	call	0x119e	; 0x119e <modf>
    1028:	e1 ee       	ldi	r30, 0xE1	; 225
    102a:	f0 e0       	ldi	r31, 0x00	; 0
    102c:	0e 94 78 06 	call	0xcf0	; 0xcf0 <__fp_powser>
    1030:	4f 91       	pop	r20
    1032:	5f 91       	pop	r21
    1034:	ef 91       	pop	r30
    1036:	ff 91       	pop	r31
    1038:	e5 95       	asr	r30
    103a:	ee 1f       	adc	r30, r30
    103c:	ff 1f       	adc	r31, r31
    103e:	49 f0       	breq	.+18     	; 0x1052 <exp+0x56>
    1040:	fe 57       	subi	r31, 0x7E	; 126
    1042:	e0 68       	ori	r30, 0x80	; 128
    1044:	44 27       	eor	r20, r20
    1046:	ee 0f       	add	r30, r30
    1048:	44 1f       	adc	r20, r20
    104a:	fa 95       	dec	r31
    104c:	e1 f7       	brne	.-8      	; 0x1046 <exp+0x4a>
    104e:	41 95       	neg	r20
    1050:	55 0b       	sbc	r21, r21
    1052:	0e 94 49 08 	call	0x1092	; 0x1092 <ldexp>
    1056:	0f 90       	pop	r0
    1058:	07 fe       	sbrs	r0, 7
    105a:	0c 94 e7 06 	jmp	0xdce	; 0xdce <inverse>
    105e:	08 95       	ret

00001060 <__fp_mpack>:
    1060:	9f 3f       	cpi	r25, 0xFF	; 255
    1062:	31 f0       	breq	.+12     	; 0x1070 <__fp_mpack_finite+0xc>

00001064 <__fp_mpack_finite>:
    1064:	91 50       	subi	r25, 0x01	; 1
    1066:	20 f4       	brcc	.+8      	; 0x1070 <__fp_mpack_finite+0xc>
    1068:	87 95       	ror	r24
    106a:	77 95       	ror	r23
    106c:	67 95       	ror	r22
    106e:	b7 95       	ror	r27
    1070:	88 0f       	add	r24, r24
    1072:	91 1d       	adc	r25, r1
    1074:	96 95       	lsr	r25
    1076:	87 95       	ror	r24
    1078:	97 f9       	bld	r25, 7
    107a:	08 95       	ret

0000107c <__fp_norm2>:
    107c:	91 50       	subi	r25, 0x01	; 1
    107e:	50 40       	sbci	r21, 0x00	; 0
    1080:	66 0f       	add	r22, r22
    1082:	77 1f       	adc	r23, r23
    1084:	88 1f       	adc	r24, r24
    1086:	d2 f7       	brpl	.-12     	; 0x107c <__fp_norm2>
    1088:	08 95       	ret
    108a:	0c 94 6f 06 	jmp	0xcde	; 0xcde <__fp_inf>
    108e:	0c 94 30 08 	jmp	0x1060	; 0x1060 <__fp_mpack>

00001092 <ldexp>:
    1092:	0e 94 c6 06 	call	0xd8c	; 0xd8c <__fp_splitA>
    1096:	d8 f3       	brcs	.-10     	; 0x108e <__fp_norm2+0x12>
    1098:	99 23       	and	r25, r25
    109a:	c9 f3       	breq	.-14     	; 0x108e <__fp_norm2+0x12>
    109c:	94 0f       	add	r25, r20
    109e:	51 1d       	adc	r21, r1
    10a0:	a3 f3       	brvs	.-24     	; 0x108a <__fp_norm2+0xe>
    10a2:	91 50       	subi	r25, 0x01	; 1
    10a4:	50 40       	sbci	r21, 0x00	; 0
    10a6:	94 f0       	brlt	.+36     	; 0x10cc <ldexp+0x3a>
    10a8:	59 f0       	breq	.+22     	; 0x10c0 <ldexp+0x2e>
    10aa:	88 23       	and	r24, r24
    10ac:	32 f0       	brmi	.+12     	; 0x10ba <ldexp+0x28>
    10ae:	66 0f       	add	r22, r22
    10b0:	77 1f       	adc	r23, r23
    10b2:	88 1f       	adc	r24, r24
    10b4:	91 50       	subi	r25, 0x01	; 1
    10b6:	50 40       	sbci	r21, 0x00	; 0
    10b8:	c1 f7       	brne	.-16     	; 0x10aa <ldexp+0x18>
    10ba:	9e 3f       	cpi	r25, 0xFE	; 254
    10bc:	51 05       	cpc	r21, r1
    10be:	2c f7       	brge	.-54     	; 0x108a <__fp_norm2+0xe>
    10c0:	88 0f       	add	r24, r24
    10c2:	91 1d       	adc	r25, r1
    10c4:	96 95       	lsr	r25
    10c6:	87 95       	ror	r24
    10c8:	97 f9       	bld	r25, 7
    10ca:	08 95       	ret
    10cc:	5f 3f       	cpi	r21, 0xFF	; 255
    10ce:	ac f0       	brlt	.+42     	; 0x10fa <ldexp+0x68>
    10d0:	98 3e       	cpi	r25, 0xE8	; 232
    10d2:	9c f0       	brlt	.+38     	; 0x10fa <ldexp+0x68>
    10d4:	bb 27       	eor	r27, r27
    10d6:	86 95       	lsr	r24
    10d8:	77 95       	ror	r23
    10da:	67 95       	ror	r22
    10dc:	b7 95       	ror	r27
    10de:	08 f4       	brcc	.+2      	; 0x10e2 <ldexp+0x50>
    10e0:	b1 60       	ori	r27, 0x01	; 1
    10e2:	93 95       	inc	r25
    10e4:	c1 f7       	brne	.-16     	; 0x10d6 <ldexp+0x44>
    10e6:	bb 0f       	add	r27, r27
    10e8:	58 f7       	brcc	.-42     	; 0x10c0 <ldexp+0x2e>
    10ea:	11 f4       	brne	.+4      	; 0x10f0 <ldexp+0x5e>
    10ec:	60 ff       	sbrs	r22, 0
    10ee:	e8 cf       	rjmp	.-48     	; 0x10c0 <ldexp+0x2e>
    10f0:	6f 5f       	subi	r22, 0xFF	; 255
    10f2:	7f 4f       	sbci	r23, 0xFF	; 255
    10f4:	8f 4f       	sbci	r24, 0xFF	; 255
    10f6:	9f 4f       	sbci	r25, 0xFF	; 255
    10f8:	e3 cf       	rjmp	.-58     	; 0x10c0 <ldexp+0x2e>
    10fa:	0c 94 e1 06 	jmp	0xdc2	; 0xdc2 <__fp_szero>
    10fe:	16 f0       	brts	.+4      	; 0x1104 <ldexp+0x72>
    1100:	0c 94 30 08 	jmp	0x1060	; 0x1060 <__fp_mpack>
    1104:	0c 94 75 06 	jmp	0xcea	; 0xcea <__fp_nan>
    1108:	68 94       	set
    110a:	0c 94 6f 06 	jmp	0xcde	; 0xcde <__fp_inf>

0000110e <log>:
    110e:	0e 94 c6 06 	call	0xd8c	; 0xd8c <__fp_splitA>
    1112:	a8 f3       	brcs	.-22     	; 0x10fe <ldexp+0x6c>
    1114:	99 23       	and	r25, r25
    1116:	c1 f3       	breq	.-16     	; 0x1108 <ldexp+0x76>
    1118:	ae f3       	brts	.-22     	; 0x1104 <ldexp+0x72>
    111a:	df 93       	push	r29
    111c:	cf 93       	push	r28
    111e:	1f 93       	push	r17
    1120:	0f 93       	push	r16
    1122:	ff 92       	push	r15
    1124:	c9 2f       	mov	r28, r25
    1126:	dd 27       	eor	r29, r29
    1128:	88 23       	and	r24, r24
    112a:	2a f0       	brmi	.+10     	; 0x1136 <log+0x28>
    112c:	21 97       	sbiw	r28, 0x01	; 1
    112e:	66 0f       	add	r22, r22
    1130:	77 1f       	adc	r23, r23
    1132:	88 1f       	adc	r24, r24
    1134:	da f7       	brpl	.-10     	; 0x112c <log+0x1e>
    1136:	20 e0       	ldi	r18, 0x00	; 0
    1138:	30 e0       	ldi	r19, 0x00	; 0
    113a:	40 e8       	ldi	r20, 0x80	; 128
    113c:	5f eb       	ldi	r21, 0xBF	; 191
    113e:	9f e3       	ldi	r25, 0x3F	; 63
    1140:	88 39       	cpi	r24, 0x98	; 152
    1142:	20 f0       	brcs	.+8      	; 0x114c <log+0x3e>
    1144:	80 3e       	cpi	r24, 0xE0	; 224
    1146:	38 f0       	brcs	.+14     	; 0x1156 <log+0x48>
    1148:	21 96       	adiw	r28, 0x01	; 1
    114a:	8f 77       	andi	r24, 0x7F	; 127
    114c:	0e 94 25 05 	call	0xa4a	; 0xa4a <__addsf3>
    1150:	e9 e0       	ldi	r30, 0x09	; 9
    1152:	f1 e0       	ldi	r31, 0x01	; 1
    1154:	04 c0       	rjmp	.+8      	; 0x115e <log+0x50>
    1156:	0e 94 25 05 	call	0xa4a	; 0xa4a <__addsf3>
    115a:	e6 e3       	ldi	r30, 0x36	; 54
    115c:	f1 e0       	ldi	r31, 0x01	; 1
    115e:	0e 94 78 06 	call	0xcf0	; 0xcf0 <__fp_powser>
    1162:	8b 01       	movw	r16, r22
    1164:	be 01       	movw	r22, r28
    1166:	ec 01       	movw	r28, r24
    1168:	fb 2e       	mov	r15, r27
    116a:	6f 57       	subi	r22, 0x7F	; 127
    116c:	71 09       	sbc	r23, r1
    116e:	75 95       	asr	r23
    1170:	77 1f       	adc	r23, r23
    1172:	88 0b       	sbc	r24, r24
    1174:	99 0b       	sbc	r25, r25
    1176:	0e 94 34 06 	call	0xc68	; 0xc68 <__floatsisf>
    117a:	28 e1       	ldi	r18, 0x18	; 24
    117c:	32 e7       	ldi	r19, 0x72	; 114
    117e:	41 e3       	ldi	r20, 0x31	; 49
    1180:	5f e3       	ldi	r21, 0x3F	; 63
    1182:	0e 94 02 07 	call	0xe04	; 0xe04 <__mulsf3x>
    1186:	af 2d       	mov	r26, r15
    1188:	98 01       	movw	r18, r16
    118a:	ae 01       	movw	r20, r28
    118c:	ff 90       	pop	r15
    118e:	0f 91       	pop	r16
    1190:	1f 91       	pop	r17
    1192:	cf 91       	pop	r28
    1194:	df 91       	pop	r29
    1196:	0e 94 3c 05 	call	0xa78	; 0xa78 <__addsf3x>
    119a:	0c 94 ad 06 	jmp	0xd5a	; 0xd5a <__fp_round>

0000119e <modf>:
    119e:	fa 01       	movw	r30, r20
    11a0:	dc 01       	movw	r26, r24
    11a2:	aa 0f       	add	r26, r26
    11a4:	bb 1f       	adc	r27, r27
    11a6:	9b 01       	movw	r18, r22
    11a8:	ac 01       	movw	r20, r24
    11aa:	bf 57       	subi	r27, 0x7F	; 127
    11ac:	28 f4       	brcc	.+10     	; 0x11b8 <modf+0x1a>
    11ae:	22 27       	eor	r18, r18
    11b0:	33 27       	eor	r19, r19
    11b2:	44 27       	eor	r20, r20
    11b4:	50 78       	andi	r21, 0x80	; 128
    11b6:	20 c0       	rjmp	.+64     	; 0x11f8 <modf+0x5a>
    11b8:	b7 51       	subi	r27, 0x17	; 23
    11ba:	90 f4       	brcc	.+36     	; 0x11e0 <modf+0x42>
    11bc:	ab 2f       	mov	r26, r27
    11be:	00 24       	eor	r0, r0
    11c0:	46 95       	lsr	r20
    11c2:	37 95       	ror	r19
    11c4:	27 95       	ror	r18
    11c6:	01 1c       	adc	r0, r1
    11c8:	a3 95       	inc	r26
    11ca:	d2 f3       	brmi	.-12     	; 0x11c0 <modf+0x22>
    11cc:	00 20       	and	r0, r0
    11ce:	71 f0       	breq	.+28     	; 0x11ec <modf+0x4e>
    11d0:	22 0f       	add	r18, r18
    11d2:	33 1f       	adc	r19, r19
    11d4:	44 1f       	adc	r20, r20
    11d6:	b3 95       	inc	r27
    11d8:	da f3       	brmi	.-10     	; 0x11d0 <modf+0x32>
    11da:	0e d0       	rcall	.+28     	; 0x11f8 <modf+0x5a>
    11dc:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__subsf3>
    11e0:	61 30       	cpi	r22, 0x01	; 1
    11e2:	71 05       	cpc	r23, r1
    11e4:	a0 e8       	ldi	r26, 0x80	; 128
    11e6:	8a 07       	cpc	r24, r26
    11e8:	b9 46       	sbci	r27, 0x69	; 105
    11ea:	30 f4       	brcc	.+12     	; 0x11f8 <modf+0x5a>
    11ec:	9b 01       	movw	r18, r22
    11ee:	ac 01       	movw	r20, r24
    11f0:	66 27       	eor	r22, r22
    11f2:	77 27       	eor	r23, r23
    11f4:	88 27       	eor	r24, r24
    11f6:	90 78       	andi	r25, 0x80	; 128
    11f8:	30 96       	adiw	r30, 0x00	; 0
    11fa:	21 f0       	breq	.+8      	; 0x1204 <modf+0x66>
    11fc:	20 83       	st	Z, r18
    11fe:	31 83       	std	Z+1, r19	; 0x01
    1200:	42 83       	std	Z+2, r20	; 0x02
    1202:	53 83       	std	Z+3, r21	; 0x03
    1204:	08 95       	ret

00001206 <dtostrf>:
    1206:	ef 92       	push	r14
    1208:	0f 93       	push	r16
    120a:	1f 93       	push	r17
    120c:	cf 93       	push	r28
    120e:	df 93       	push	r29
    1210:	e8 01       	movw	r28, r16
    1212:	47 fd       	sbrc	r20, 7
    1214:	02 c0       	rjmp	.+4      	; 0x121a <dtostrf+0x14>
    1216:	34 e0       	ldi	r19, 0x04	; 4
    1218:	01 c0       	rjmp	.+2      	; 0x121c <dtostrf+0x16>
    121a:	34 e1       	ldi	r19, 0x14	; 20
    121c:	04 2e       	mov	r0, r20
    121e:	00 0c       	add	r0, r0
    1220:	55 0b       	sbc	r21, r21
    1222:	57 ff       	sbrs	r21, 7
    1224:	03 c0       	rjmp	.+6      	; 0x122c <dtostrf+0x26>
    1226:	51 95       	neg	r21
    1228:	41 95       	neg	r20
    122a:	51 09       	sbc	r21, r1
    122c:	e3 2e       	mov	r14, r19
    122e:	02 2f       	mov	r16, r18
    1230:	24 2f       	mov	r18, r20
    1232:	ae 01       	movw	r20, r28
    1234:	0e 94 5a 09 	call	0x12b4	; 0x12b4 <dtoa_prf>
    1238:	ce 01       	movw	r24, r28
    123a:	df 91       	pop	r29
    123c:	cf 91       	pop	r28
    123e:	1f 91       	pop	r17
    1240:	0f 91       	pop	r16
    1242:	ef 90       	pop	r14
    1244:	08 95       	ret

00001246 <strcat>:
    1246:	fb 01       	movw	r30, r22
    1248:	dc 01       	movw	r26, r24
    124a:	0d 90       	ld	r0, X+
    124c:	00 20       	and	r0, r0
    124e:	e9 f7       	brne	.-6      	; 0x124a <strcat+0x4>
    1250:	11 97       	sbiw	r26, 0x01	; 1
    1252:	01 90       	ld	r0, Z+
    1254:	0d 92       	st	X+, r0
    1256:	00 20       	and	r0, r0
    1258:	e1 f7       	brne	.-8      	; 0x1252 <strcat+0xc>
    125a:	08 95       	ret

0000125c <strcpy>:
    125c:	fb 01       	movw	r30, r22
    125e:	dc 01       	movw	r26, r24
    1260:	01 90       	ld	r0, Z+
    1262:	0d 92       	st	X+, r0
    1264:	00 20       	and	r0, r0
    1266:	e1 f7       	brne	.-8      	; 0x1260 <strcpy+0x4>
    1268:	08 95       	ret

0000126a <__itoa_ncheck>:
    126a:	bb 27       	eor	r27, r27
    126c:	4a 30       	cpi	r20, 0x0A	; 10
    126e:	31 f4       	brne	.+12     	; 0x127c <__itoa_ncheck+0x12>
    1270:	99 23       	and	r25, r25
    1272:	22 f4       	brpl	.+8      	; 0x127c <__itoa_ncheck+0x12>
    1274:	bd e2       	ldi	r27, 0x2D	; 45
    1276:	90 95       	com	r25
    1278:	81 95       	neg	r24
    127a:	9f 4f       	sbci	r25, 0xFF	; 255
    127c:	0c 94 41 09 	jmp	0x1282	; 0x1282 <__utoa_common>

00001280 <__utoa_ncheck>:
    1280:	bb 27       	eor	r27, r27

00001282 <__utoa_common>:
    1282:	fb 01       	movw	r30, r22
    1284:	55 27       	eor	r21, r21
    1286:	aa 27       	eor	r26, r26
    1288:	88 0f       	add	r24, r24
    128a:	99 1f       	adc	r25, r25
    128c:	aa 1f       	adc	r26, r26
    128e:	a4 17       	cp	r26, r20
    1290:	10 f0       	brcs	.+4      	; 0x1296 <__utoa_common+0x14>
    1292:	a4 1b       	sub	r26, r20
    1294:	83 95       	inc	r24
    1296:	50 51       	subi	r21, 0x10	; 16
    1298:	b9 f7       	brne	.-18     	; 0x1288 <__utoa_common+0x6>
    129a:	a0 5d       	subi	r26, 0xD0	; 208
    129c:	aa 33       	cpi	r26, 0x3A	; 58
    129e:	08 f0       	brcs	.+2      	; 0x12a2 <__utoa_common+0x20>
    12a0:	a9 5d       	subi	r26, 0xD9	; 217
    12a2:	a1 93       	st	Z+, r26
    12a4:	00 97       	sbiw	r24, 0x00	; 0
    12a6:	79 f7       	brne	.-34     	; 0x1286 <__utoa_common+0x4>
    12a8:	b1 11       	cpse	r27, r1
    12aa:	b1 93       	st	Z+, r27
    12ac:	11 92       	st	Z+, r1
    12ae:	cb 01       	movw	r24, r22
    12b0:	0c 94 8c 0b 	jmp	0x1718	; 0x1718 <strrev>

000012b4 <dtoa_prf>:
    12b4:	a9 e0       	ldi	r26, 0x09	; 9
    12b6:	b0 e0       	ldi	r27, 0x00	; 0
    12b8:	e0 e6       	ldi	r30, 0x60	; 96
    12ba:	f9 e0       	ldi	r31, 0x09	; 9
    12bc:	0c 94 a2 0b 	jmp	0x1744	; 0x1744 <__prologue_saves__+0xc>
    12c0:	6a 01       	movw	r12, r20
    12c2:	12 2f       	mov	r17, r18
    12c4:	b0 2e       	mov	r11, r16
    12c6:	2b e3       	ldi	r18, 0x3B	; 59
    12c8:	20 17       	cp	r18, r16
    12ca:	20 f0       	brcs	.+8      	; 0x12d4 <dtoa_prf+0x20>
    12cc:	ff 24       	eor	r15, r15
    12ce:	f3 94       	inc	r15
    12d0:	f0 0e       	add	r15, r16
    12d2:	02 c0       	rjmp	.+4      	; 0x12d8 <dtoa_prf+0x24>
    12d4:	2c e3       	ldi	r18, 0x3C	; 60
    12d6:	f2 2e       	mov	r15, r18
    12d8:	0f 2d       	mov	r16, r15
    12da:	27 e0       	ldi	r18, 0x07	; 7
    12dc:	ae 01       	movw	r20, r28
    12de:	4f 5f       	subi	r20, 0xFF	; 255
    12e0:	5f 4f       	sbci	r21, 0xFF	; 255
    12e2:	0e 94 b4 0a 	call	0x1568	; 0x1568 <__ftoa_engine>
    12e6:	bc 01       	movw	r22, r24
    12e8:	49 81       	ldd	r20, Y+1	; 0x01
    12ea:	84 2f       	mov	r24, r20
    12ec:	89 70       	andi	r24, 0x09	; 9
    12ee:	81 30       	cpi	r24, 0x01	; 1
    12f0:	31 f0       	breq	.+12     	; 0x12fe <dtoa_prf+0x4a>
    12f2:	e1 fc       	sbrc	r14, 1
    12f4:	06 c0       	rjmp	.+12     	; 0x1302 <dtoa_prf+0x4e>
    12f6:	e0 fe       	sbrs	r14, 0
    12f8:	06 c0       	rjmp	.+12     	; 0x1306 <dtoa_prf+0x52>
    12fa:	90 e2       	ldi	r25, 0x20	; 32
    12fc:	05 c0       	rjmp	.+10     	; 0x1308 <dtoa_prf+0x54>
    12fe:	9d e2       	ldi	r25, 0x2D	; 45
    1300:	03 c0       	rjmp	.+6      	; 0x1308 <dtoa_prf+0x54>
    1302:	9b e2       	ldi	r25, 0x2B	; 43
    1304:	01 c0       	rjmp	.+2      	; 0x1308 <dtoa_prf+0x54>
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	5e 2d       	mov	r21, r14
    130a:	50 71       	andi	r21, 0x10	; 16
    130c:	43 ff       	sbrs	r20, 3
    130e:	3c c0       	rjmp	.+120    	; 0x1388 <dtoa_prf+0xd4>
    1310:	91 11       	cpse	r25, r1
    1312:	02 c0       	rjmp	.+4      	; 0x1318 <dtoa_prf+0x64>
    1314:	83 e0       	ldi	r24, 0x03	; 3
    1316:	01 c0       	rjmp	.+2      	; 0x131a <dtoa_prf+0x66>
    1318:	84 e0       	ldi	r24, 0x04	; 4
    131a:	81 17       	cp	r24, r17
    131c:	18 f4       	brcc	.+6      	; 0x1324 <dtoa_prf+0x70>
    131e:	21 2f       	mov	r18, r17
    1320:	28 1b       	sub	r18, r24
    1322:	01 c0       	rjmp	.+2      	; 0x1326 <dtoa_prf+0x72>
    1324:	20 e0       	ldi	r18, 0x00	; 0
    1326:	51 11       	cpse	r21, r1
    1328:	0b c0       	rjmp	.+22     	; 0x1340 <dtoa_prf+0x8c>
    132a:	f6 01       	movw	r30, r12
    132c:	82 2f       	mov	r24, r18
    132e:	30 e2       	ldi	r19, 0x20	; 32
    1330:	88 23       	and	r24, r24
    1332:	19 f0       	breq	.+6      	; 0x133a <dtoa_prf+0x86>
    1334:	31 93       	st	Z+, r19
    1336:	81 50       	subi	r24, 0x01	; 1
    1338:	fb cf       	rjmp	.-10     	; 0x1330 <dtoa_prf+0x7c>
    133a:	c2 0e       	add	r12, r18
    133c:	d1 1c       	adc	r13, r1
    133e:	20 e0       	ldi	r18, 0x00	; 0
    1340:	99 23       	and	r25, r25
    1342:	29 f0       	breq	.+10     	; 0x134e <dtoa_prf+0x9a>
    1344:	d6 01       	movw	r26, r12
    1346:	9c 93       	st	X, r25
    1348:	f6 01       	movw	r30, r12
    134a:	31 96       	adiw	r30, 0x01	; 1
    134c:	6f 01       	movw	r12, r30
    134e:	c6 01       	movw	r24, r12
    1350:	03 96       	adiw	r24, 0x03	; 3
    1352:	e2 fe       	sbrs	r14, 2
    1354:	0a c0       	rjmp	.+20     	; 0x136a <dtoa_prf+0xb6>
    1356:	3e e4       	ldi	r19, 0x4E	; 78
    1358:	d6 01       	movw	r26, r12
    135a:	3c 93       	st	X, r19
    135c:	41 e4       	ldi	r20, 0x41	; 65
    135e:	11 96       	adiw	r26, 0x01	; 1
    1360:	4c 93       	st	X, r20
    1362:	11 97       	sbiw	r26, 0x01	; 1
    1364:	12 96       	adiw	r26, 0x02	; 2
    1366:	3c 93       	st	X, r19
    1368:	06 c0       	rjmp	.+12     	; 0x1376 <dtoa_prf+0xc2>
    136a:	3e e6       	ldi	r19, 0x6E	; 110
    136c:	f6 01       	movw	r30, r12
    136e:	30 83       	st	Z, r19
    1370:	41 e6       	ldi	r20, 0x61	; 97
    1372:	41 83       	std	Z+1, r20	; 0x01
    1374:	32 83       	std	Z+2, r19	; 0x02
    1376:	fc 01       	movw	r30, r24
    1378:	32 2f       	mov	r19, r18
    137a:	40 e2       	ldi	r20, 0x20	; 32
    137c:	33 23       	and	r19, r19
    137e:	09 f4       	brne	.+2      	; 0x1382 <dtoa_prf+0xce>
    1380:	42 c0       	rjmp	.+132    	; 0x1406 <dtoa_prf+0x152>
    1382:	41 93       	st	Z+, r20
    1384:	31 50       	subi	r19, 0x01	; 1
    1386:	fa cf       	rjmp	.-12     	; 0x137c <dtoa_prf+0xc8>
    1388:	42 ff       	sbrs	r20, 2
    138a:	44 c0       	rjmp	.+136    	; 0x1414 <dtoa_prf+0x160>
    138c:	91 11       	cpse	r25, r1
    138e:	02 c0       	rjmp	.+4      	; 0x1394 <dtoa_prf+0xe0>
    1390:	83 e0       	ldi	r24, 0x03	; 3
    1392:	01 c0       	rjmp	.+2      	; 0x1396 <dtoa_prf+0xe2>
    1394:	84 e0       	ldi	r24, 0x04	; 4
    1396:	81 17       	cp	r24, r17
    1398:	18 f4       	brcc	.+6      	; 0x13a0 <dtoa_prf+0xec>
    139a:	21 2f       	mov	r18, r17
    139c:	28 1b       	sub	r18, r24
    139e:	01 c0       	rjmp	.+2      	; 0x13a2 <dtoa_prf+0xee>
    13a0:	20 e0       	ldi	r18, 0x00	; 0
    13a2:	51 11       	cpse	r21, r1
    13a4:	0b c0       	rjmp	.+22     	; 0x13bc <dtoa_prf+0x108>
    13a6:	f6 01       	movw	r30, r12
    13a8:	82 2f       	mov	r24, r18
    13aa:	30 e2       	ldi	r19, 0x20	; 32
    13ac:	88 23       	and	r24, r24
    13ae:	19 f0       	breq	.+6      	; 0x13b6 <dtoa_prf+0x102>
    13b0:	31 93       	st	Z+, r19
    13b2:	81 50       	subi	r24, 0x01	; 1
    13b4:	fb cf       	rjmp	.-10     	; 0x13ac <dtoa_prf+0xf8>
    13b6:	c2 0e       	add	r12, r18
    13b8:	d1 1c       	adc	r13, r1
    13ba:	20 e0       	ldi	r18, 0x00	; 0
    13bc:	99 23       	and	r25, r25
    13be:	29 f0       	breq	.+10     	; 0x13ca <dtoa_prf+0x116>
    13c0:	d6 01       	movw	r26, r12
    13c2:	9c 93       	st	X, r25
    13c4:	f6 01       	movw	r30, r12
    13c6:	31 96       	adiw	r30, 0x01	; 1
    13c8:	6f 01       	movw	r12, r30
    13ca:	c6 01       	movw	r24, r12
    13cc:	03 96       	adiw	r24, 0x03	; 3
    13ce:	e2 fe       	sbrs	r14, 2
    13d0:	0b c0       	rjmp	.+22     	; 0x13e8 <dtoa_prf+0x134>
    13d2:	39 e4       	ldi	r19, 0x49	; 73
    13d4:	d6 01       	movw	r26, r12
    13d6:	3c 93       	st	X, r19
    13d8:	3e e4       	ldi	r19, 0x4E	; 78
    13da:	11 96       	adiw	r26, 0x01	; 1
    13dc:	3c 93       	st	X, r19
    13de:	11 97       	sbiw	r26, 0x01	; 1
    13e0:	36 e4       	ldi	r19, 0x46	; 70
    13e2:	12 96       	adiw	r26, 0x02	; 2
    13e4:	3c 93       	st	X, r19
    13e6:	07 c0       	rjmp	.+14     	; 0x13f6 <dtoa_prf+0x142>
    13e8:	39 e6       	ldi	r19, 0x69	; 105
    13ea:	f6 01       	movw	r30, r12
    13ec:	30 83       	st	Z, r19
    13ee:	3e e6       	ldi	r19, 0x6E	; 110
    13f0:	31 83       	std	Z+1, r19	; 0x01
    13f2:	36 e6       	ldi	r19, 0x66	; 102
    13f4:	32 83       	std	Z+2, r19	; 0x02
    13f6:	fc 01       	movw	r30, r24
    13f8:	32 2f       	mov	r19, r18
    13fa:	40 e2       	ldi	r20, 0x20	; 32
    13fc:	33 23       	and	r19, r19
    13fe:	19 f0       	breq	.+6      	; 0x1406 <dtoa_prf+0x152>
    1400:	41 93       	st	Z+, r20
    1402:	31 50       	subi	r19, 0x01	; 1
    1404:	fb cf       	rjmp	.-10     	; 0x13fc <dtoa_prf+0x148>
    1406:	fc 01       	movw	r30, r24
    1408:	e2 0f       	add	r30, r18
    140a:	f1 1d       	adc	r31, r1
    140c:	10 82       	st	Z, r1
    140e:	8e ef       	ldi	r24, 0xFE	; 254
    1410:	9f ef       	ldi	r25, 0xFF	; 255
    1412:	a6 c0       	rjmp	.+332    	; 0x1560 <dtoa_prf+0x2ac>
    1414:	21 e0       	ldi	r18, 0x01	; 1
    1416:	30 e0       	ldi	r19, 0x00	; 0
    1418:	91 11       	cpse	r25, r1
    141a:	02 c0       	rjmp	.+4      	; 0x1420 <dtoa_prf+0x16c>
    141c:	20 e0       	ldi	r18, 0x00	; 0
    141e:	30 e0       	ldi	r19, 0x00	; 0
    1420:	16 16       	cp	r1, r22
    1422:	17 06       	cpc	r1, r23
    1424:	1c f4       	brge	.+6      	; 0x142c <dtoa_prf+0x178>
    1426:	fb 01       	movw	r30, r22
    1428:	31 96       	adiw	r30, 0x01	; 1
    142a:	02 c0       	rjmp	.+4      	; 0x1430 <dtoa_prf+0x17c>
    142c:	e1 e0       	ldi	r30, 0x01	; 1
    142e:	f0 e0       	ldi	r31, 0x00	; 0
    1430:	2e 0f       	add	r18, r30
    1432:	3f 1f       	adc	r19, r31
    1434:	bb 20       	and	r11, r11
    1436:	21 f0       	breq	.+8      	; 0x1440 <dtoa_prf+0x18c>
    1438:	eb 2d       	mov	r30, r11
    143a:	f0 e0       	ldi	r31, 0x00	; 0
    143c:	31 96       	adiw	r30, 0x01	; 1
    143e:	02 c0       	rjmp	.+4      	; 0x1444 <dtoa_prf+0x190>
    1440:	e0 e0       	ldi	r30, 0x00	; 0
    1442:	f0 e0       	ldi	r31, 0x00	; 0
    1444:	2e 0f       	add	r18, r30
    1446:	3f 1f       	adc	r19, r31
    1448:	e1 2f       	mov	r30, r17
    144a:	f0 e0       	ldi	r31, 0x00	; 0
    144c:	2e 17       	cp	r18, r30
    144e:	3f 07       	cpc	r19, r31
    1450:	1c f4       	brge	.+6      	; 0x1458 <dtoa_prf+0x1a4>
    1452:	12 1b       	sub	r17, r18
    1454:	21 2f       	mov	r18, r17
    1456:	01 c0       	rjmp	.+2      	; 0x145a <dtoa_prf+0x1a6>
    1458:	20 e0       	ldi	r18, 0x00	; 0
    145a:	8e 2d       	mov	r24, r14
    145c:	88 71       	andi	r24, 0x18	; 24
    145e:	59 f4       	brne	.+22     	; 0x1476 <dtoa_prf+0x1c2>
    1460:	f6 01       	movw	r30, r12
    1462:	82 2f       	mov	r24, r18
    1464:	30 e2       	ldi	r19, 0x20	; 32
    1466:	88 23       	and	r24, r24
    1468:	19 f0       	breq	.+6      	; 0x1470 <dtoa_prf+0x1bc>
    146a:	31 93       	st	Z+, r19
    146c:	81 50       	subi	r24, 0x01	; 1
    146e:	fb cf       	rjmp	.-10     	; 0x1466 <dtoa_prf+0x1b2>
    1470:	c2 0e       	add	r12, r18
    1472:	d1 1c       	adc	r13, r1
    1474:	20 e0       	ldi	r18, 0x00	; 0
    1476:	99 23       	and	r25, r25
    1478:	29 f0       	breq	.+10     	; 0x1484 <dtoa_prf+0x1d0>
    147a:	d6 01       	movw	r26, r12
    147c:	9c 93       	st	X, r25
    147e:	f6 01       	movw	r30, r12
    1480:	31 96       	adiw	r30, 0x01	; 1
    1482:	6f 01       	movw	r12, r30
    1484:	51 11       	cpse	r21, r1
    1486:	0b c0       	rjmp	.+22     	; 0x149e <dtoa_prf+0x1ea>
    1488:	f6 01       	movw	r30, r12
    148a:	82 2f       	mov	r24, r18
    148c:	90 e3       	ldi	r25, 0x30	; 48
    148e:	88 23       	and	r24, r24
    1490:	19 f0       	breq	.+6      	; 0x1498 <dtoa_prf+0x1e4>
    1492:	91 93       	st	Z+, r25
    1494:	81 50       	subi	r24, 0x01	; 1
    1496:	fb cf       	rjmp	.-10     	; 0x148e <dtoa_prf+0x1da>
    1498:	c2 0e       	add	r12, r18
    149a:	d1 1c       	adc	r13, r1
    149c:	20 e0       	ldi	r18, 0x00	; 0
    149e:	0f 2d       	mov	r16, r15
    14a0:	06 0f       	add	r16, r22
    14a2:	9a 81       	ldd	r25, Y+2	; 0x02
    14a4:	34 2f       	mov	r19, r20
    14a6:	30 71       	andi	r19, 0x10	; 16
    14a8:	44 ff       	sbrs	r20, 4
    14aa:	03 c0       	rjmp	.+6      	; 0x14b2 <dtoa_prf+0x1fe>
    14ac:	91 33       	cpi	r25, 0x31	; 49
    14ae:	09 f4       	brne	.+2      	; 0x14b2 <dtoa_prf+0x1fe>
    14b0:	01 50       	subi	r16, 0x01	; 1
    14b2:	10 16       	cp	r1, r16
    14b4:	24 f4       	brge	.+8      	; 0x14be <dtoa_prf+0x20a>
    14b6:	09 30       	cpi	r16, 0x09	; 9
    14b8:	18 f0       	brcs	.+6      	; 0x14c0 <dtoa_prf+0x20c>
    14ba:	08 e0       	ldi	r16, 0x08	; 8
    14bc:	01 c0       	rjmp	.+2      	; 0x14c0 <dtoa_prf+0x20c>
    14be:	01 e0       	ldi	r16, 0x01	; 1
    14c0:	ab 01       	movw	r20, r22
    14c2:	77 ff       	sbrs	r23, 7
    14c4:	02 c0       	rjmp	.+4      	; 0x14ca <dtoa_prf+0x216>
    14c6:	40 e0       	ldi	r20, 0x00	; 0
    14c8:	50 e0       	ldi	r21, 0x00	; 0
    14ca:	fb 01       	movw	r30, r22
    14cc:	e4 1b       	sub	r30, r20
    14ce:	f5 0b       	sbc	r31, r21
    14d0:	a1 e0       	ldi	r26, 0x01	; 1
    14d2:	b0 e0       	ldi	r27, 0x00	; 0
    14d4:	ac 0f       	add	r26, r28
    14d6:	bd 1f       	adc	r27, r29
    14d8:	ea 0f       	add	r30, r26
    14da:	fb 1f       	adc	r31, r27
    14dc:	8e e2       	ldi	r24, 0x2E	; 46
    14de:	a8 2e       	mov	r10, r24
    14e0:	4b 01       	movw	r8, r22
    14e2:	80 1a       	sub	r8, r16
    14e4:	91 08       	sbc	r9, r1
    14e6:	0b 2d       	mov	r16, r11
    14e8:	10 e0       	ldi	r17, 0x00	; 0
    14ea:	11 95       	neg	r17
    14ec:	01 95       	neg	r16
    14ee:	11 09       	sbc	r17, r1
    14f0:	4f 3f       	cpi	r20, 0xFF	; 255
    14f2:	bf ef       	ldi	r27, 0xFF	; 255
    14f4:	5b 07       	cpc	r21, r27
    14f6:	21 f4       	brne	.+8      	; 0x1500 <dtoa_prf+0x24c>
    14f8:	d6 01       	movw	r26, r12
    14fa:	ac 92       	st	X, r10
    14fc:	11 96       	adiw	r26, 0x01	; 1
    14fe:	6d 01       	movw	r12, r26
    1500:	64 17       	cp	r22, r20
    1502:	75 07       	cpc	r23, r21
    1504:	2c f0       	brlt	.+10     	; 0x1510 <dtoa_prf+0x25c>
    1506:	84 16       	cp	r8, r20
    1508:	95 06       	cpc	r9, r21
    150a:	14 f4       	brge	.+4      	; 0x1510 <dtoa_prf+0x25c>
    150c:	81 81       	ldd	r24, Z+1	; 0x01
    150e:	01 c0       	rjmp	.+2      	; 0x1512 <dtoa_prf+0x25e>
    1510:	80 e3       	ldi	r24, 0x30	; 48
    1512:	41 50       	subi	r20, 0x01	; 1
    1514:	51 09       	sbc	r21, r1
    1516:	31 96       	adiw	r30, 0x01	; 1
    1518:	d6 01       	movw	r26, r12
    151a:	11 96       	adiw	r26, 0x01	; 1
    151c:	7d 01       	movw	r14, r26
    151e:	40 17       	cp	r20, r16
    1520:	51 07       	cpc	r21, r17
    1522:	24 f0       	brlt	.+8      	; 0x152c <dtoa_prf+0x278>
    1524:	d6 01       	movw	r26, r12
    1526:	8c 93       	st	X, r24
    1528:	67 01       	movw	r12, r14
    152a:	e2 cf       	rjmp	.-60     	; 0x14f0 <dtoa_prf+0x23c>
    152c:	64 17       	cp	r22, r20
    152e:	75 07       	cpc	r23, r21
    1530:	39 f4       	brne	.+14     	; 0x1540 <dtoa_prf+0x28c>
    1532:	96 33       	cpi	r25, 0x36	; 54
    1534:	20 f4       	brcc	.+8      	; 0x153e <dtoa_prf+0x28a>
    1536:	95 33       	cpi	r25, 0x35	; 53
    1538:	19 f4       	brne	.+6      	; 0x1540 <dtoa_prf+0x28c>
    153a:	31 11       	cpse	r19, r1
    153c:	01 c0       	rjmp	.+2      	; 0x1540 <dtoa_prf+0x28c>
    153e:	81 e3       	ldi	r24, 0x31	; 49
    1540:	f6 01       	movw	r30, r12
    1542:	80 83       	st	Z, r24
    1544:	f7 01       	movw	r30, r14
    1546:	82 2f       	mov	r24, r18
    1548:	90 e2       	ldi	r25, 0x20	; 32
    154a:	88 23       	and	r24, r24
    154c:	19 f0       	breq	.+6      	; 0x1554 <dtoa_prf+0x2a0>
    154e:	91 93       	st	Z+, r25
    1550:	81 50       	subi	r24, 0x01	; 1
    1552:	fb cf       	rjmp	.-10     	; 0x154a <dtoa_prf+0x296>
    1554:	f7 01       	movw	r30, r14
    1556:	e2 0f       	add	r30, r18
    1558:	f1 1d       	adc	r31, r1
    155a:	10 82       	st	Z, r1
    155c:	80 e0       	ldi	r24, 0x00	; 0
    155e:	90 e0       	ldi	r25, 0x00	; 0
    1560:	29 96       	adiw	r28, 0x09	; 9
    1562:	ec e0       	ldi	r30, 0x0C	; 12
    1564:	0c 94 be 0b 	jmp	0x177c	; 0x177c <__epilogue_restores__+0xc>

00001568 <__ftoa_engine>:
    1568:	28 30       	cpi	r18, 0x08	; 8
    156a:	08 f0       	brcs	.+2      	; 0x156e <__ftoa_engine+0x6>
    156c:	27 e0       	ldi	r18, 0x07	; 7
    156e:	33 27       	eor	r19, r19
    1570:	da 01       	movw	r26, r20
    1572:	99 0f       	add	r25, r25
    1574:	31 1d       	adc	r19, r1
    1576:	87 fd       	sbrc	r24, 7
    1578:	91 60       	ori	r25, 0x01	; 1
    157a:	00 96       	adiw	r24, 0x00	; 0
    157c:	61 05       	cpc	r22, r1
    157e:	71 05       	cpc	r23, r1
    1580:	39 f4       	brne	.+14     	; 0x1590 <__ftoa_engine+0x28>
    1582:	32 60       	ori	r19, 0x02	; 2
    1584:	2e 5f       	subi	r18, 0xFE	; 254
    1586:	3d 93       	st	X+, r19
    1588:	30 e3       	ldi	r19, 0x30	; 48
    158a:	2a 95       	dec	r18
    158c:	e1 f7       	brne	.-8      	; 0x1586 <__ftoa_engine+0x1e>
    158e:	08 95       	ret
    1590:	9f 3f       	cpi	r25, 0xFF	; 255
    1592:	30 f0       	brcs	.+12     	; 0x15a0 <__ftoa_engine+0x38>
    1594:	80 38       	cpi	r24, 0x80	; 128
    1596:	71 05       	cpc	r23, r1
    1598:	61 05       	cpc	r22, r1
    159a:	09 f0       	breq	.+2      	; 0x159e <__ftoa_engine+0x36>
    159c:	3c 5f       	subi	r19, 0xFC	; 252
    159e:	3c 5f       	subi	r19, 0xFC	; 252
    15a0:	3d 93       	st	X+, r19
    15a2:	91 30       	cpi	r25, 0x01	; 1
    15a4:	08 f0       	brcs	.+2      	; 0x15a8 <__ftoa_engine+0x40>
    15a6:	80 68       	ori	r24, 0x80	; 128
    15a8:	91 1d       	adc	r25, r1
    15aa:	df 93       	push	r29
    15ac:	cf 93       	push	r28
    15ae:	1f 93       	push	r17
    15b0:	0f 93       	push	r16
    15b2:	ff 92       	push	r15
    15b4:	ef 92       	push	r14
    15b6:	19 2f       	mov	r17, r25
    15b8:	98 7f       	andi	r25, 0xF8	; 248
    15ba:	96 95       	lsr	r25
    15bc:	e9 2f       	mov	r30, r25
    15be:	96 95       	lsr	r25
    15c0:	96 95       	lsr	r25
    15c2:	e9 0f       	add	r30, r25
    15c4:	ff 27       	eor	r31, r31
    15c6:	e2 54       	subi	r30, 0x42	; 66
    15c8:	fe 4f       	sbci	r31, 0xFE	; 254
    15ca:	99 27       	eor	r25, r25
    15cc:	33 27       	eor	r19, r19
    15ce:	ee 24       	eor	r14, r14
    15d0:	ff 24       	eor	r15, r15
    15d2:	a7 01       	movw	r20, r14
    15d4:	e7 01       	movw	r28, r14
    15d6:	05 90       	lpm	r0, Z+
    15d8:	08 94       	sec
    15da:	07 94       	ror	r0
    15dc:	28 f4       	brcc	.+10     	; 0x15e8 <__ftoa_engine+0x80>
    15de:	36 0f       	add	r19, r22
    15e0:	e7 1e       	adc	r14, r23
    15e2:	f8 1e       	adc	r15, r24
    15e4:	49 1f       	adc	r20, r25
    15e6:	51 1d       	adc	r21, r1
    15e8:	66 0f       	add	r22, r22
    15ea:	77 1f       	adc	r23, r23
    15ec:	88 1f       	adc	r24, r24
    15ee:	99 1f       	adc	r25, r25
    15f0:	06 94       	lsr	r0
    15f2:	a1 f7       	brne	.-24     	; 0x15dc <__ftoa_engine+0x74>
    15f4:	05 90       	lpm	r0, Z+
    15f6:	07 94       	ror	r0
    15f8:	28 f4       	brcc	.+10     	; 0x1604 <__ftoa_engine+0x9c>
    15fa:	e7 0e       	add	r14, r23
    15fc:	f8 1e       	adc	r15, r24
    15fe:	49 1f       	adc	r20, r25
    1600:	56 1f       	adc	r21, r22
    1602:	c1 1d       	adc	r28, r1
    1604:	77 0f       	add	r23, r23
    1606:	88 1f       	adc	r24, r24
    1608:	99 1f       	adc	r25, r25
    160a:	66 1f       	adc	r22, r22
    160c:	06 94       	lsr	r0
    160e:	a1 f7       	brne	.-24     	; 0x15f8 <__ftoa_engine+0x90>
    1610:	05 90       	lpm	r0, Z+
    1612:	07 94       	ror	r0
    1614:	28 f4       	brcc	.+10     	; 0x1620 <__ftoa_engine+0xb8>
    1616:	f8 0e       	add	r15, r24
    1618:	49 1f       	adc	r20, r25
    161a:	56 1f       	adc	r21, r22
    161c:	c7 1f       	adc	r28, r23
    161e:	d1 1d       	adc	r29, r1
    1620:	88 0f       	add	r24, r24
    1622:	99 1f       	adc	r25, r25
    1624:	66 1f       	adc	r22, r22
    1626:	77 1f       	adc	r23, r23
    1628:	06 94       	lsr	r0
    162a:	a1 f7       	brne	.-24     	; 0x1614 <__ftoa_engine+0xac>
    162c:	05 90       	lpm	r0, Z+
    162e:	07 94       	ror	r0
    1630:	20 f4       	brcc	.+8      	; 0x163a <__ftoa_engine+0xd2>
    1632:	49 0f       	add	r20, r25
    1634:	56 1f       	adc	r21, r22
    1636:	c7 1f       	adc	r28, r23
    1638:	d8 1f       	adc	r29, r24
    163a:	99 0f       	add	r25, r25
    163c:	66 1f       	adc	r22, r22
    163e:	77 1f       	adc	r23, r23
    1640:	88 1f       	adc	r24, r24
    1642:	06 94       	lsr	r0
    1644:	a9 f7       	brne	.-22     	; 0x1630 <__ftoa_engine+0xc8>
    1646:	84 91       	lpm	r24, Z
    1648:	10 95       	com	r17
    164a:	17 70       	andi	r17, 0x07	; 7
    164c:	41 f0       	breq	.+16     	; 0x165e <__ftoa_engine+0xf6>
    164e:	d6 95       	lsr	r29
    1650:	c7 95       	ror	r28
    1652:	57 95       	ror	r21
    1654:	47 95       	ror	r20
    1656:	f7 94       	ror	r15
    1658:	e7 94       	ror	r14
    165a:	1a 95       	dec	r17
    165c:	c1 f7       	brne	.-16     	; 0x164e <__ftoa_engine+0xe6>
    165e:	e4 e6       	ldi	r30, 0x64	; 100
    1660:	f1 e0       	ldi	r31, 0x01	; 1
    1662:	68 94       	set
    1664:	15 90       	lpm	r1, Z+
    1666:	15 91       	lpm	r17, Z+
    1668:	35 91       	lpm	r19, Z+
    166a:	65 91       	lpm	r22, Z+
    166c:	95 91       	lpm	r25, Z+
    166e:	05 90       	lpm	r0, Z+
    1670:	7f e2       	ldi	r23, 0x2F	; 47
    1672:	73 95       	inc	r23
    1674:	e1 18       	sub	r14, r1
    1676:	f1 0a       	sbc	r15, r17
    1678:	43 0b       	sbc	r20, r19
    167a:	56 0b       	sbc	r21, r22
    167c:	c9 0b       	sbc	r28, r25
    167e:	d0 09       	sbc	r29, r0
    1680:	c0 f7       	brcc	.-16     	; 0x1672 <__ftoa_engine+0x10a>
    1682:	e1 0c       	add	r14, r1
    1684:	f1 1e       	adc	r15, r17
    1686:	43 1f       	adc	r20, r19
    1688:	56 1f       	adc	r21, r22
    168a:	c9 1f       	adc	r28, r25
    168c:	d0 1d       	adc	r29, r0
    168e:	7e f4       	brtc	.+30     	; 0x16ae <__ftoa_engine+0x146>
    1690:	70 33       	cpi	r23, 0x30	; 48
    1692:	11 f4       	brne	.+4      	; 0x1698 <__ftoa_engine+0x130>
    1694:	8a 95       	dec	r24
    1696:	e6 cf       	rjmp	.-52     	; 0x1664 <__ftoa_engine+0xfc>
    1698:	e8 94       	clt
    169a:	01 50       	subi	r16, 0x01	; 1
    169c:	30 f0       	brcs	.+12     	; 0x16aa <__ftoa_engine+0x142>
    169e:	08 0f       	add	r16, r24
    16a0:	0a f4       	brpl	.+2      	; 0x16a4 <__ftoa_engine+0x13c>
    16a2:	00 27       	eor	r16, r16
    16a4:	02 17       	cp	r16, r18
    16a6:	08 f4       	brcc	.+2      	; 0x16aa <__ftoa_engine+0x142>
    16a8:	20 2f       	mov	r18, r16
    16aa:	23 95       	inc	r18
    16ac:	02 2f       	mov	r16, r18
    16ae:	7a 33       	cpi	r23, 0x3A	; 58
    16b0:	28 f0       	brcs	.+10     	; 0x16bc <__ftoa_engine+0x154>
    16b2:	79 e3       	ldi	r23, 0x39	; 57
    16b4:	7d 93       	st	X+, r23
    16b6:	2a 95       	dec	r18
    16b8:	e9 f7       	brne	.-6      	; 0x16b4 <__ftoa_engine+0x14c>
    16ba:	10 c0       	rjmp	.+32     	; 0x16dc <__ftoa_engine+0x174>
    16bc:	7d 93       	st	X+, r23
    16be:	2a 95       	dec	r18
    16c0:	89 f6       	brne	.-94     	; 0x1664 <__ftoa_engine+0xfc>
    16c2:	06 94       	lsr	r0
    16c4:	97 95       	ror	r25
    16c6:	67 95       	ror	r22
    16c8:	37 95       	ror	r19
    16ca:	17 95       	ror	r17
    16cc:	17 94       	ror	r1
    16ce:	e1 18       	sub	r14, r1
    16d0:	f1 0a       	sbc	r15, r17
    16d2:	43 0b       	sbc	r20, r19
    16d4:	56 0b       	sbc	r21, r22
    16d6:	c9 0b       	sbc	r28, r25
    16d8:	d0 09       	sbc	r29, r0
    16da:	98 f0       	brcs	.+38     	; 0x1702 <__ftoa_engine+0x19a>
    16dc:	23 95       	inc	r18
    16de:	7e 91       	ld	r23, -X
    16e0:	73 95       	inc	r23
    16e2:	7a 33       	cpi	r23, 0x3A	; 58
    16e4:	08 f0       	brcs	.+2      	; 0x16e8 <__ftoa_engine+0x180>
    16e6:	70 e3       	ldi	r23, 0x30	; 48
    16e8:	7c 93       	st	X, r23
    16ea:	20 13       	cpse	r18, r16
    16ec:	b8 f7       	brcc	.-18     	; 0x16dc <__ftoa_engine+0x174>
    16ee:	7e 91       	ld	r23, -X
    16f0:	70 61       	ori	r23, 0x10	; 16
    16f2:	7d 93       	st	X+, r23
    16f4:	30 f0       	brcs	.+12     	; 0x1702 <__ftoa_engine+0x19a>
    16f6:	83 95       	inc	r24
    16f8:	71 e3       	ldi	r23, 0x31	; 49
    16fa:	7d 93       	st	X+, r23
    16fc:	70 e3       	ldi	r23, 0x30	; 48
    16fe:	2a 95       	dec	r18
    1700:	e1 f7       	brne	.-8      	; 0x16fa <__ftoa_engine+0x192>
    1702:	11 24       	eor	r1, r1
    1704:	ef 90       	pop	r14
    1706:	ff 90       	pop	r15
    1708:	0f 91       	pop	r16
    170a:	1f 91       	pop	r17
    170c:	cf 91       	pop	r28
    170e:	df 91       	pop	r29
    1710:	99 27       	eor	r25, r25
    1712:	87 fd       	sbrc	r24, 7
    1714:	90 95       	com	r25
    1716:	08 95       	ret

00001718 <strrev>:
    1718:	dc 01       	movw	r26, r24
    171a:	fc 01       	movw	r30, r24
    171c:	67 2f       	mov	r22, r23
    171e:	71 91       	ld	r23, Z+
    1720:	77 23       	and	r23, r23
    1722:	e1 f7       	brne	.-8      	; 0x171c <strrev+0x4>
    1724:	32 97       	sbiw	r30, 0x02	; 2
    1726:	04 c0       	rjmp	.+8      	; 0x1730 <strrev+0x18>
    1728:	7c 91       	ld	r23, X
    172a:	6d 93       	st	X+, r22
    172c:	70 83       	st	Z, r23
    172e:	62 91       	ld	r22, -Z
    1730:	ae 17       	cp	r26, r30
    1732:	bf 07       	cpc	r27, r31
    1734:	c8 f3       	brcs	.-14     	; 0x1728 <strrev+0x10>
    1736:	08 95       	ret

00001738 <__prologue_saves__>:
    1738:	2f 92       	push	r2
    173a:	3f 92       	push	r3
    173c:	4f 92       	push	r4
    173e:	5f 92       	push	r5
    1740:	6f 92       	push	r6
    1742:	7f 92       	push	r7
    1744:	8f 92       	push	r8
    1746:	9f 92       	push	r9
    1748:	af 92       	push	r10
    174a:	bf 92       	push	r11
    174c:	cf 92       	push	r12
    174e:	df 92       	push	r13
    1750:	ef 92       	push	r14
    1752:	ff 92       	push	r15
    1754:	0f 93       	push	r16
    1756:	1f 93       	push	r17
    1758:	cf 93       	push	r28
    175a:	df 93       	push	r29
    175c:	cd b7       	in	r28, 0x3d	; 61
    175e:	de b7       	in	r29, 0x3e	; 62
    1760:	ca 1b       	sub	r28, r26
    1762:	db 0b       	sbc	r29, r27
    1764:	0f b6       	in	r0, 0x3f	; 63
    1766:	f8 94       	cli
    1768:	de bf       	out	0x3e, r29	; 62
    176a:	0f be       	out	0x3f, r0	; 63
    176c:	cd bf       	out	0x3d, r28	; 61
    176e:	09 94       	ijmp

00001770 <__epilogue_restores__>:
    1770:	2a 88       	ldd	r2, Y+18	; 0x12
    1772:	39 88       	ldd	r3, Y+17	; 0x11
    1774:	48 88       	ldd	r4, Y+16	; 0x10
    1776:	5f 84       	ldd	r5, Y+15	; 0x0f
    1778:	6e 84       	ldd	r6, Y+14	; 0x0e
    177a:	7d 84       	ldd	r7, Y+13	; 0x0d
    177c:	8c 84       	ldd	r8, Y+12	; 0x0c
    177e:	9b 84       	ldd	r9, Y+11	; 0x0b
    1780:	aa 84       	ldd	r10, Y+10	; 0x0a
    1782:	b9 84       	ldd	r11, Y+9	; 0x09
    1784:	c8 84       	ldd	r12, Y+8	; 0x08
    1786:	df 80       	ldd	r13, Y+7	; 0x07
    1788:	ee 80       	ldd	r14, Y+6	; 0x06
    178a:	fd 80       	ldd	r15, Y+5	; 0x05
    178c:	0c 81       	ldd	r16, Y+4	; 0x04
    178e:	1b 81       	ldd	r17, Y+3	; 0x03
    1790:	aa 81       	ldd	r26, Y+2	; 0x02
    1792:	b9 81       	ldd	r27, Y+1	; 0x01
    1794:	ce 0f       	add	r28, r30
    1796:	d1 1d       	adc	r29, r1
    1798:	0f b6       	in	r0, 0x3f	; 63
    179a:	f8 94       	cli
    179c:	de bf       	out	0x3e, r29	; 62
    179e:	0f be       	out	0x3f, r0	; 63
    17a0:	cd bf       	out	0x3d, r28	; 61
    17a2:	ed 01       	movw	r28, r26
    17a4:	08 95       	ret

000017a6 <_exit>:
    17a6:	f8 94       	cli

000017a8 <__stop_program>:
    17a8:	ff cf       	rjmp	.-2      	; 0x17a8 <__stop_program>
